--------------------------------------------------------
--  Datei erstellt -Sonntag-Juni-16-2019   
--------------------------------------------------------
DROP SEQUENCE "COMPANY"."APEX$_WS_SEQ";
DROP SEQUENCE "COMPANY"."CONTR_KATEGORIE_ZAHLUNG_SEQ";
DROP SEQUENCE "COMPANY"."DEMO_CUST_SEQ";
DROP SEQUENCE "COMPANY"."DEMO_ORDER_ITEMS_SEQ";
DROP SEQUENCE "COMPANY"."DEMO_ORD_SEQ";
DROP SEQUENCE "COMPANY"."DEMO_PROD_SEQ";
DROP SEQUENCE "COMPANY"."DEPT_SEQ";
DROP SEQUENCE "COMPANY"."DL_IMP_SEQ";
DROP SEQUENCE "COMPANY"."EMP_SEQ";
DROP SEQUENCE "COMPANY"."IMP_BA_ALLG_BEL_SEQ";
DROP SEQUENCE "COMPANY"."IMP_BA_AUTOERSATZTEILE_SEQ";
DROP SEQUENCE "COMPANY"."IMP_BA_BEL_BUCH_SEQ";
DROP SEQUENCE "COMPANY"."IMP_BA_BEL_SEQ";
DROP SEQUENCE "COMPANY"."IMP_BA_BUSSGELDER_SEQ";
DROP SEQUENCE "COMPANY"."IMP_BA_ELEKTRONIK_SEQ";
DROP SEQUENCE "COMPANY"."IMP_BA_GRENZBELEGE_SEQ";
DROP SEQUENCE "COMPANY"."IMP_BA_HOTELRECHNUNGEN_SEQ";
DROP SEQUENCE "COMPANY"."IMP_BA_HOTELRECHNUNGEN_SEQ1";
DROP SEQUENCE "COMPANY"."IMP_BA_KRANKENKASSE_SEQ";
DROP SEQUENCE "COMPANY"."IMP_BA_OEFFENTL_TICKETS_SEQ";
DROP SEQUENCE "COMPANY"."IMP_BA_PARKTICKETS_SEQ";
DROP SEQUENCE "COMPANY"."IMP_BA_PARKTICKETS_SEQ1";
DROP SEQUENCE "COMPANY"."IMP_BA_SOFTWARE_SEQ";
DROP SEQUENCE "COMPANY"."IMP_BA_SOFTWARE_SEQ1";
DROP SEQUENCE "COMPANY"."IMP_BA_TANKSTELLE_SEQ";
DROP SEQUENCE "COMPANY"."IMP_BA_TELEFONKARTEN_SEQ";
DROP SEQUENCE "COMPANY"."IMP_BA_TEXTILREINIGUNG_SEQ";
DROP SEQUENCE "COMPANY"."IMP_TEL_MOBILCOM_RECH_SEQ1";
DROP SEQUENCE "COMPANY"."IMP_TEL_O2_SEQ";
DROP SEQUENCE "COMPANY"."INP_BELEGE_ALL_SEQ";
DROP SEQUENCE "COMPANY"."INP_BELEGE_ALL_SEQ1";
DROP SEQUENCE "COMPANY"."INP_BELEGE_POS_ALL_SEQ";
DROP SEQUENCE "COMPANY"."KTO_Girokonto_SEQ";
DROP SEQUENCE "COMPANY"."KTO_GIROKONTO_SEQ";
DROP SEQUENCE "COMPANY"."KTO_Girokonto_SEQ1";
DROP SEQUENCE "COMPANY"."KTO_Girokonto_SEQ2";
DROP SEQUENCE "COMPANY"."KTO_Girokonto_SEQ3";
DROP SEQUENCE "COMPANY"."KTO_Girokonto_SEQ4";
DROP SEQUENCE "COMPANY"."KTO_Girokonto_SEQ5";
DROP SEQUENCE "COMPANY"."KTO_Girokonto_SEQ6";
DROP SEQUENCE "COMPANY"."KTO_Girokonto_SEQ7";
DROP SEQUENCE "COMPANY"."KTO_Girokonto_SEQ8";
DROP SEQUENCE "COMPANY"."KTO_Girokonto_SE8";
DROP SEQUENCE "COMPANY"."KTO_KONTO_SEQ";
DROP SEQUENCE "COMPANY"."KTO_Kreditkarte_SEQ";
DROP SEQUENCE "COMPANY"."KTO_Kreditkarte_SEQ1";
DROP SEQUENCE "COMPANY"."KTO_Kreditkarte_SEQ2";
DROP SEQUENCE "COMPANY"."KTO_Kreditkarte_SEQ3";
DROP SEQUENCE "COMPANY"."KTO_Kreditkarte_SEQ4";
DROP SEQUENCE "COMPANY"."KTO_Paypal_SEQ2";
DROP SEQUENCE "COMPANY"."KTO_Tagesgeldkonto_SEQ2";
DROP SEQUENCE "COMPANY"."PP_Vorgang_SEQ1";
DROP SEQUENCE "COMPANY"."SEQ_ABSCHLUSSTYP";
DROP SEQUENCE "COMPANY"."SEQ_ADRESSE";
DROP SEQUENCE "COMPANY"."SEQ_ARBEITSTAGE";
DROP SEQUENCE "COMPANY"."SEQ_ARBEITSZEITEN";
DROP SEQUENCE "COMPANY"."SEQ_ARTIKEL";
DROP SEQUENCE "COMPANY"."SEQ_ARTIKELBESTANDTEILE";
DROP SEQUENCE "COMPANY"."SEQ_ARTIKELBESTANDTEILTYP";
DROP SEQUENCE "COMPANY"."SEQ_ARTIKELTYP";
DROP SEQUENCE "COMPANY"."SEQ_AUFGABE";
DROP SEQUENCE "COMPANY"."SEQ_BANK";
DROP SEQUENCE "COMPANY"."SEQ_BELEG";
DROP SEQUENCE "COMPANY"."SEQ_BELEGART";
DROP SEQUENCE "COMPANY"."SEQ_BELEGART_GRP";
DROP SEQUENCE "COMPANY"."SEQ_BELEGPOSITION";
DROP SEQUENCE "COMPANY"."SEQ_BELEGSEL";
DROP SEQUENCE "COMPANY"."SEQ_BESTELLUNG";
DROP SEQUENCE "COMPANY"."SEQ_BUCH";
DROP SEQUENCE "COMPANY"."SEQ_BUENDELUNG";
DROP SEQUENCE "COMPANY"."SEQ_EINSENDEAUFGABE";
DROP SEQUENCE "COMPANY"."SEQ_EINSENDEAUFGABENSTATUS";
DROP SEQUENCE "COMPANY"."SEQ_FRAGE";
DROP SEQUENCE "COMPANY"."SEQ_GESCHÄFTSPARTNER";
DROP SEQUENCE "COMPANY"."SEQ_GESCHÄFTSPARTNERTYP";
DROP SEQUENCE "COMPANY"."SEQ_HERSTELLER";
DROP SEQUENCE "COMPANY"."SEQ_INVENTARE";
DROP SEQUENCE "COMPANY"."SEQ_INVENTARTYP";
DROP SEQUENCE "COMPANY"."SEQ_KONTAKTTYP";
DROP SEQUENCE "COMPANY"."SEQ_LAGERORT";
DROP SEQUENCE "COMPANY"."SEQ_LOCATION";
DROP SEQUENCE "COMPANY"."SEQ_LOCATION_TYPE";
DROP SEQUENCE "COMPANY"."SEQ_MENGENEINHEIT";
DROP SEQUENCE "COMPANY"."SEQ_ORGANISATIONSEINHEIT";
DROP SEQUENCE "COMPANY"."SEQ_ORT";
DROP SEQUENCE "COMPANY"."SEQ_PACKUNGSTYP";
DROP SEQUENCE "COMPANY"."SEQ_PERSON";
DROP SEQUENCE "COMPANY"."SEQ_PLZ_ORT";
DROP SEQUENCE "COMPANY"."SEQ_PRODUKT";
DROP SEQUENCE "COMPANY"."SEQ_PROJEKT";
DROP SEQUENCE "COMPANY"."SEQ_PRUEFUNG";
DROP SEQUENCE "COMPANY"."SEQ_QUELLE";
DROP SEQUENCE "COMPANY"."SEQ_QUELLENTYP";
DROP SEQUENCE "COMPANY"."SEQ_RECHNUNG";
DROP SEQUENCE "COMPANY"."SEQ_RECHNUNGSTYP";
DROP SEQUENCE "COMPANY"."SEQ_REL_ARTIKEL_ARTIKELTYP";
DROP SEQUENCE "COMPANY"."SEQ_REL_ARTT_ARTT";
DROP SEQUENCE "COMPANY"."SEQ_REL_BELEG_INVENTAR";
DROP SEQUENCE "COMPANY"."SEQ_REL_BELEG_LOCATION";
DROP SEQUENCE "COMPANY"."SEQ_REL_BELEG_PRODUKT";
DROP SEQUENCE "COMPANY"."SEQ_REL_BEL_VERBRAUCHSMAT";
DROP SEQUENCE "COMPANY"."SEQ_REL_GESCHAEFTSP_KONT";
DROP SEQUENCE "COMPANY"."SEQ_REL_INVENTAR_ARTIKEL";
DROP SEQUENCE "COMPANY"."SEQ_REL_INVENTAR_INVENTARTYP";
DROP SEQUENCE "COMPANY"."SEQ_REL_LAGERORT_ARTIKEL";
DROP SEQUENCE "COMPANY"."SEQ_REL_RECHNG_STUNDEN";
DROP SEQUENCE "COMPANY"."SEQ_REL_RECHNUNG_BELEG";
DROP SEQUENCE "COMPANY"."SEQ_REL_RECHNUNG_STD";
DROP SEQUENCE "COMPANY"."SEQ_REL_STUNDENZETTEL_BELEG";
DROP SEQUENCE "COMPANY"."SEQ_STD_GROUP";
DROP SEQUENCE "COMPANY"."SEQ_STEUERSATZ";
DROP SEQUENCE "COMPANY"."SEQ_STUNDENZETTEL";
DROP SEQUENCE "COMPANY"."SEQ_T_KONTAKT";
DROP SEQUENCE "COMPANY"."SEQ_T_PACKUNGSTYP";
DROP SEQUENCE "COMPANY"."SEQ_T_PROJEKT";
DROP SEQUENCE "COMPANY"."SEQ_T_REL_FRAGE_LÖS";
DROP SEQUENCE "COMPANY"."SEQ_T_REL_INV_VERBRAUCHSMAT";
DROP SEQUENCE "COMPANY"."SEQ_T_REL_KONTAKT_KONTAKTTYP";
DROP SEQUENCE "COMPANY"."SEQ_T_REL_REZEPT_ARTIKEL";
DROP SEQUENCE "COMPANY"."SEQ_T_STD";
DROP SEQUENCE "COMPANY"."SEQ_T_STUNDENZETTEL";
DROP SEQUENCE "COMPANY"."SEQ_T_VERBRAUCHSMATERIAL";
DROP SEQUENCE "COMPANY"."SEQ_UMSATZART";
DROP SEQUENCE "COMPANY"."SEQ_VERBRAUCHSMATERIAL";
DROP SEQUENCE "COMPANY"."SEQ_VERBRAUCHSMAT_TYP";
DROP SEQUENCE "COMPANY"."SEQ_VERWENDUNGSZWECK";
DROP SEQUENCE "COMPANY"."T_ABL_ORDNER_PAGE_SEQ";
DROP SEQUENCE "COMPANY"."T_ABL_ORDNER_SEQ";
DROP SEQUENCE "COMPANY"."T_ARBEITSTAGE_SEQ";
DROP SEQUENCE "COMPANY"."T_BANKKONTO_SEQ";
DROP SEQUENCE "COMPANY"."T_BEITRAG_SEQ";
DROP SEQUENCE "COMPANY"."T_BEITRAG_SEQ1";
DROP SEQUENCE "COMPANY"."T_BELEGART_GRP_SEQ";
DROP SEQUENCE "COMPANY"."T_BELEGART_SEQ";
DROP SEQUENCE "COMPANY"."T_BELEG_SEQ1";
DROP SEQUENCE "COMPANY"."T_GESCHAEFTSPARTNER_SEQ";
DROP SEQUENCE "COMPANY"."T_INVENTARE_SEQ";
DROP SEQUENCE "COMPANY"."T_INVENTARTYP_SEQ";
DROP SEQUENCE "COMPANY"."T_KONTENPLAN_KONTEN_GRP_SEQ";
DROP SEQUENCE "COMPANY"."T_KONTENPLAN_KONTEN_KAT_GRP_S";
DROP SEQUENCE "COMPANY"."T_KONTENPLAN_KONTEN_SEQ";
DROP SEQUENCE "COMPANY"."T_KONTENPLAN_KONTEN_SEQ1";
DROP SEQUENCE "COMPANY"."T_KONTOAUSZUG_BUCH_SEQ";
DROP SEQUENCE "COMPANY"."T_KONTO_AUSZUG_SEQ";
DROP SEQUENCE "COMPANY"."T_KONTO_BUCH_KAT_SEQ";
DROP SEQUENCE "COMPANY"."T_KONTO_BUCH_SEQ";
DROP SEQUENCE "COMPANY"."T_KONTROLLE_SEQ";
DROP SEQUENCE "COMPANY"."T_LAND_SEQ";
DROP SEQUENCE "COMPANY"."T_LEX_IMP_SEQ";
DROP SEQUENCE "COMPANY"."T_LEX_SEQ";
DROP SEQUENCE "COMPANY"."T_LOCATION_TYPE_SEQ";
DROP SEQUENCE "COMPANY"."T_OFFENE_EINGANGSRECHNUNGEN_S";
DROP SEQUENCE "COMPANY"."T_PROJEKT_ART_SEQ";
DROP SEQUENCE "COMPANY"."T_PROJEKT_SEQ";
DROP SEQUENCE "COMPANY"."T_RECHNUNG_SEQ";
DROP SEQUENCE "COMPANY"."T_REL_IMP_BEL_BEL_SEQ";
DROP SEQUENCE "COMPANY"."T_REL_IMP_BEL_BEL_SEQ_V";
DROP SEQUENCE "COMPANY"."T_REL_IMP_BEL_BEL_SEQ1";
DROP SEQUENCE "COMPANY"."T_REL_INVENTAR_ZAHLUNG_SEQ";
DROP SEQUENCE "COMPANY"."T_REL_KONT_BUCH_IMP_BEL_SEQ";
DROP SEQUENCE "COMPANY"."T_REL_KONT_BUCH_KONT_BUCH_SEQ1";
DROP SEQUENCE "COMPANY"."T_REL_KONT_BUCH_LEX_BUCH_SEQ";
DROP SEQUENCE "COMPANY"."T_REL_KONTENPLAN_KTO_KTO_KAT_";
DROP SEQUENCE "COMPANY"."T_REL_KONTO_AUSZUG_GIR_SEQ";
DROP SEQUENCE "COMPANY"."T_REL_PROJEKT_ZAHLUNG_SEQ";
DROP SEQUENCE "COMPANY"."T_REL_RECHNUNG_STUNDENZETTEL_1";
DROP SEQUENCE "COMPANY"."T_REL_RECHNUNG_ZAHLUNG_SEQ";
DROP SEQUENCE "COMPANY"."T_REL_STEUER_LOHN_ZAHL_SEQ";
DROP SEQUENCE "COMPANY"."T_REL_STEUER_MONAT_BEL_SEQ";
DROP SEQUENCE "COMPANY"."T_REL_STEUER_MONAT_RECH_SEQ";
DROP SEQUENCE "COMPANY"."T_STD_GROUP_SEQ";
DROP SEQUENCE "COMPANY"."T_STD_SEQ";
DROP SEQUENCE "COMPANY"."T_STEUER_KRANKENKASSE_SEQ";
DROP SEQUENCE "COMPANY"."T_STEUER_LOHN_SEQ";
DROP SEQUENCE "COMPANY"."T_STEUER_LOHNSTEUERKARTE_SEQ";
DROP SEQUENCE "COMPANY"."T_STEUER_MONAT_SEQ";
DROP SEQUENCE "COMPANY"."T_STEUERNUMMER_SEQ";
DROP SEQUENCE "COMPANY"."T_STEUERSATZ_SEQ";
DROP SEQUENCE "COMPANY"."T_STEUER_VORANMLDG_SEQ";
DROP SEQUENCE "COMPANY"."T_STROMABLESUNG_SEQ";
DROP SEQUENCE "COMPANY"."T_WAEHRUNG_SEQ";
DROP TABLE "COMPANY"."APEX_GEO" cascade constraints;
DROP TABLE "COMPANY"."APEX_GEO_BASIS" cascade constraints;
DROP TABLE "COMPANY"."APEX_GEO_2" cascade constraints;
DROP TABLE "COMPANY"."BASIS_WN_PR" cascade constraints;
DROP TABLE "COMPANY"."BASIS_WN_PR1" cascade constraints;
DROP TABLE "COMPANY"."BEST_POS" cascade constraints;
DROP TABLE "COMPANY"."CONTR_KATEGORIE_ZAHLUNG" cascade constraints;
DROP TABLE "COMPANY"."DEMO_CONSTRAINT_LOOKUP" cascade constraints;
DROP TABLE "COMPANY"."DEMO_CUSTOMERS" cascade constraints;
DROP TABLE "COMPANY"."DEMO_ORDER_ITEMS" cascade constraints;
DROP TABLE "COMPANY"."DEMO_ORDERS" cascade constraints;
DROP TABLE "COMPANY"."DEMO_PRODUCT_INFO" cascade constraints;
DROP TABLE "COMPANY"."DEMO_STATES" cascade constraints;
DROP TABLE "COMPANY"."DEMO_TAGS" cascade constraints;
DROP TABLE "COMPANY"."DEMO_TAGS_SUM" cascade constraints;
DROP TABLE "COMPANY"."DEMO_TAGS_TYPE_SUM" cascade constraints;
DROP TABLE "COMPANY"."DEPT" cascade constraints;
DROP TABLE "COMPANY"."DL_IMP" cascade constraints;
DROP TABLE "COMPANY"."DL_IMP1" cascade constraints;
DROP TABLE "COMPANY"."EMP" cascade constraints;
DROP TABLE "COMPANY"."IMP_BA_ADDRESSEN" cascade constraints;
DROP TABLE "COMPANY"."IMP_BA_ALLG_BEL" cascade constraints;
DROP TABLE "COMPANY"."IMP_BA_ALLG_BEL1_SICH" cascade constraints;
DROP TABLE "COMPANY"."IMP_BA_AUTOERSATZTEILE" cascade constraints;
DROP TABLE "COMPANY"."IMP_BA_BEL_BUCH" cascade constraints;
DROP TABLE "COMPANY"."IMP_BA_BEL_DET" cascade constraints;
DROP TABLE "COMPANY"."IMP_BA_BUSSGELDER" cascade constraints;
DROP TABLE "COMPANY"."IMP_BA_CARMIETE" cascade constraints;
DROP TABLE "COMPANY"."IMP_BA_COWORKING" cascade constraints;
DROP TABLE "COMPANY"."IMP_BA_ELEKTRONIK" cascade constraints;
DROP TABLE "COMPANY"."IMP_BA_GRENZBELEGE" cascade constraints;
DROP TABLE "COMPANY"."IMP_BA_HEIZUNGSABRECHNUNG" cascade constraints;
DROP TABLE "COMPANY"."IMP_BA_HOTELRECHNUNGEN" cascade constraints;
DROP TABLE "COMPANY"."IMP_BA_KFZ_VERSICHERUNGEN" cascade constraints;
DROP TABLE "COMPANY"."IMP_BA_KRANKENKASSE" cascade constraints;
DROP TABLE "COMPANY"."IMP_BA_OEFFENTL_TICKETS" cascade constraints;
DROP TABLE "COMPANY"."IMP_BA_PARKTICKETS" cascade constraints;
DROP TABLE "COMPANY"."IMP_BA_SOFTWARE" cascade constraints;
DROP TABLE "COMPANY"."IMP_BA_SONSTIGE_BELEGE" cascade constraints;
DROP TABLE "COMPANY"."IMP_BA_STEUER" cascade constraints;
DROP TABLE "COMPANY"."IMP_BA_STEUER_2016" cascade constraints;
DROP TABLE "COMPANY"."IMP_BA_TANKSTELLE" cascade constraints;
DROP TABLE "COMPANY"."IMP_BA_TELEFONKARTEN" cascade constraints;
DROP TABLE "COMPANY"."IMP_BA_TEXTILREINIGUNG" cascade constraints;
DROP TABLE "COMPANY"."IMP_BA_UNTERHALTUNG" cascade constraints;
DROP TABLE "COMPANY"."IMP_GEO" cascade constraints;
DROP TABLE "COMPANY"."IMP_KRED_OV_OLD" cascade constraints;
DROP TABLE "COMPANY"."IMP_KTO_GIR" cascade constraints;
DROP TABLE "COMPANY"."IMP_KTO_KRED" cascade constraints;
DROP TABLE "COMPANY"."IMP_TEL_MOBILCOM_RECH" cascade constraints;
DROP TABLE "COMPANY"."IMP_TEL_MOBILCOM_RECH_DET" cascade constraints;
DROP TABLE "COMPANY"."IMP_TEL_MOBILCOM_RECH_OV" cascade constraints;
DROP TABLE "COMPANY"."IMP_TEL_O2" cascade constraints;
DROP TABLE "COMPANY"."IMP_TEL_VODAFONE" cascade constraints;
DROP TABLE "COMPANY"."INP_BELEGE_ALL" cascade constraints;
DROP TABLE "COMPANY"."INP_BELEGE_POS_ALL" cascade constraints;
DROP TABLE "COMPANY"."KTO_Girokonto" cascade constraints;
DROP TABLE "COMPANY"."KTO_Kreditkarte" cascade constraints;
DROP TABLE "COMPANY"."KTO_Paypal" cascade constraints;
DROP TABLE "COMPANY"."KTO_Tagesgeldkonto" cascade constraints;
DROP TABLE "COMPANY"."PP_Download" cascade constraints;
DROP TABLE "COMPANY"."PP_Vorgang" cascade constraints;
DROP TABLE "COMPANY"."PP_Vorgang_Download" cascade constraints;
DROP TABLE "COMPANY"."STD_Kontotyp" cascade constraints;
DROP TABLE "COMPANY"."STD_Oberkategorie" cascade constraints;
DROP TABLE "COMPANY"."STD_Verwendungszweck" cascade constraints;
DROP TABLE "COMPANY"."T_ABL_ORDNER" cascade constraints;
DROP TABLE "COMPANY"."T_ABL_ORDNER_PAGE" cascade constraints;
DROP TABLE "COMPANY"."T_ABSCHLUSSTYP" cascade constraints;
DROP TABLE "COMPANY"."T_ADRESSE" cascade constraints;
DROP TABLE "COMPANY"."T_ARBEITSTAGE" cascade constraints;
DROP TABLE "COMPANY"."T_ARBEITSZEITEN" cascade constraints;
DROP TABLE "COMPANY"."T_ARTIKEL" cascade constraints;
DROP TABLE "COMPANY"."T_ARTIKELBESTANDTEILE" cascade constraints;
DROP TABLE "COMPANY"."T_ARTIKELBESTANDTEILTYP" cascade constraints;
DROP TABLE "COMPANY"."T_ARTIKELTYP" cascade constraints;
DROP TABLE "COMPANY"."T_AUDI_FIN_VERTRAG_HAUPT_MERK" cascade constraints;
DROP TABLE "COMPANY"."T_AUDI_FIN_VERTRAG_POS" cascade constraints;
DROP TABLE "COMPANY"."T_AUFGABE" cascade constraints;
DROP TABLE "COMPANY"."T_BANK" cascade constraints;
DROP TABLE "COMPANY"."T_BANKKONTO" cascade constraints;
DROP TABLE "COMPANY"."T_BARGELD" cascade constraints;
DROP TABLE "COMPANY"."T_BEITRAG" cascade constraints;
DROP TABLE "COMPANY"."T_BELEG" cascade constraints;
DROP TABLE "COMPANY"."T_BELEGART" cascade constraints;
DROP TABLE "COMPANY"."T_BELEGART_GRP" cascade constraints;
DROP TABLE "COMPANY"."T_BELEGPOSITION" cascade constraints;
DROP TABLE "COMPANY"."T_BELEGSEL" cascade constraints;
DROP TABLE "COMPANY"."T_BESTELLUNG" cascade constraints;
DROP TABLE "COMPANY"."T_BILD_BA" cascade constraints;
DROP TABLE "COMPANY"."T_BUCH" cascade constraints;
DROP TABLE "COMPANY"."T_BUCH_ABGL" cascade constraints;
DROP TABLE "COMPANY"."T_BUCH_ABGL1" cascade constraints;
DROP TABLE "COMPANY"."T_BUCH_ABGL2" cascade constraints;
DROP TABLE "COMPANY"."T_BUENDELUNG" cascade constraints;
DROP TABLE "COMPANY"."T_COMP" cascade constraints;
DROP TABLE "COMPANY"."T_DAT" cascade constraints;
DROP TABLE "COMPANY"."T_EINSENDEAUFGABE" cascade constraints;
DROP TABLE "COMPANY"."T_EINSENDEAUFGABENSTATUS" cascade constraints;
DROP TABLE "COMPANY"."T_ERF_BEL_KOMP" cascade constraints;
DROP TABLE "COMPANY"."T_ERF_BEL_KOMP_DET" cascade constraints;
DROP TABLE "COMPANY"."T_ERF_BEL_KRANKENKASSE" cascade constraints;
DROP TABLE "COMPANY"."TEST" cascade constraints;
DROP TABLE "COMPANY"."T_FARBE" cascade constraints;
DROP TABLE "COMPANY"."T_FRAGE" cascade constraints;
DROP TABLE "COMPANY"."T_FREMDWAEHRUNG" cascade constraints;
DROP TABLE "COMPANY"."T_FRMDW_UMTK" cascade constraints;
DROP TABLE "COMPANY"."T_GESCHAEFTSPARTNER" cascade constraints;
DROP TABLE "COMPANY"."T_GESCHAEFTSPARTNERTYP" cascade constraints;
DROP TABLE "COMPANY"."T_HERSTELLER" cascade constraints;
DROP TABLE "COMPANY"."T_IMP_BANK2" cascade constraints;
DROP TABLE "COMPANY"."T_IMP_BANK3" cascade constraints;
DROP TABLE "COMPANY"."T_IMP_BANK4" cascade constraints;
DROP TABLE "COMPANY"."T_IMP_BANK5" cascade constraints;
DROP TABLE "COMPANY"."T_IMP_BANK6" cascade constraints;
DROP TABLE "COMPANY"."T_IMP_BANK7" cascade constraints;
DROP TABLE "COMPANY"."T_IMP_BEL" cascade constraints;
DROP TABLE "COMPANY"."T_IMP_KRE_062017" cascade constraints;
DROP TABLE "COMPANY"."T_IMP_KTO_062017" cascade constraints;
DROP TABLE "COMPANY"."T_INV_COMP" cascade constraints;
DROP TABLE "COMPANY"."T_INVENTARE" cascade constraints;
DROP TABLE "COMPANY"."T_INVENTARTYP" cascade constraints;
DROP TABLE "COMPANY"."T_KONTAKT" cascade constraints;
DROP TABLE "COMPANY"."T_KONTAKTTYP" cascade constraints;
DROP TABLE "COMPANY"."T_KONTENPLAN" cascade constraints;
DROP TABLE "COMPANY"."T_KONTENPLAN_KONTEN" cascade constraints;
DROP TABLE "COMPANY"."T_KONTENPLAN_KONTEN_GRP" cascade constraints;
DROP TABLE "COMPANY"."T_KONTENPLAN_KONTEN_KAT" cascade constraints;
DROP TABLE "COMPANY"."T_KONTENPLAN_KONTEN_KAT_GRP" cascade constraints;
DROP TABLE "COMPANY"."T_KONTENPLAN_KONTEN_KL" cascade constraints;
DROP TABLE "COMPANY"."T_KONTENPLAN_KONTEN_TYP" cascade constraints;
DROP TABLE "COMPANY"."T_KONTO_AUSZUG" cascade constraints;
DROP TABLE "COMPANY"."T_KONTO_BUCH" cascade constraints;
DROP TABLE "COMPANY"."T_KONTO_BUCH_KAT" cascade constraints;
DROP TABLE "COMPANY"."T_KONTROLLE" cascade constraints;
DROP TABLE "COMPANY"."T_LAGERORT" cascade constraints;
DROP TABLE "COMPANY"."T_LAND" cascade constraints;
DROP TABLE "COMPANY"."T_LEHRGANG" cascade constraints;
DROP TABLE "COMPANY"."T_LEX" cascade constraints;
DROP TABLE "COMPANY"."T_LEX_IMP" cascade constraints;
DROP TABLE "COMPANY"."T_LIST" cascade constraints;
DROP TABLE "COMPANY"."T_LOCATION" cascade constraints;
DROP TABLE "COMPANY"."T_LOCATION_TYPE" cascade constraints;
DROP TABLE "COMPANY"."T_LÖSUNG" cascade constraints;
DROP TABLE "COMPANY"."T_MATCH" cascade constraints;
DROP TABLE "COMPANY"."T_MENGENEINHEIT" cascade constraints;
DROP TABLE "COMPANY"."T_OFFENE_EINGANGSRECHNUNGEN" cascade constraints;
DROP TABLE "COMPANY"."T_ORGANISATIONSEINHEIT" cascade constraints;
DROP TABLE "COMPANY"."T_ORT" cascade constraints;
DROP TABLE "COMPANY"."T_PACKUNGSTYP" cascade constraints;
DROP TABLE "COMPANY"."T_PERSON" cascade constraints;
DROP TABLE "COMPANY"."T_PLZ_ORT" cascade constraints;
DROP TABLE "COMPANY"."T_PRODUKT" cascade constraints;
DROP TABLE "COMPANY"."T_PROJEKT" cascade constraints;
DROP TABLE "COMPANY"."T_PROJEKT_ART" cascade constraints;
DROP TABLE "COMPANY"."T_PRUEFUNG" cascade constraints;
DROP TABLE "COMPANY"."T_QUELLE" cascade constraints;
DROP TABLE "COMPANY"."T_QUELLENTYP" cascade constraints;
DROP TABLE "COMPANY"."T_RECHNUNG" cascade constraints;
DROP TABLE "COMPANY"."T_RECHNUNGSTYP" cascade constraints;
DROP TABLE "COMPANY"."T_REL_ARTIKEL_ARTIKELTYP" cascade constraints;
DROP TABLE "COMPANY"."T_REL_ARTIKELTYP_ARTIKELTYP" cascade constraints;
DROP TABLE "COMPANY"."T_REL_BARGELD_BELEG" cascade constraints;
DROP TABLE "COMPANY"."T_REL_BELEGART_GRP" cascade constraints;
DROP TABLE "COMPANY"."T_REL_BELEG_ARTIKEL" cascade constraints;
DROP TABLE "COMPANY"."T_REL_BELEG_INVENTAR" cascade constraints;
DROP TABLE "COMPANY"."T_REL_BELEG_LOCATION" cascade constraints;
DROP TABLE "COMPANY"."T_REL_BELEGPOS_ARTIKEL" cascade constraints;
DROP TABLE "COMPANY"."T_REL_BELEG_PRODUKT" cascade constraints;
DROP TABLE "COMPANY"."T_REL_BEL_KONT_ADR" cascade constraints;
DROP TABLE "COMPANY"."T_REL_BEL_KONT_BUCH" cascade constraints;
DROP TABLE "COMPANY"."T_REL_BEL_VERBRAUCHSMAT" cascade constraints;
DROP TABLE "COMPANY"."T_REL_FRAGE_LÖS" cascade constraints;
DROP TABLE "COMPANY"."T_REL_GESCHAEFTSP_KONT" cascade constraints;
DROP TABLE "COMPANY"."T_REL_GESCHAEFTSP_KUNR" cascade constraints;
DROP TABLE "COMPANY"."T_REL_IMP_BEL_BEL" cascade constraints;
DROP TABLE "COMPANY"."T_REL_INVENTAR_ARTIKEL" cascade constraints;
DROP TABLE "COMPANY"."T_REL_INVENTAR_BARZAHL" cascade constraints;
DROP TABLE "COMPANY"."T_REL_INVENTAR_INVENTARTYP" cascade constraints;
DROP TABLE "COMPANY"."T_REL_INVENTAR_ZAHLUNG" cascade constraints;
DROP TABLE "COMPANY"."T_REL_INV_VERBRAUCHSMAT" cascade constraints;
DROP TABLE "COMPANY"."T_REL_KONTAKT_KONTAKTTYP" cascade constraints;
DROP TABLE "COMPANY"."T_REL_KONTAKTPERSON_ADRESSE" cascade constraints;
DROP TABLE "COMPANY"."T_REL_KONT_BUCH_IMP_BEL" cascade constraints;
DROP TABLE "COMPANY"."T_REL_KONT_BUCH_KONT_BUCH" cascade constraints;
DROP TABLE "COMPANY"."T_REL_KONT_BUCH_LEX_BUCH" cascade constraints;
DROP TABLE "COMPANY"."T_REL_KONTENPLAN_KTO_KTO_KAT" cascade constraints;
DROP TABLE "COMPANY"."T_REL_KONTO_AUSZUG_BILD" cascade constraints;
DROP TABLE "COMPANY"."T_REL_KONTO_AUSZUG_GIR" cascade constraints;
DROP TABLE "COMPANY"."T_REL_LAGERORT_ARTIKEL" cascade constraints;
DROP TABLE "COMPANY"."T_REL_LOCATION_ADRESSE" cascade constraints;
DROP TABLE "COMPANY"."T_REL_PRODUKT_ARTIKEL" cascade constraints;
DROP TABLE "COMPANY"."T_REL_PRODUKT_ENTNAHME" cascade constraints;
DROP TABLE "COMPANY"."T_REL_PROJEKT_LOCATION" cascade constraints;
DROP TABLE "COMPANY"."T_REL_PROJEKT_ZAHLUNG" cascade constraints;
DROP TABLE "COMPANY"."T_REL_RECHNG_STUNDEN" cascade constraints;
DROP TABLE "COMPANY"."T_REL_RECHNUNG_BELEG" cascade constraints;
DROP TABLE "COMPANY"."T_REL_RECHNUNG_STUNDENZETTEL" cascade constraints;
DROP TABLE "COMPANY"."T_REL_RECHNUNG_ZAHLUNG" cascade constraints;
DROP TABLE "COMPANY"."T_REL_REZEPT_ARTIKEL" cascade constraints;
DROP TABLE "COMPANY"."T_REL_STEUER_LOHN_ZAHL" cascade constraints;
DROP TABLE "COMPANY"."T_REL_STEUER_MONAT_BEL" cascade constraints;
DROP TABLE "COMPANY"."T_REL_STEUER_MONAT_RECH" cascade constraints;
DROP TABLE "COMPANY"."T_REL_STEUER_SATZ_GÜLT" cascade constraints;
DROP TABLE "COMPANY"."T_REL_STUNDEN_BELEG" cascade constraints;
DROP TABLE "COMPANY"."T_REL_STUNDENZETTEL_BELEG" cascade constraints;
DROP TABLE "COMPANY"."T_STD" cascade constraints;
DROP TABLE "COMPANY"."T_STD_GROUP" cascade constraints;
DROP TABLE "COMPANY"."T_STEUER_KRANKENKASSE" cascade constraints;
DROP TABLE "COMPANY"."T_STEUER_LOHN" cascade constraints;
DROP TABLE "COMPANY"."T_STEUER_LOHNSTEUERKARTE" cascade constraints;
DROP TABLE "COMPANY"."T_STEUER_MONAT" cascade constraints;
DROP TABLE "COMPANY"."T_STEUERNUMMER" cascade constraints;
DROP TABLE "COMPANY"."T_STEUERSATZ" cascade constraints;
DROP TABLE "COMPANY"."T_STEUER_SATZ_LEX" cascade constraints;
DROP TABLE "COMPANY"."T_STEUER_VORANMLDG" cascade constraints;
DROP TABLE "COMPANY"."T_STROMABLESUNG" cascade constraints;
DROP TABLE "COMPANY"."T_STUNDENZETTEL" cascade constraints;
DROP TABLE "COMPANY"."T_TEMP_BELEG" cascade constraints;
DROP TABLE "COMPANY"."T_TERMIN" cascade constraints;
DROP TABLE "COMPANY"."T_UMSATZART" cascade constraints;
DROP TABLE "COMPANY"."T_UMTAUSCHKURS" cascade constraints;
DROP TABLE "COMPANY"."T_VERBRAUCHSMATERIAL" cascade constraints;
DROP TABLE "COMPANY"."T_VERBRAUCHSMAT_TYP" cascade constraints;
DROP TABLE "COMPANY"."T_VERWENDUNGSZWECK" cascade constraints;
DROP TABLE "COMPANY"."T_WAEHRUNG" cascade constraints;
DROP TABLE "COMPANY"."T_WARENBESTAND" cascade constraints;
DROP TABLE "COMPANY"."T_WARENBEWEGUNG" cascade constraints;
DROP TABLE "COMPANY"."T_WARENEINGANG" cascade constraints;
DROP TABLE "COMPANY"."T_WARENENTNAHME" cascade constraints;
DROP VIEW "COMPANY"."V_ADRESSE";
DROP VIEW "COMPANY"."V_ALL_KONT_BUCH";
DROP VIEW "COMPANY"."V_BELEGDAT";
DROP VIEW "COMPANY"."V_BEL_RE";
DROP VIEW "COMPANY"."V_BUCHUNG";
DROP VIEW "COMPANY"."V_BUCHUNGSTATUS";
DROP VIEW "COMPANY"."V_CHECK_GIR";
DROP VIEW "COMPANY"."V_CHECK_KRED";
DROP VIEW "COMPANY"."V_CNT_OK_LEX";
DROP VIEW "COMPANY"."V_GESCHAEFTSPARTNER";
DROP VIEW "COMPANY"."V_GROUPING_SETS";
DROP VIEW "COMPANY"."V_IMP_BEL_ZUS";
DROP VIEW "COMPANY"."V_IMP_TEL_CONTROL";
DROP VIEW "COMPANY"."V_KONTEN_IMP_CHECK";
DROP VIEW "COMPANY"."V_KONTEN_ZUS";
DROP VIEW "COMPANY"."V_KONTR_CNT_LEX_ZAHL";
DROP VIEW "COMPANY"."V_KONTR_CNT_LEX_ZAHL_bel";
DROP VIEW "COMPANY"."V_KONTR_DUPL_BUCHUNGSTEXT";
DROP VIEW "COMPANY"."V_KONTR_DUPL_DATUM_BETRAG";
DROP VIEW "COMPANY"."V_KONTR_OK_LEX";
DROP VIEW "COMPANY"."V_KONTROLLE";
DROP VIEW "COMPANY"."V_KTO_STAND_GIR";
DROP VIEW "COMPANY"."V_LEX_BUCH_CHECK";
DROP VIEW "COMPANY"."V_LEX_BUCH_KTO";
DROP VIEW "COMPANY"."V_LOCATION";
DROP VIEW "COMPANY"."V_RATIO";
DROP VIEW "COMPANY"."V_RENR";
DROP VIEW "COMPANY"."V_ROLLUP";
DROP VIEW "COMPANY"."V_STEUER_GES";
DROP VIEW "COMPANY"."V_T_BELEG";
DROP VIEW "COMPANY"."V_T_BELEG_DAT";
DROP VIEW "COMPANY"."V_ZAHLUNGSWIEDERHOLUNG";
DROP PROCEDURE "COMPANY"."PR_INP_BEL";
DROP PROCEDURE "COMPANY"."PR_INP_BEL_POS1";
DROP PROCEDURE "COMPANY"."P_SET_NAECHSTE_ZAHLUNG";
DROP PROCEDURE "COMPANY"."T_BANK_BELEG_PK";
DROP PACKAGE "COMPANY"."PKG_BELEG";
DROP PACKAGE "COMPANY"."PKG_IMP_BA";
DROP PACKAGE "COMPANY"."PKG_IMP_GIR";
DROP PACKAGE "COMPANY"."PKG_IMP_KRED";
DROP PACKAGE "COMPANY"."PKG_IMP_PAYPAL";
DROP PACKAGE "COMPANY"."PKG_IMP_TEL";
DROP PACKAGE "COMPANY"."PKG_LEX";
DROP PACKAGE "COMPANY"."PKG_RECHNUNG";
DROP PACKAGE "COMPANY"."PKG_SERVICES";
DROP PACKAGE "COMPANY"."SAMPLE_DATA_PKG";
DROP PACKAGE "COMPANY"."SAMPLE_PKG";
DROP PACKAGE BODY "COMPANY"."PKG_BELEG";
DROP PACKAGE BODY "COMPANY"."PKG_IMP_BA";
DROP PACKAGE BODY "COMPANY"."PKG_IMP_GIR";
DROP PACKAGE BODY "COMPANY"."PKG_IMP_KRED";
DROP PACKAGE BODY "COMPANY"."PKG_IMP_PAYPAL";
DROP PACKAGE BODY "COMPANY"."PKG_IMP_TEL";
DROP PACKAGE BODY "COMPANY"."PKG_LEX";
DROP PACKAGE BODY "COMPANY"."PKG_RECHNUNG";
DROP PACKAGE BODY "COMPANY"."PKG_SERVICES";
DROP PACKAGE BODY "COMPANY"."SAMPLE_DATA_PKG";
DROP PACKAGE BODY "COMPANY"."SAMPLE_PKG";
--------------------------------------------------------
--  DDL for Sequence APEX$_WS_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "COMPANY"."APEX$_WS_SEQ"  MINVALUE 100 MAXVALUE 999999999999999999999999999 INCREMENT BY 1 START WITH 100 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence CONTR_KATEGORIE_ZAHLUNG_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "COMPANY"."CONTR_KATEGORIE_ZAHLUNG_SEQ"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 3201 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence DEMO_CUST_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "COMPANY"."DEMO_CUST_SEQ"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 100 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence DEMO_ORDER_ITEMS_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "COMPANY"."DEMO_ORDER_ITEMS_SEQ"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 220 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence DEMO_ORD_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "COMPANY"."DEMO_ORD_SEQ"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 11 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence DEMO_PROD_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "COMPANY"."DEMO_PROD_SEQ"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 100 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence DEPT_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "COMPANY"."DEPT_SEQ"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 50 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence DL_IMP_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "COMPANY"."DL_IMP_SEQ"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 6701 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence EMP_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "COMPANY"."EMP_SEQ"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 8000 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence IMP_BA_ALLG_BEL_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "COMPANY"."IMP_BA_ALLG_BEL_SEQ"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 841 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence IMP_BA_AUTOERSATZTEILE_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "COMPANY"."IMP_BA_AUTOERSATZTEILE_SEQ"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence IMP_BA_BEL_BUCH_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "COMPANY"."IMP_BA_BEL_BUCH_SEQ"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence IMP_BA_BEL_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "COMPANY"."IMP_BA_BEL_SEQ"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 2121 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence IMP_BA_BUSSGELDER_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "COMPANY"."IMP_BA_BUSSGELDER_SEQ"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence IMP_BA_ELEKTRONIK_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "COMPANY"."IMP_BA_ELEKTRONIK_SEQ"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 41 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence IMP_BA_GRENZBELEGE_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "COMPANY"."IMP_BA_GRENZBELEGE_SEQ"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence IMP_BA_HOTELRECHNUNGEN_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "COMPANY"."IMP_BA_HOTELRECHNUNGEN_SEQ"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 21 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence IMP_BA_HOTELRECHNUNGEN_SEQ1
--------------------------------------------------------

   CREATE SEQUENCE  "COMPANY"."IMP_BA_HOTELRECHNUNGEN_SEQ1"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 159 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence IMP_BA_KRANKENKASSE_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "COMPANY"."IMP_BA_KRANKENKASSE_SEQ"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 81 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence IMP_BA_OEFFENTL_TICKETS_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "COMPANY"."IMP_BA_OEFFENTL_TICKETS_SEQ"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 41 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence IMP_BA_PARKTICKETS_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "COMPANY"."IMP_BA_PARKTICKETS_SEQ"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 544 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence IMP_BA_PARKTICKETS_SEQ1
--------------------------------------------------------

   CREATE SEQUENCE  "COMPANY"."IMP_BA_PARKTICKETS_SEQ1"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 41 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence IMP_BA_SOFTWARE_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "COMPANY"."IMP_BA_SOFTWARE_SEQ"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 21 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence IMP_BA_SOFTWARE_SEQ1
--------------------------------------------------------

   CREATE SEQUENCE  "COMPANY"."IMP_BA_SOFTWARE_SEQ1"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence IMP_BA_TANKSTELLE_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "COMPANY"."IMP_BA_TANKSTELLE_SEQ"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 317 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence IMP_BA_TELEFONKARTEN_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "COMPANY"."IMP_BA_TELEFONKARTEN_SEQ"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence IMP_BA_TEXTILREINIGUNG_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "COMPANY"."IMP_BA_TEXTILREINIGUNG_SEQ"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 21 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence IMP_TEL_MOBILCOM_RECH_SEQ1
--------------------------------------------------------

   CREATE SEQUENCE  "COMPANY"."IMP_TEL_MOBILCOM_RECH_SEQ1"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 41 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence IMP_TEL_O2_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "COMPANY"."IMP_TEL_O2_SEQ"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence INP_BELEGE_ALL_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "COMPANY"."INP_BELEGE_ALL_SEQ"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 561 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence INP_BELEGE_ALL_SEQ1
--------------------------------------------------------

   CREATE SEQUENCE  "COMPANY"."INP_BELEGE_ALL_SEQ1"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence INP_BELEGE_POS_ALL_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "COMPANY"."INP_BELEGE_POS_ALL_SEQ"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 201 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence KTO_Girokonto_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "COMPANY"."KTO_Girokonto_SEQ"  MINVALUE 100 MAXVALUE 999999999999999999999999999 INCREMENT BY 1 START WITH 2540 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence KTO_GIROKONTO_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "COMPANY"."KTO_GIROKONTO_SEQ"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 2313 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence KTO_Girokonto_SEQ1
--------------------------------------------------------

   CREATE SEQUENCE  "COMPANY"."KTO_Girokonto_SEQ1"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 101 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence KTO_Girokonto_SEQ2
--------------------------------------------------------

   CREATE SEQUENCE  "COMPANY"."KTO_Girokonto_SEQ2"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 21 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence KTO_Girokonto_SEQ3
--------------------------------------------------------

   CREATE SEQUENCE  "COMPANY"."KTO_Girokonto_SEQ3"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence KTO_Girokonto_SEQ4
--------------------------------------------------------

   CREATE SEQUENCE  "COMPANY"."KTO_Girokonto_SEQ4"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 21 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence KTO_Girokonto_SEQ5
--------------------------------------------------------

   CREATE SEQUENCE  "COMPANY"."KTO_Girokonto_SEQ5"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 2876 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence KTO_Girokonto_SEQ6
--------------------------------------------------------

   CREATE SEQUENCE  "COMPANY"."KTO_Girokonto_SEQ6"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence KTO_Girokonto_SEQ7
--------------------------------------------------------

   CREATE SEQUENCE  "COMPANY"."KTO_Girokonto_SEQ7"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 101 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence KTO_Girokonto_SEQ8
--------------------------------------------------------

   CREATE SEQUENCE  "COMPANY"."KTO_Girokonto_SEQ8"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 21 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence KTO_Girokonto_SE8
--------------------------------------------------------

   CREATE SEQUENCE  "COMPANY"."KTO_Girokonto_SE8"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 3367 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence KTO_KONTO_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "COMPANY"."KTO_KONTO_SEQ"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 2361 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence KTO_Kreditkarte_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "COMPANY"."KTO_Kreditkarte_SEQ"  MINVALUE 100 MAXVALUE 999999999999999999999999999 INCREMENT BY 1 START WITH 720 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence KTO_Kreditkarte_SEQ1
--------------------------------------------------------

   CREATE SEQUENCE  "COMPANY"."KTO_Kreditkarte_SEQ1"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 21 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence KTO_Kreditkarte_SEQ2
--------------------------------------------------------

   CREATE SEQUENCE  "COMPANY"."KTO_Kreditkarte_SEQ2"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 21 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence KTO_Kreditkarte_SEQ3
--------------------------------------------------------

   CREATE SEQUENCE  "COMPANY"."KTO_Kreditkarte_SEQ3"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 21 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence KTO_Kreditkarte_SEQ4
--------------------------------------------------------

   CREATE SEQUENCE  "COMPANY"."KTO_Kreditkarte_SEQ4"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 21 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence KTO_Paypal_SEQ2
--------------------------------------------------------

   CREATE SEQUENCE  "COMPANY"."KTO_Paypal_SEQ2"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 41 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence KTO_Tagesgeldkonto_SEQ2
--------------------------------------------------------

   CREATE SEQUENCE  "COMPANY"."KTO_Tagesgeldkonto_SEQ2"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence PP_Vorgang_SEQ1
--------------------------------------------------------

   CREATE SEQUENCE  "COMPANY"."PP_Vorgang_SEQ1"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 121 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence SEQ_ABSCHLUSSTYP
--------------------------------------------------------

   CREATE SEQUENCE  "COMPANY"."SEQ_ABSCHLUSSTYP"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence SEQ_ADRESSE
--------------------------------------------------------

   CREATE SEQUENCE  "COMPANY"."SEQ_ADRESSE"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 481 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence SEQ_ARBEITSTAGE
--------------------------------------------------------

   CREATE SEQUENCE  "COMPANY"."SEQ_ARBEITSTAGE"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 21 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence SEQ_ARBEITSZEITEN
--------------------------------------------------------

   CREATE SEQUENCE  "COMPANY"."SEQ_ARBEITSZEITEN"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence SEQ_ARTIKEL
--------------------------------------------------------

   CREATE SEQUENCE  "COMPANY"."SEQ_ARTIKEL"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 661 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence SEQ_ARTIKELBESTANDTEILE
--------------------------------------------------------

   CREATE SEQUENCE  "COMPANY"."SEQ_ARTIKELBESTANDTEILE"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 61 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence SEQ_ARTIKELBESTANDTEILTYP
--------------------------------------------------------

   CREATE SEQUENCE  "COMPANY"."SEQ_ARTIKELBESTANDTEILTYP"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence SEQ_ARTIKELTYP
--------------------------------------------------------

   CREATE SEQUENCE  "COMPANY"."SEQ_ARTIKELTYP"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 81 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence SEQ_AUFGABE
--------------------------------------------------------

   CREATE SEQUENCE  "COMPANY"."SEQ_AUFGABE"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence SEQ_BANK
--------------------------------------------------------

   CREATE SEQUENCE  "COMPANY"."SEQ_BANK"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 21 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence SEQ_BELEG
--------------------------------------------------------

   CREATE SEQUENCE  "COMPANY"."SEQ_BELEG"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 6178 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence SEQ_BELEGART
--------------------------------------------------------

   CREATE SEQUENCE  "COMPANY"."SEQ_BELEGART"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 261 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence SEQ_BELEGART_GRP
--------------------------------------------------------

   CREATE SEQUENCE  "COMPANY"."SEQ_BELEGART_GRP"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 41 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence SEQ_BELEGPOSITION
--------------------------------------------------------

   CREATE SEQUENCE  "COMPANY"."SEQ_BELEGPOSITION"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 141 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence SEQ_BELEGSEL
--------------------------------------------------------

   CREATE SEQUENCE  "COMPANY"."SEQ_BELEGSEL"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 21 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence SEQ_BESTELLUNG
--------------------------------------------------------

   CREATE SEQUENCE  "COMPANY"."SEQ_BESTELLUNG"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence SEQ_BUCH
--------------------------------------------------------

   CREATE SEQUENCE  "COMPANY"."SEQ_BUCH"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence SEQ_BUENDELUNG
--------------------------------------------------------

   CREATE SEQUENCE  "COMPANY"."SEQ_BUENDELUNG"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence SEQ_EINSENDEAUFGABE
--------------------------------------------------------

   CREATE SEQUENCE  "COMPANY"."SEQ_EINSENDEAUFGABE"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence SEQ_EINSENDEAUFGABENSTATUS
--------------------------------------------------------

   CREATE SEQUENCE  "COMPANY"."SEQ_EINSENDEAUFGABENSTATUS"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence SEQ_FRAGE
--------------------------------------------------------

   CREATE SEQUENCE  "COMPANY"."SEQ_FRAGE"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 101 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence SEQ_GESCHÄFTSPARTNER
--------------------------------------------------------

   CREATE SEQUENCE  "COMPANY"."SEQ_GESCHÄFTSPARTNER"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 21 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence SEQ_GESCHÄFTSPARTNERTYP
--------------------------------------------------------

   CREATE SEQUENCE  "COMPANY"."SEQ_GESCHÄFTSPARTNERTYP"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 21 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence SEQ_HERSTELLER
--------------------------------------------------------

   CREATE SEQUENCE  "COMPANY"."SEQ_HERSTELLER"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 21 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence SEQ_INVENTARE
--------------------------------------------------------

   CREATE SEQUENCE  "COMPANY"."SEQ_INVENTARE"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 21 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence SEQ_INVENTARTYP
--------------------------------------------------------

   CREATE SEQUENCE  "COMPANY"."SEQ_INVENTARTYP"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 21 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence SEQ_KONTAKTTYP
--------------------------------------------------------

   CREATE SEQUENCE  "COMPANY"."SEQ_KONTAKTTYP"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 21 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence SEQ_LAGERORT
--------------------------------------------------------

   CREATE SEQUENCE  "COMPANY"."SEQ_LAGERORT"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence SEQ_LOCATION
--------------------------------------------------------

   CREATE SEQUENCE  "COMPANY"."SEQ_LOCATION"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 501 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence SEQ_LOCATION_TYPE
--------------------------------------------------------

   CREATE SEQUENCE  "COMPANY"."SEQ_LOCATION_TYPE"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence SEQ_MENGENEINHEIT
--------------------------------------------------------

   CREATE SEQUENCE  "COMPANY"."SEQ_MENGENEINHEIT"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence SEQ_ORGANISATIONSEINHEIT
--------------------------------------------------------

   CREATE SEQUENCE  "COMPANY"."SEQ_ORGANISATIONSEINHEIT"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence SEQ_ORT
--------------------------------------------------------

   CREATE SEQUENCE  "COMPANY"."SEQ_ORT"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 421 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence SEQ_PACKUNGSTYP
--------------------------------------------------------

   CREATE SEQUENCE  "COMPANY"."SEQ_PACKUNGSTYP"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence SEQ_PERSON
--------------------------------------------------------

   CREATE SEQUENCE  "COMPANY"."SEQ_PERSON"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence SEQ_PLZ_ORT
--------------------------------------------------------

   CREATE SEQUENCE  "COMPANY"."SEQ_PLZ_ORT"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 344 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence SEQ_PRODUKT
--------------------------------------------------------

   CREATE SEQUENCE  "COMPANY"."SEQ_PRODUKT"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence SEQ_PROJEKT
--------------------------------------------------------

   CREATE SEQUENCE  "COMPANY"."SEQ_PROJEKT"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence SEQ_PRUEFUNG
--------------------------------------------------------

   CREATE SEQUENCE  "COMPANY"."SEQ_PRUEFUNG"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence SEQ_QUELLE
--------------------------------------------------------

   CREATE SEQUENCE  "COMPANY"."SEQ_QUELLE"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence SEQ_QUELLENTYP
--------------------------------------------------------

   CREATE SEQUENCE  "COMPANY"."SEQ_QUELLENTYP"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence SEQ_RECHNUNG
--------------------------------------------------------

   CREATE SEQUENCE  "COMPANY"."SEQ_RECHNUNG"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 104 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence SEQ_RECHNUNGSTYP
--------------------------------------------------------

   CREATE SEQUENCE  "COMPANY"."SEQ_RECHNUNGSTYP"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence SEQ_REL_ARTIKEL_ARTIKELTYP
--------------------------------------------------------

   CREATE SEQUENCE  "COMPANY"."SEQ_REL_ARTIKEL_ARTIKELTYP"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence SEQ_REL_ARTT_ARTT
--------------------------------------------------------

   CREATE SEQUENCE  "COMPANY"."SEQ_REL_ARTT_ARTT"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 121 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence SEQ_REL_BELEG_INVENTAR
--------------------------------------------------------

   CREATE SEQUENCE  "COMPANY"."SEQ_REL_BELEG_INVENTAR"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 21 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence SEQ_REL_BELEG_LOCATION
--------------------------------------------------------

   CREATE SEQUENCE  "COMPANY"."SEQ_REL_BELEG_LOCATION"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 497 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence SEQ_REL_BELEG_PRODUKT
--------------------------------------------------------

   CREATE SEQUENCE  "COMPANY"."SEQ_REL_BELEG_PRODUKT"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence SEQ_REL_BEL_VERBRAUCHSMAT
--------------------------------------------------------

   CREATE SEQUENCE  "COMPANY"."SEQ_REL_BEL_VERBRAUCHSMAT"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 21 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence SEQ_REL_GESCHAEFTSP_KONT
--------------------------------------------------------

   CREATE SEQUENCE  "COMPANY"."SEQ_REL_GESCHAEFTSP_KONT"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence SEQ_REL_INVENTAR_ARTIKEL
--------------------------------------------------------

   CREATE SEQUENCE  "COMPANY"."SEQ_REL_INVENTAR_ARTIKEL"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence SEQ_REL_INVENTAR_INVENTARTYP
--------------------------------------------------------

   CREATE SEQUENCE  "COMPANY"."SEQ_REL_INVENTAR_INVENTARTYP"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence SEQ_REL_LAGERORT_ARTIKEL
--------------------------------------------------------

   CREATE SEQUENCE  "COMPANY"."SEQ_REL_LAGERORT_ARTIKEL"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence SEQ_REL_RECHNG_STUNDEN
--------------------------------------------------------

   CREATE SEQUENCE  "COMPANY"."SEQ_REL_RECHNG_STUNDEN"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence SEQ_REL_RECHNUNG_BELEG
--------------------------------------------------------

   CREATE SEQUENCE  "COMPANY"."SEQ_REL_RECHNUNG_BELEG"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 61 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence SEQ_REL_RECHNUNG_STD
--------------------------------------------------------

   CREATE SEQUENCE  "COMPANY"."SEQ_REL_RECHNUNG_STD"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence SEQ_REL_STUNDENZETTEL_BELEG
--------------------------------------------------------

   CREATE SEQUENCE  "COMPANY"."SEQ_REL_STUNDENZETTEL_BELEG"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 327 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence SEQ_STD_GROUP
--------------------------------------------------------

   CREATE SEQUENCE  "COMPANY"."SEQ_STD_GROUP"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 41 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence SEQ_STEUERSATZ
--------------------------------------------------------

   CREATE SEQUENCE  "COMPANY"."SEQ_STEUERSATZ"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence SEQ_STUNDENZETTEL
--------------------------------------------------------

   CREATE SEQUENCE  "COMPANY"."SEQ_STUNDENZETTEL"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 21 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence SEQ_T_KONTAKT
--------------------------------------------------------

   CREATE SEQUENCE  "COMPANY"."SEQ_T_KONTAKT"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 21 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence SEQ_T_PACKUNGSTYP
--------------------------------------------------------

   CREATE SEQUENCE  "COMPANY"."SEQ_T_PACKUNGSTYP"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 21 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence SEQ_T_PROJEKT
--------------------------------------------------------

   CREATE SEQUENCE  "COMPANY"."SEQ_T_PROJEKT"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 101 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence SEQ_T_REL_FRAGE_LÖS
--------------------------------------------------------

   CREATE SEQUENCE  "COMPANY"."SEQ_T_REL_FRAGE_LÖS"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 461 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence SEQ_T_REL_INV_VERBRAUCHSMAT
--------------------------------------------------------

   CREATE SEQUENCE  "COMPANY"."SEQ_T_REL_INV_VERBRAUCHSMAT"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 21 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence SEQ_T_REL_KONTAKT_KONTAKTTYP
--------------------------------------------------------

   CREATE SEQUENCE  "COMPANY"."SEQ_T_REL_KONTAKT_KONTAKTTYP"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 21 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence SEQ_T_REL_REZEPT_ARTIKEL
--------------------------------------------------------

   CREATE SEQUENCE  "COMPANY"."SEQ_T_REL_REZEPT_ARTIKEL"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence SEQ_T_STD
--------------------------------------------------------

   CREATE SEQUENCE  "COMPANY"."SEQ_T_STD"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 81 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence SEQ_T_STUNDENZETTEL
--------------------------------------------------------

   CREATE SEQUENCE  "COMPANY"."SEQ_T_STUNDENZETTEL"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 121 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence SEQ_T_VERBRAUCHSMATERIAL
--------------------------------------------------------

   CREATE SEQUENCE  "COMPANY"."SEQ_T_VERBRAUCHSMATERIAL"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 21 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence SEQ_UMSATZART
--------------------------------------------------------

   CREATE SEQUENCE  "COMPANY"."SEQ_UMSATZART"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence SEQ_VERBRAUCHSMATERIAL
--------------------------------------------------------

   CREATE SEQUENCE  "COMPANY"."SEQ_VERBRAUCHSMATERIAL"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 21 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence SEQ_VERBRAUCHSMAT_TYP
--------------------------------------------------------

   CREATE SEQUENCE  "COMPANY"."SEQ_VERBRAUCHSMAT_TYP"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 21 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence SEQ_VERWENDUNGSZWECK
--------------------------------------------------------

   CREATE SEQUENCE  "COMPANY"."SEQ_VERWENDUNGSZWECK"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence T_ABL_ORDNER_PAGE_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "COMPANY"."T_ABL_ORDNER_PAGE_SEQ"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 61 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence T_ABL_ORDNER_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "COMPANY"."T_ABL_ORDNER_SEQ"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 21 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence T_ARBEITSTAGE_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "COMPANY"."T_ARBEITSTAGE_SEQ"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 10768 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence T_BANKKONTO_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "COMPANY"."T_BANKKONTO_SEQ"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 21 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence T_BEITRAG_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "COMPANY"."T_BEITRAG_SEQ"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence T_BEITRAG_SEQ1
--------------------------------------------------------

   CREATE SEQUENCE  "COMPANY"."T_BEITRAG_SEQ1"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 41 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence T_BELEGART_GRP_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "COMPANY"."T_BELEGART_GRP_SEQ"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence T_BELEGART_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "COMPANY"."T_BELEGART_SEQ"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 21 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence T_BELEG_SEQ1
--------------------------------------------------------

   CREATE SEQUENCE  "COMPANY"."T_BELEG_SEQ1"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 21 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence T_GESCHAEFTSPARTNER_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "COMPANY"."T_GESCHAEFTSPARTNER_SEQ"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 101 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence T_INVENTARE_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "COMPANY"."T_INVENTARE_SEQ"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 161 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence T_INVENTARTYP_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "COMPANY"."T_INVENTARTYP_SEQ"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 41 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence T_KONTENPLAN_KONTEN_GRP_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "COMPANY"."T_KONTENPLAN_KONTEN_GRP_SEQ"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 181 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence T_KONTENPLAN_KONTEN_KAT_GRP_S
--------------------------------------------------------

   CREATE SEQUENCE  "COMPANY"."T_KONTENPLAN_KONTEN_KAT_GRP_S"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 41 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence T_KONTENPLAN_KONTEN_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "COMPANY"."T_KONTENPLAN_KONTEN_SEQ"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 301 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence T_KONTENPLAN_KONTEN_SEQ1
--------------------------------------------------------

   CREATE SEQUENCE  "COMPANY"."T_KONTENPLAN_KONTEN_SEQ1"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 21 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence T_KONTOAUSZUG_BUCH_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "COMPANY"."T_KONTOAUSZUG_BUCH_SEQ"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 981 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence T_KONTO_AUSZUG_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "COMPANY"."T_KONTO_AUSZUG_SEQ"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 201 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence T_KONTO_BUCH_KAT_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "COMPANY"."T_KONTO_BUCH_KAT_SEQ"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 314 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence T_KONTO_BUCH_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "COMPANY"."T_KONTO_BUCH_SEQ"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 981 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence T_KONTROLLE_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "COMPANY"."T_KONTROLLE_SEQ"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 81 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence T_LAND_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "COMPANY"."T_LAND_SEQ"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 121 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence T_LEX_IMP_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "COMPANY"."T_LEX_IMP_SEQ"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 191 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence T_LEX_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "COMPANY"."T_LEX_SEQ"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 2351 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence T_LOCATION_TYPE_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "COMPANY"."T_LOCATION_TYPE_SEQ"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 121 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence T_OFFENE_EINGANGSRECHNUNGEN_S
--------------------------------------------------------

   CREATE SEQUENCE  "COMPANY"."T_OFFENE_EINGANGSRECHNUNGEN_S"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 21 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence T_PROJEKT_ART_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "COMPANY"."T_PROJEKT_ART_SEQ"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 41 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence T_PROJEKT_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "COMPANY"."T_PROJEKT_SEQ"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 161 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence T_RECHNUNG_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "COMPANY"."T_RECHNUNG_SEQ"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 101 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence T_REL_IMP_BEL_BEL_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "COMPANY"."T_REL_IMP_BEL_BEL_SEQ"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 41 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence T_REL_IMP_BEL_BEL_SEQ_V
--------------------------------------------------------

   CREATE SEQUENCE  "COMPANY"."T_REL_IMP_BEL_BEL_SEQ_V"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 41 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence T_REL_IMP_BEL_BEL_SEQ1
--------------------------------------------------------

   CREATE SEQUENCE  "COMPANY"."T_REL_IMP_BEL_BEL_SEQ1"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence T_REL_INVENTAR_ZAHLUNG_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "COMPANY"."T_REL_INVENTAR_ZAHLUNG_SEQ"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 901 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence T_REL_KONT_BUCH_IMP_BEL_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "COMPANY"."T_REL_KONT_BUCH_IMP_BEL_SEQ"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 41 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence T_REL_KONT_BUCH_KONT_BUCH_SEQ1
--------------------------------------------------------

   CREATE SEQUENCE  "COMPANY"."T_REL_KONT_BUCH_KONT_BUCH_SEQ1"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1222 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence T_REL_KONT_BUCH_LEX_BUCH_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "COMPANY"."T_REL_KONT_BUCH_LEX_BUCH_SEQ"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 101 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence T_REL_KONTENPLAN_KTO_KTO_KAT_
--------------------------------------------------------

   CREATE SEQUENCE  "COMPANY"."T_REL_KONTENPLAN_KTO_KTO_KAT_"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 121 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence T_REL_KONTO_AUSZUG_GIR_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "COMPANY"."T_REL_KONTO_AUSZUG_GIR_SEQ"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 3161 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence T_REL_PROJEKT_ZAHLUNG_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "COMPANY"."T_REL_PROJEKT_ZAHLUNG_SEQ"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1381 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence T_REL_RECHNUNG_STUNDENZETTEL_1
--------------------------------------------------------

   CREATE SEQUENCE  "COMPANY"."T_REL_RECHNUNG_STUNDENZETTEL_1"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 61 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence T_REL_RECHNUNG_ZAHLUNG_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "COMPANY"."T_REL_RECHNUNG_ZAHLUNG_SEQ"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 41 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence T_REL_STEUER_LOHN_ZAHL_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "COMPANY"."T_REL_STEUER_LOHN_ZAHL_SEQ"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 21 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence T_REL_STEUER_MONAT_BEL_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "COMPANY"."T_REL_STEUER_MONAT_BEL_SEQ"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 41 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence T_REL_STEUER_MONAT_RECH_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "COMPANY"."T_REL_STEUER_MONAT_RECH_SEQ"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 21 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence T_STD_GROUP_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "COMPANY"."T_STD_GROUP_SEQ"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 41 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence T_STD_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "COMPANY"."T_STD_SEQ"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 101 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence T_STEUER_KRANKENKASSE_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "COMPANY"."T_STEUER_KRANKENKASSE_SEQ"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 21 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence T_STEUER_LOHN_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "COMPANY"."T_STEUER_LOHN_SEQ"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 21 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence T_STEUER_LOHNSTEUERKARTE_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "COMPANY"."T_STEUER_LOHNSTEUERKARTE_SEQ"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 41 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence T_STEUER_MONAT_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "COMPANY"."T_STEUER_MONAT_SEQ"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 41 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence T_STEUERNUMMER_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "COMPANY"."T_STEUERNUMMER_SEQ"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence T_STEUERSATZ_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "COMPANY"."T_STEUERSATZ_SEQ"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 81 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence T_STEUER_VORANMLDG_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "COMPANY"."T_STEUER_VORANMLDG_SEQ"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 41 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence T_STROMABLESUNG_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "COMPANY"."T_STROMABLESUNG_SEQ"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 21 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence T_WAEHRUNG_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "COMPANY"."T_WAEHRUNG_SEQ"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 101 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Table APEX_GEO
--------------------------------------------------------

  CREATE TABLE "COMPANY"."APEX_GEO" 
   (	"ID" NUMBER(20,0), 
	"DATUM" VARCHAR2(4000 BYTE), 
	"UHRZEIT" NUMBER(13,0), 
	"PM" VARCHAR2(4000 BYTE), 
	"ACTIVITY_DATE" VARCHAR2(4000 BYTE), 
	"BEARBEITER" VARCHAR2(4000 BYTE), 
	"CALL_VON" VARCHAR2(4000 BYTE), 
	"CALL_NACH" VARCHAR2(4000 BYTE), 
	"ACT_ID_NACH" VARCHAR2(4000 BYTE), 
	"ACT_ID_VON" VARCHAR2(4000 BYTE), 
	"ADRESSE_VON" VARCHAR2(4000 BYTE), 
	"ADRESSE_NACH" VARCHAR2(4000 BYTE), 
	"GRID_EW_VON" VARCHAR2(4000 BYTE), 
	"GRID_EW_NACH" VARCHAR2(4000 BYTE), 
	"GRID_NS_VON" VARCHAR2(4000 BYTE), 
	"GRID_NS_NACH" VARCHAR2(4000 BYTE), 
	"RANG_VON" VARCHAR2(4000 BYTE), 
	"RANG_NACH" VARCHAR2(4000 BYTE), 
	"ANFAHRT" VARCHAR2(4000 BYTE), 
	"ERSTELLT_AM" VARCHAR2(4000 BYTE), 
	"ERSTELLT_VON" VARCHAR2(4000 BYTE), 
	"GEANDERT_AM" VARCHAR2(4000 BYTE), 
	"GEANDERT_VON" VARCHAR2(4000 BYTE), 
	"LINK" VARCHAR2(4000 BYTE), 
	"KOORDINATEN" VARCHAR2(4000 BYTE), 
	"CREATED_BY" VARCHAR2(20 BYTE), 
	"CREATION_DATE" DATE, 
	"MODIFIED_BY" VARCHAR2(20 BYTE), 
	"MODIFY_DATE" DATE, 
	"KM" VARCHAR2(20 BYTE), 
	"GOOGLE_VON" VARCHAR2(4000 BYTE), 
	"GOOGLE_BIS" VARCHAR2(4000 BYTE), 
	"PRE1" VARCHAR2(4000 BYTE), 
	"POST1" VARCHAR2(4000 BYTE), 
	"ACTION_STATUS_DATE_FROM" VARCHAR2(20 BYTE), 
	"ACTION_STATUS_DATE_TO" VARCHAR2(20 BYTE), 
	"CALL__T_FROM" VARCHAR2(20 BYTE), 
	"CALL__T_TO" VARCHAR2(20 BYTE), 
	"ACTION_NO_FROM" VARCHAR2(20 BYTE), 
	"ACTION_NO_TO" VARCHAR2(20 BYTE), 
	"BEARBEITER_VON" VARCHAR2(20 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USER01" ;
--------------------------------------------------------
--  DDL for Table APEX_GEO_BASIS
--------------------------------------------------------

  CREATE TABLE "COMPANY"."APEX_GEO_BASIS" 
   (	"RNR" NUMBER(7,0), 
	"CALL__T" VARCHAR2(26 BYTE), 
	"ACTION_NO" NUMBER(3,0), 
	"ACTION_STATUS__C" VARCHAR2(26 BYTE), 
	"CODE_DESC_LNG" VARCHAR2(26 BYTE), 
	"ACTION_TYPE__C" VARCHAR2(26 BYTE), 
	"ADDRESS_LNK__T" NUMBER(8,0), 
	"GRID_EW" NUMBER(18,0), 
	"GRID_NS" NUMBER(18,0), 
	"EMPLOYEES__KEY" VARCHAR2(26 BYTE), 
	"ASTD" VARCHAR2(26 BYTE), 
	"CREATEDTIME" VARCHAR2(26 BYTE), 
	"RNR_ALL" NUMBER(4,0), 
	"ACTION_STATUS_DATE" VARCHAR2(26 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USER01" ;
--------------------------------------------------------
--  DDL for Table APEX_GEO_2
--------------------------------------------------------

  CREATE TABLE "COMPANY"."APEX_GEO_2" 
   (	"RNR" NUMBER(38,0), 
	"LOCALTIMESTAMP" VARCHAR2(4000 BYTE), 
	"MON_KM_DAY__T" VARCHAR2(4000 BYTE), 
	"CREATEDTIME" VARCHAR2(4000 BYTE), 
	"MONTEUR" VARCHAR2(4000 BYTE), 
	"CALL__T" VARCHAR2(4000 BYTE), 
	"RNR_VON" NUMBER(38,0), 
	"RNR_BIS" NUMBER(38,0), 
	"CALL_BIS" VARCHAR2(4000 BYTE), 
	"ACTION_BIS" NUMBER(38,0), 
	"ACTION_NO" NUMBER(38,0), 
	"ADDRESS_ID_VON" NUMBER(38,0), 
	"ADDRESS_ID_BIS" NUMBER(38,0), 
	"START_GRID_NS" NUMBER(38,0), 
	"ZIEL_GRID_NS" NUMBER(38,0), 
	"START_GRID_EW" NUMBER(38,0), 
	"ZIEL_GRID_EW" NUMBER(38,0), 
	"REIHENFOLGE_ANFAHRT" NUMBER(38,0), 
	"ZUORDNUNG_ZIEL" NUMBER(38,0), 
	"ANFAHRT_BESCHR" VARCHAR2(4000 BYTE), 
	"KM_LINE" VARCHAR2(4000 BYTE), 
	"KM_GOOGLE_MAPS" VARCHAR2(4000 BYTE), 
	"CREATION_DATE" VARCHAR2(4000 BYTE), 
	"CREATED_BY" VARCHAR2(4000 BYTE), 
	"MODIFY_DATE" VARCHAR2(4000 BYTE), 
	"MODIFIED_BY" VARCHAR2(4000 BYTE), 
	"XML_RESULT" VARCHAR2(4000 BYTE), 
	"ACTION_STATUS_DATE_VON" VARCHAR2(4000 BYTE), 
	"ACTION_STATUS_DATE_BIS" VARCHAR2(4000 BYTE), 
	"LNK" VARCHAR2(4000 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USER01" ;
--------------------------------------------------------
--  DDL for Table BASIS_WN_PR
--------------------------------------------------------

  CREATE TABLE "COMPANY"."BASIS_WN_PR" 
   (	"TIMESTP" DATE, 
	"TIMET" NUMBER(8,0), 
	"ID" NUMBER(8,0), 
	"DATUM" VARCHAR2(26 BYTE), 
	"MONTEUR" VARCHAR2(26 BYTE), 
	"VON" NUMBER(8,0), 
	"NACH" NUMBER(8,0), 
	"VERSION_VON" NUMBER(3,0), 
	"VERSION_NACH" NUMBER(3,0), 
	"ADRESSE_VON" NUMBER(8,0), 
	"ADDRESSE_NACH" NUMBER(8,0), 
	"GRID_EW_VON" NUMBER(18,0), 
	"GRID_EW_NACH" NUMBER(18,0), 
	"GRID_NS_VON" NUMBER(18,0), 
	"GRID_NS_NACH" NUMBER(18,0), 
	"RANG_VON" NUMBER(4,0), 
	"RANG_NACH" NUMBER(4,0), 
	"ANFAHRT" VARCHAR2(26 BYTE), 
	"NIX1" VARCHAR2(26 BYTE), 
	"NIX2" VARCHAR2(26 BYTE), 
	"DATUM1" VARCHAR2(26 BYTE), 
	"WORKSPACE" VARCHAR2(26 BYTE), 
	"DATUM3" VARCHAR2(26 BYTE), 
	"SCHEMA" VARCHAR2(26 BYTE), 
	"NIX3" VARCHAR2(26 BYTE), 
	"NIX4" VARCHAR2(26 BYTE), 
	"NIX5" VARCHAR2(26 BYTE), 
	"ENV" VARCHAR2(26 BYTE), 
	"LINK_OLD" VARCHAR2(256 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USER01" ;
--------------------------------------------------------
--  DDL for Table BASIS_WN_PR1
--------------------------------------------------------

  CREATE TABLE "COMPANY"."BASIS_WN_PR1" 
   (	"TIMESTP" VARCHAR2(26 BYTE), 
	"TIMET" VARCHAR2(26 BYTE), 
	"ID" NUMBER(8,0), 
	"DATUM" VARCHAR2(26 BYTE), 
	"MONTEUR" VARCHAR2(26 BYTE), 
	"VON" VARCHAR2(26 BYTE), 
	"NACH" VARCHAR2(26 BYTE), 
	"VERSION_VON" VARCHAR2(26 BYTE), 
	"VERSION_NACH" VARCHAR2(26 BYTE), 
	"ADRESSE_VON" VARCHAR2(26 BYTE), 
	"ADDRESSE_NACH" VARCHAR2(26 BYTE), 
	"GRID_EW_VON" VARCHAR2(26 BYTE), 
	"GRID_EW_NACH" VARCHAR2(26 BYTE), 
	"GRID_NS_VON" VARCHAR2(26 BYTE), 
	"GRID_NS_NACH" VARCHAR2(26 BYTE), 
	"RANG_VON" VARCHAR2(26 BYTE), 
	"RANG_NACH" VARCHAR2(26 BYTE), 
	"ANFAHRT" VARCHAR2(26 BYTE), 
	"NIX1" VARCHAR2(26 BYTE), 
	"NIX2" VARCHAR2(26 BYTE), 
	"DATUM1" VARCHAR2(26 BYTE), 
	"WORKSPACE" VARCHAR2(26 BYTE), 
	"DATUM3" VARCHAR2(26 BYTE), 
	"SCHEMA" VARCHAR2(26 BYTE), 
	"NIX3" VARCHAR2(26 BYTE), 
	"NIX4" VARCHAR2(26 BYTE), 
	"NIX5" VARCHAR2(26 BYTE), 
	"ENV" VARCHAR2(26 BYTE), 
	"LINK_OLD" VARCHAR2(256 BYTE), 
	"KM" VARCHAR2(20 BYTE), 
	"GRID_EW_VON1" VARCHAR2(20 BYTE), 
	"GRID_EW_NACH1" VARCHAR2(20 BYTE), 
	"GRID_NS_VON1" VARCHAR2(20 BYTE), 
	"GRID_NS_NACH1" VARCHAR2(20 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USER01" ;
--------------------------------------------------------
--  DDL for Table BEST_POS
--------------------------------------------------------

  CREATE TABLE "COMPANY"."BEST_POS" 
   (	"BEST_POST1" NUMBER, 
	"BEST_POST2" NUMBER, 
	"BEST_BESCHR" VARCHAR2(4000 CHAR), 
	"BEST_BESCHR1" VARCHAR2(20 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USER01" ;
--------------------------------------------------------
--  DDL for Table CONTR_KATEGORIE_ZAHLUNG
--------------------------------------------------------

  CREATE TABLE "COMPANY"."CONTR_KATEGORIE_ZAHLUNG" 
   (	"PK_CONTR_KATEGORIE_ZAHLUNG" NUMBER, 
	"FK_MAIN_KEY" NUMBER, 
	"FK_STATUS" NUMBER, 
	"KONTROLLZWECK" VARCHAR2(4000 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USER01" ;
--------------------------------------------------------
--  DDL for Table DEMO_CONSTRAINT_LOOKUP
--------------------------------------------------------

  CREATE TABLE "COMPANY"."DEMO_CONSTRAINT_LOOKUP" 
   (	"CONSTRAINT_NAME" VARCHAR2(30 BYTE), 
	"MESSAGE" VARCHAR2(4000 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USER01" ;
--------------------------------------------------------
--  DDL for Table DEMO_CUSTOMERS
--------------------------------------------------------

  CREATE TABLE "COMPANY"."DEMO_CUSTOMERS" 
   (	"CUSTOMER_ID" NUMBER, 
	"CUST_FIRST_NAME" VARCHAR2(20 BYTE), 
	"CUST_LAST_NAME" VARCHAR2(20 BYTE), 
	"CUST_STREET_ADDRESS1" VARCHAR2(60 BYTE), 
	"CUST_STREET_ADDRESS2" VARCHAR2(60 BYTE), 
	"CUST_CITY" VARCHAR2(30 BYTE), 
	"CUST_STATE" VARCHAR2(2 BYTE), 
	"CUST_POSTAL_CODE" VARCHAR2(10 BYTE), 
	"CUST_EMAIL" VARCHAR2(30 BYTE), 
	"PHONE_NUMBER1" VARCHAR2(25 BYTE), 
	"PHONE_NUMBER2" VARCHAR2(25 BYTE), 
	"URL" VARCHAR2(100 BYTE), 
	"CREDIT_LIMIT" NUMBER(9,2), 
	"TAGS" VARCHAR2(4000 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USER01" ;
--------------------------------------------------------
--  DDL for Table DEMO_ORDER_ITEMS
--------------------------------------------------------

  CREATE TABLE "COMPANY"."DEMO_ORDER_ITEMS" 
   (	"ORDER_ITEM_ID" NUMBER(3,0), 
	"ORDER_ID" NUMBER, 
	"PRODUCT_ID" NUMBER, 
	"UNIT_PRICE" NUMBER(8,2), 
	"QUANTITY" NUMBER(8,0)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USER01" ;
--------------------------------------------------------
--  DDL for Table DEMO_ORDERS
--------------------------------------------------------

  CREATE TABLE "COMPANY"."DEMO_ORDERS" 
   (	"ORDER_ID" NUMBER, 
	"CUSTOMER_ID" NUMBER, 
	"ORDER_TOTAL" NUMBER(8,2), 
	"ORDER_TIMESTAMP" TIMESTAMP (6) WITH LOCAL TIME ZONE, 
	"USER_NAME" VARCHAR2(100 BYTE), 
	"TAGS" VARCHAR2(4000 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USER01" ;
--------------------------------------------------------
--  DDL for Table DEMO_PRODUCT_INFO
--------------------------------------------------------

  CREATE TABLE "COMPANY"."DEMO_PRODUCT_INFO" 
   (	"PRODUCT_ID" NUMBER, 
	"PRODUCT_NAME" VARCHAR2(50 BYTE), 
	"PRODUCT_DESCRIPTION" VARCHAR2(2000 BYTE), 
	"CATEGORY" VARCHAR2(30 BYTE), 
	"PRODUCT_AVAIL" VARCHAR2(1 BYTE), 
	"LIST_PRICE" NUMBER(8,2), 
	"PRODUCT_IMAGE" BLOB, 
	"MIMETYPE" VARCHAR2(255 BYTE), 
	"FILENAME" VARCHAR2(400 BYTE), 
	"IMAGE_LAST_UPDATE" TIMESTAMP (6) WITH LOCAL TIME ZONE, 
	"TAGS" VARCHAR2(4000 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USER01" 
 LOB ("PRODUCT_IMAGE") STORE AS BASICFILE (
  TABLESPACE "USER01" ENABLE STORAGE IN ROW CHUNK 8192 RETENTION 
  NOCACHE LOGGING 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)) ;
--------------------------------------------------------
--  DDL for Table DEMO_STATES
--------------------------------------------------------

  CREATE TABLE "COMPANY"."DEMO_STATES" 
   (	"ST" VARCHAR2(30 BYTE), 
	"STATE_NAME" VARCHAR2(30 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USER01" ;
--------------------------------------------------------
--  DDL for Table DEMO_TAGS
--------------------------------------------------------

  CREATE TABLE "COMPANY"."DEMO_TAGS" 
   (	"ID" NUMBER, 
	"TAG" VARCHAR2(255 BYTE), 
	"CONTENT_ID" NUMBER, 
	"CONTENT_TYPE" VARCHAR2(30 BYTE), 
	"CREATED" TIMESTAMP (6) WITH LOCAL TIME ZONE, 
	"CREATED_BY" VARCHAR2(255 BYTE), 
	"UPDATED" TIMESTAMP (6) WITH LOCAL TIME ZONE, 
	"UPDATED_BY" VARCHAR2(255 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USER01" ;
--------------------------------------------------------
--  DDL for Table DEMO_TAGS_SUM
--------------------------------------------------------

  CREATE TABLE "COMPANY"."DEMO_TAGS_SUM" 
   (	"TAG" VARCHAR2(255 BYTE), 
	"TAG_COUNT" NUMBER
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USER01" ;
--------------------------------------------------------
--  DDL for Table DEMO_TAGS_TYPE_SUM
--------------------------------------------------------

  CREATE TABLE "COMPANY"."DEMO_TAGS_TYPE_SUM" 
   (	"TAG" VARCHAR2(255 BYTE), 
	"CONTENT_TYPE" VARCHAR2(30 BYTE), 
	"TAG_COUNT" NUMBER
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USER01" ;
--------------------------------------------------------
--  DDL for Table DEPT
--------------------------------------------------------

  CREATE TABLE "COMPANY"."DEPT" 
   (	"DEPTNO" NUMBER(2,0), 
	"DNAME" VARCHAR2(14 BYTE), 
	"LOC" VARCHAR2(13 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USER01" ;
--------------------------------------------------------
--  DDL for Table DL_IMP
--------------------------------------------------------

  CREATE TABLE "COMPANY"."DL_IMP" 
   (	"ID" NUMBER, 
	"ADR" VARCHAR2(4000 BYTE), 
	"ERG" VARCHAR2(30 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USER01" ;
--------------------------------------------------------
--  DDL for Table DL_IMP1
--------------------------------------------------------

  CREATE TABLE "COMPANY"."DL_IMP1" 
   (	"COLUMN1" NUMBER, 
	"T2" BLOB
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USER01" 
 LOB ("T2") STORE AS BASICFILE (
  TABLESPACE "USER01" ENABLE STORAGE IN ROW CHUNK 8192 RETENTION 
  NOCACHE LOGGING 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)) ;
--------------------------------------------------------
--  DDL for Table EMP
--------------------------------------------------------

  CREATE TABLE "COMPANY"."EMP" 
   (	"EMPNO" NUMBER(4,0), 
	"ENAME" VARCHAR2(10 BYTE), 
	"JOB" VARCHAR2(9 BYTE), 
	"MGR" NUMBER(4,0), 
	"HIREDATE" DATE, 
	"SAL" NUMBER(7,2), 
	"COMM" NUMBER(7,2), 
	"DEPTNO" NUMBER(2,0)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USER01" ;
--------------------------------------------------------
--  DDL for Table IMP_BA_ADDRESSEN
--------------------------------------------------------

  CREATE TABLE "COMPANY"."IMP_BA_ADDRESSEN" 
   (	"NAME" VARCHAR2(128 BYTE), 
	"ADRESSE" VARCHAR2(128 BYTE), 
	"TELEFONNUMMER" VARCHAR2(26 BYTE), 
	"FAX" VARCHAR2(4000 BYTE), 
	"EMAIL" VARCHAR2(4000 BYTE), 
	"S1" VARCHAR2(4000 BYTE), 
	"ORT" VARCHAR2(4000 BYTE), 
	"TELEFON" VARCHAR2(4000 BYTE), 
	"GESCHÄFT" VARCHAR2(4000 BYTE), 
	"VORGANGSNR" VARCHAR2(4000 BYTE), 
	"COLUMN1" VARCHAR2(4000 BYTE), 
	"EMAIL2" VARCHAR2(4000 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USER01" ;
--------------------------------------------------------
--  DDL for Table IMP_BA_ALLG_BEL
--------------------------------------------------------

  CREATE TABLE "COMPANY"."IMP_BA_ALLG_BEL" 
   (	"BEZEICHNUNG" VARCHAR2(4000 BYTE), 
	"LAND" VARCHAR2(26 BYTE), 
	"S1" VARCHAR2(26 BYTE), 
	"S2" VARCHAR2(26 BYTE), 
	"BETRAG" VARCHAR2(20 BYTE), 
	"WÄHRUNG" VARCHAR2(26 BYTE), 
	"S4" VARCHAR2(26 BYTE), 
	"STEUERSATZ" VARCHAR2(20 BYTE), 
	"S6" VARCHAR2(20 BYTE), 
	"STEUERNUMMER" VARCHAR2(128 BYTE), 
	"DATUM" VARCHAR2(26 BYTE), 
	"UHRZEIT" VARCHAR2(26 BYTE), 
	"BELEGNUMMER" VARCHAR2(128 BYTE), 
	"ZAHLUNGSART" VARCHAR2(26 BYTE), 
	"BELEG" VARCHAR2(128 BYTE), 
	"VERWENDUNGSZWECK" VARCHAR2(4000 BYTE), 
	"SONSTIGES2" VARCHAR2(4000 BYTE), 
	"S7" VARCHAR2(4000 BYTE), 
	"S8" VARCHAR2(4000 BYTE), 
	"S9" VARCHAR2(4000 BYTE), 
	"S10" VARCHAR2(4000 BYTE), 
	"FK_ARBEITSTAG" NUMBER, 
	"FK_BUCHUNG" NUMBER, 
	"PK_IMP_BA_ALLG_BEL" NUMBER, 
	"FK_IMP_BA_BEL" NUMBER, 
	"MERK" VARCHAR2(20 BYTE), 
	"WERT" NUMBER, 
	"FK_IMP_BA_ALLG_BEL1" NUMBER, 
	"ORT" VARCHAR2(26 BYTE), 
	"SONSTIGES3" VARCHAR2(4000 BYTE), 
	"SONSTIGES4" VARCHAR2(4000 BYTE), 
	"SONSTIGES5" VARCHAR2(4000 BYTE), 
	"SONSTIGES6" VARCHAR2(4000 BYTE), 
	"UMRECHNUNGSKURS" VARCHAR2(255 BYTE), 
	"MWST" NUMBER, 
	"DOK" BFILE, 
	"BILD" BLOB, 
	"BILD1" BLOB, 
	"FK_INVENTAR" NUMBER, 
	"FK_PROJEKT" NUMBER, 
	"WÄHRUNG_BETRAG" VARCHAR2(20 BYTE), 
	"FK_LEX_BUCHUNG" NUMBER, 
	"FK_KATEGORIE" NUMBER, 
	"FK_BELEG_ABLAGE" VARCHAR2(4000 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USER01" 
 LOB ("BILD") STORE AS BASICFILE (
  TABLESPACE "USER01" ENABLE STORAGE IN ROW CHUNK 8192 RETENTION 
  NOCACHE LOGGING 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)) 
 LOB ("BILD1") STORE AS BASICFILE (
  TABLESPACE "USER01" ENABLE STORAGE IN ROW CHUNK 8192 RETENTION 
  NOCACHE LOGGING 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)) ;
--------------------------------------------------------
--  DDL for Table IMP_BA_ALLG_BEL1_SICH
--------------------------------------------------------

  CREATE TABLE "COMPANY"."IMP_BA_ALLG_BEL1_SICH" 
   (	"BEZEICHNUNG" VARCHAR2(128 BYTE), 
	"ORT" VARCHAR2(26 BYTE), 
	"LAND" VARCHAR2(26 BYTE), 
	"BETRAG" VARCHAR2(20 BYTE), 
	"WÄHRUNG" VARCHAR2(26 BYTE), 
	"STEUERSATZ" VARCHAR2(20 BYTE), 
	"STEUERNUMMER" VARCHAR2(128 BYTE), 
	"DATUM" VARCHAR2(26 BYTE), 
	"UHRZEIT" VARCHAR2(26 BYTE), 
	"BELEGNUMMER" VARCHAR2(128 BYTE), 
	"ZAHLUNGSART" VARCHAR2(26 BYTE), 
	"BELEG" VARCHAR2(128 BYTE), 
	"VERWENDUNGSZWECK" VARCHAR2(128 BYTE), 
	"SONSTIGES2" VARCHAR2(4000 BYTE), 
	"SONSTIGES3" VARCHAR2(4000 BYTE), 
	"SONSTIGES4" VARCHAR2(4000 BYTE), 
	"SONSTIGES5" VARCHAR2(4000 BYTE), 
	"SONSTIGES6" VARCHAR2(4000 BYTE), 
	"SONSTIGES7" VARCHAR2(4000 BYTE), 
	"SONSTIGES8" VARCHAR2(4000 BYTE), 
	"SONSTIGES9" VARCHAR2(4000 BYTE), 
	"FK_ARBEITSTAG" NUMBER, 
	"FK_BUCHUNG" VARCHAR2(20 BYTE), 
	"PK_IMP_BA_ALLG_BEL1" NUMBER, 
	"FK_IMP_BA_BEL" NUMBER, 
	"FLAG_NEW" NUMBER
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USER01" ;
--------------------------------------------------------
--  DDL for Table IMP_BA_AUTOERSATZTEILE
--------------------------------------------------------

  CREATE TABLE "COMPANY"."IMP_BA_AUTOERSATZTEILE" 
   (	"GESCHÄFT" VARCHAR2(128 BYTE), 
	"LAND" VARCHAR2(26 BYTE), 
	"STATION_NR" NUMBER(11,0), 
	"STEUER_NR" VARCHAR2(26 BYTE), 
	"DATUM_UHRZEIT" VARCHAR2(26 BYTE), 
	"BETRAG" NUMBER(7,2), 
	"ARTIKEL" VARCHAR2(128 BYTE), 
	"STEUERSATZ" VARCHAR2(26 BYTE), 
	"GROESSE" VARCHAR2(4000 BYTE), 
	"STEUERRELEVANZ" VARCHAR2(4000 BYTE), 
	"VERWENDUNGSZWECK" VARCHAR2(4000 BYTE), 
	"KENNZEICHEN" VARCHAR2(4000 BYTE), 
	"KUNDENNUMMER" VARCHAR2(4000 BYTE), 
	"SONSTIGES1" VARCHAR2(4000 BYTE), 
	"SONSTIGES2" VARCHAR2(4000 BYTE), 
	"SONSTIGES3" VARCHAR2(4000 BYTE), 
	"SONSTIGES4" VARCHAR2(4000 BYTE), 
	"RNR" NUMBER, 
	"FK_IMP_BA_BEL" NUMBER, 
	"ZAHLUNGSART" VARCHAR2(4000 BYTE), 
	"FK_ARBEITSTAG" NUMBER, 
	"ORT" VARCHAR2(4000 BYTE), 
	"BELEGNUMMER" VARCHAR2(20 BYTE), 
	"FK_BUCHUNG" NUMBER, 
	"PK_IMP_BA_AUTOERSATZTEILE" NUMBER, 
	"FK_INVENTAR" NUMBER, 
	"FK_PROJEKT" NUMBER, 
	"FK_LEX_BUCHUNG" NUMBER, 
	"FK_BELEG_ABLAGE" VARCHAR2(4000 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USER01" ;
--------------------------------------------------------
--  DDL for Table IMP_BA_BEL_BUCH
--------------------------------------------------------

  CREATE TABLE "COMPANY"."IMP_BA_BEL_BUCH" 
   (	"IMP_BA_BEL_BUCH" NUMBER, 
	"FK_IMP_BA_BEL" NUMBER, 
	"FK_BUCHUNG" NUMBER
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USER01" ;
--------------------------------------------------------
--  DDL for Table IMP_BA_BEL_DET
--------------------------------------------------------

  CREATE TABLE "COMPANY"."IMP_BA_BEL_DET" 
   (	"BELEGNUMMER" VARCHAR2(26 BYTE), 
	"GESCHFT" VARCHAR2(128 BYTE), 
	"DATUM" VARCHAR2(26 BYTE), 
	"BETRAG" NUMBER(7,2), 
	"WHRUNG" VARCHAR2(26 BYTE), 
	"ARTIKEL" VARCHAR2(128 BYTE), 
	"ARTIKELNUMMER" NUMBER(9,0), 
	"BEMERKUNG" VARCHAR2(128 BYTE), 
	"SONSTIGES1" VARCHAR2(128 BYTE), 
	"SONSTIGES2" VARCHAR2(128 BYTE), 
	"SONSTIGES3" VARCHAR2(26 BYTE), 
	"SONSTIGES4" VARCHAR2(26 BYTE), 
	"SONSTIGES5" VARCHAR2(128 BYTE), 
	"SONSTIGES6" VARCHAR2(128 BYTE), 
	"SONSTIGES7" VARCHAR2(128 BYTE), 
	"SONSTIGES8" VARCHAR2(128 BYTE), 
	"FK_IMP_BA_BEL" NUMBER, 
	"FK_IMP_BA_ALLG_BEL" NUMBER
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USER01" ;
--------------------------------------------------------
--  DDL for Table IMP_BA_BUSSGELDER
--------------------------------------------------------

  CREATE TABLE "COMPANY"."IMP_BA_BUSSGELDER" 
   (	"WEBSEITE" VARCHAR2(26 BYTE), 
	"ID" VARCHAR2(26 BYTE), 
	"CODE" VARCHAR2(26 BYTE), 
	"KENNZEICHEN" VARCHAR2(26 BYTE), 
	"BETRAG" NUMBER(6,1), 
	"BELEGID" NUMBER(3,0), 
	"DATUM" VARCHAR2(26 BYTE), 
	"ORT" VARCHAR2(4000 BYTE), 
	"DATUM_VERGEHEN" VARCHAR2(4000 BYTE), 
	"KM_GEFAHREN" VARCHAR2(4000 BYTE), 
	"KM_SOLL" VARCHAR2(4000 BYTE), 
	"BUSSGELDSTELLE" VARCHAR2(4000 BYTE), 
	"IBAN" VARCHAR2(4000 BYTE), 
	"ID2" VARCHAR2(26 BYTE), 
	"ART" VARCHAR2(4000 BYTE), 
	"COLUMN1" VARCHAR2(4000 BYTE), 
	"SONSTIGE2" VARCHAR2(4000 BYTE), 
	"SONSTIGE3" VARCHAR2(4000 BYTE), 
	"RNR" NUMBER, 
	"FK_IMP_BA_BEL" NUMBER, 
	"FK_ARBEITSTAG" NUMBER, 
	"ZAHLUNGSART" VARCHAR2(20 BYTE), 
	"FK_BUCHUNG" NUMBER, 
	"VERWENDUNGSZWECK" VARCHAR2(4000 BYTE), 
	"PK_IMP_BA_BUSSGELDER" NUMBER, 
	"FK_INVENTAR" NUMBER, 
	"FK_PROJEKT" NUMBER, 
	"LAND" VARCHAR2(4000 BYTE), 
	"PUNKTE_VON" DATE, 
	"PUNKTE_BIS" DATE, 
	"PUNKTE" NUMBER, 
	"BILD" BLOB, 
	"FK_ORDNER_PAGE" NUMBER, 
	"KM_ÜBERTR_ABS" NUMBER, 
	"KM_ÜBERTR_ABZGL_MESSTOL" NUMBER, 
	"CODE_BUSSGELD" VARCHAR2(4000 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USER01" 
 LOB ("BILD") STORE AS BASICFILE (
  TABLESPACE "USER01" ENABLE STORAGE IN ROW CHUNK 8192 RETENTION 
  NOCACHE LOGGING 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)) ;
--------------------------------------------------------
--  DDL for Table IMP_BA_CARMIETE
--------------------------------------------------------

  CREATE TABLE "COMPANY"."IMP_BA_CARMIETE" 
   (	"LAND" VARCHAR2(26 BYTE), 
	"BETRAG" NUMBER(7,2), 
	"WOCHEN" VARCHAR2(26 BYTE), 
	"BETRAG_PRO_TAG" NUMBER(7,2), 
	"TAGE" VARCHAR2(26 BYTE), 
	"NAVI" NUMBER(7,2), 
	"STEUER" NUMBER(4,0), 
	"GPS" VARCHAR2(26 BYTE), 
	"BETRAG_GESAMT" NUMBER(8,2), 
	"GESAMT" VARCHAR2(26 BYTE), 
	"ANZAHL_TAGE" NUMBER(4,0), 
	"BEMERKUNG" VARCHAR2(4000 BYTE), 
	"CONCESSION_FEE_RECOVERY" NUMBER(7,2), 
	"FK_BUCHUNG" NUMBER, 
	"FK_IMP_BA_BEL" NUMBER, 
	"MWST_SATZ" NUMBER, 
	"DATUM" DATE, 
	"SONSTIGES" VARCHAR2(4000 BYTE), 
	"ZAHLUNGSART" VARCHAR2(20 BYTE), 
	"PK_IMP_BA_CARMIETE" NUMBER, 
	"FK_ARBEITSTAG" NUMBER
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USER01" ;
--------------------------------------------------------
--  DDL for Table IMP_BA_COWORKING
--------------------------------------------------------

  CREATE TABLE "COMPANY"."IMP_BA_COWORKING" 
   (	"ORT" VARCHAR2(128 BYTE), 
	"LAND" VARCHAR2(26 BYTE), 
	"ANZAHL_TAGE" VARCHAR2(26 BYTE), 
	"BETRAG" NUMBER(4,0), 
	"WHRUNG" VARCHAR2(26 BYTE), 
	"RECHNUNGSNUMMER" NUMBER(9,0), 
	"DATUM" NUMBER(10,0), 
	"FIRMA" VARCHAR2(128 BYTE), 
	"FK_BUCHUNG" NUMBER, 
	"FK_IMP_BA_BEL" NUMBER, 
	"PK_IMP_BA_COWORKING" NUMBER, 
	"FK_ARBEITSTAG" NUMBER, 
	"FK_PROJEKT" NUMBER
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USER01" ;
--------------------------------------------------------
--  DDL for Table IMP_BA_ELEKTRONIK
--------------------------------------------------------

  CREATE TABLE "COMPANY"."IMP_BA_ELEKTRONIK" 
   (	"BEZEICHNUNG" VARCHAR2(128 BYTE), 
	"BELEGNUMMER" VARCHAR2(4000 BYTE), 
	"BETRAG" VARCHAR2(26 BYTE), 
	"MWST_PROZ" VARCHAR2(26 BYTE), 
	"VERTRAGSNUMMER" VARCHAR2(20 BYTE), 
	"DATUM" VARCHAR2(20 BYTE), 
	"KUNDENNUMMER" VARCHAR2(20 BYTE), 
	"DATUM2" VARCHAR2(26 BYTE), 
	"ORT" VARCHAR2(26 BYTE), 
	"GESCHFT" VARCHAR2(128 BYTE), 
	"GERT" VARCHAR2(128 BYTE), 
	"COLUMN1" VARCHAR2(4000 BYTE), 
	"MWST_SATZ" VARCHAR2(4000 BYTE), 
	"MWST_BETRAG" VARCHAR2(4000 BYTE), 
	"SONSTIGES2" VARCHAR2(4000 BYTE), 
	"NUMMERNART" VARCHAR2(4000 BYTE), 
	"NUMMER" VARCHAR2(4000 BYTE), 
	"ORT_DATUM" VARCHAR2(4000 BYTE), 
	"FK_BUCHUNG" NUMBER, 
	"FK_IMP_BA_BEL" NUMBER, 
	"PK_IMP_BA_ELEKTRONIK" NUMBER, 
	"FK_ARBEITSTAG" NUMBER, 
	"BILD" BLOB, 
	"FK_INVENTAR" NUMBER, 
	"HARDWARE_SOFTWARE" VARCHAR2(20 BYTE), 
	"OK" VARCHAR2(20 BYTE), 
	"OK_BEMERKUNGEN" VARCHAR2(4000 BYTE), 
	"WÄHRUNG_BETRAG" VARCHAR2(20 BYTE), 
	"ZAHLUNGSART" VARCHAR2(4000 BYTE), 
	"FK_LEX_BUCHUNG" NUMBER, 
	"FK_BELEG_ABLAGE" VARCHAR2(4000 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USER01" 
 LOB ("BILD") STORE AS BASICFILE (
  TABLESPACE "USER01" ENABLE STORAGE IN ROW CHUNK 8192 RETENTION 
  NOCACHE LOGGING 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)) ;
--------------------------------------------------------
--  DDL for Table IMP_BA_GRENZBELEGE
--------------------------------------------------------

  CREATE TABLE "COMPANY"."IMP_BA_GRENZBELEGE" 
   (	"BEZEICHNUNG" VARCHAR2(4000 BYTE), 
	"DATUM" VARCHAR2(4000 BYTE), 
	"UHRZEIT" VARCHAR2(4000 BYTE), 
	"ZWECK" VARCHAR2(4000 BYTE), 
	"COLUMN5" VARCHAR2(4000 BYTE), 
	"BETRAG" VARCHAR2(4000 BYTE), 
	"COLUMN7" VARCHAR2(4000 BYTE), 
	"COLUMN8" VARCHAR2(4000 BYTE), 
	"COLUMN9" VARCHAR2(4000 BYTE), 
	"COLUMN10" VARCHAR2(4000 BYTE), 
	"COLUMN11" VARCHAR2(4000 BYTE), 
	"COLUMN12" VARCHAR2(4000 BYTE), 
	"COLUMN13" VARCHAR2(4000 BYTE), 
	"COLUMN14" VARCHAR2(4000 BYTE), 
	"FK_BUCHUNG" NUMBER, 
	"PK_IMP_BA_GRENZBELEGE" NUMBER, 
	"FK_ARBEITSTAG" NUMBER, 
	"FK_IMP_BA_BEL" NUMBER, 
	"KENNZEICHEN" VARCHAR2(20 BYTE), 
	"FK_INVENTAR" NUMBER, 
	"WÄHRUNG_BETRAG" VARCHAR2(20 BYTE), 
	"FK_LEX_BUCHUNG" NUMBER, 
	"FK_BELEG_ABLAGE" VARCHAR2(4000 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USER01" ;
--------------------------------------------------------
--  DDL for Table IMP_BA_HEIZUNGSABRECHNUNG
--------------------------------------------------------

  CREATE TABLE "COMPANY"."IMP_BA_HEIZUNGSABRECHNUNG" 
   (	"NR" VARCHAR2(20 BYTE), 
	"LIEGENSCHAFTSNUTZER" VARCHAR2(4000 BYTE), 
	"ABRECHNUNGSDATUM" VARCHAR2(20 BYTE), 
	"ABRECHNUNGSZEITRAUM" VARCHAR2(4000 BYTE), 
	"SUMME_VORAUSZAHL" VARCHAR2(20 BYTE), 
	"VORAUSZAHLUNGEN" VARCHAR2(20 BYTE), 
	"NACHZAHLUNGSBETRAG" VARCHAR2(20 BYTE), 
	"ERLEDIGT_AM" VARCHAR2(20 BYTE), 
	"TEXT" VARCHAR2(4000 BYTE), 
	"BESUCHSTERMIN" VARCHAR2(4000 BYTE), 
	"LIEGENSCHAFTSNUMMER" VARCHAR2(4000 BYTE), 
	"AUFTRAGSNUMMER" VARCHAR2(4000 BYTE), 
	"FK_BUCHUNG" NUMBER, 
	"FK_IMP_BA_BEL" NUMBER, 
	"ZAHLUNGSART" VARCHAR2(20 BYTE), 
	"STEUERNUMMER" VARCHAR2(4000 BYTE), 
	"FK_ARBEITSTAG" NUMBER, 
	"WIEDERHOLUNG" VARCHAR2(20 BYTE), 
	"PK_IMP_BA_HEIZUNGSABRECHNUNG" NUMBER
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USER01" ;

   COMMENT ON COLUMN "COMPANY"."IMP_BA_HEIZUNGSABRECHNUNG"."LIEGENSCHAFTSNUTZER" IS 'Liegenschaftsnutzer
Liegenschaftsnutzer
';
--------------------------------------------------------
--  DDL for Table IMP_BA_HOTELRECHNUNGEN
--------------------------------------------------------

  CREATE TABLE "COMPANY"."IMP_BA_HOTELRECHNUNGEN" 
   (	"HOTEL" VARCHAR2(128 BYTE), 
	"ADRESSE" VARCHAR2(128 BYTE), 
	"DATUM" VARCHAR2(26 BYTE), 
	"BELEGNUMMER" VARCHAR2(26 BYTE), 
	"BELEG" VARCHAR2(20 BYTE), 
	"BETRAG" VARCHAR2(26 BYTE), 
	"ZAHLUNGSART" VARCHAR2(26 BYTE), 
	"VERWENDUNGSZWECK" VARCHAR2(26 BYTE), 
	"ZIMMER" VARCHAR2(20 BYTE), 
	"UEBERNACHTUNG" VARCHAR2(128 BYTE), 
	"FRUEHSTUECK_INKLUSIVE" VARCHAR2(26 BYTE), 
	"PARKEN" VARCHAR2(4000 BYTE), 
	"GEBHREN" VARCHAR2(4000 BYTE), 
	"MWST_19" VARCHAR2(4000 BYTE), 
	"MWST_BETRAG_19" VARCHAR2(4000 BYTE), 
	"MWST_7" VARCHAR2(4000 BYTE), 
	"MWST_7_BETRAG" VARCHAR2(4000 BYTE), 
	"DATUM_VON" VARCHAR2(4000 BYTE), 
	"DATUM_BIS" VARCHAR2(4000 BYTE), 
	"ZIMMER2" VARCHAR2(4000 BYTE), 
	"ANZAHL_NAECHTE" VARCHAR2(4000 BYTE), 
	"FIRMA" VARCHAR2(4000 BYTE), 
	"FK_IMP_BA_BEL" NUMBER, 
	"PK_IMP_BA_HOTELRECHNUNGEN" NUMBER, 
	"FK_BUCHUNG" NUMBER, 
	"FK_ARBEITSTAG" NUMBER, 
	"LAND" VARCHAR2(20 BYTE), 
	"STADT" VARCHAR2(20 BYTE), 
	"FK_LOCATION" NUMBER, 
	"BEMERKUNG" VARCHAR2(4000 BYTE), 
	"BILD" BLOB, 
	"BILD1" BLOB, 
	"FK_PROJEKT" NUMBER, 
	"WÄHRUNG_BETRAG" VARCHAR2(20 BYTE), 
	"FK_LEX_BUCHUNG" NUMBER
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USER01" 
 LOB ("BILD") STORE AS BASICFILE (
  TABLESPACE "USER01" ENABLE STORAGE IN ROW CHUNK 8192 RETENTION 
  NOCACHE LOGGING 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)) 
 LOB ("BILD1") STORE AS BASICFILE (
  TABLESPACE "USER01" ENABLE STORAGE IN ROW CHUNK 8192 RETENTION 
  NOCACHE LOGGING 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)) ;
--------------------------------------------------------
--  DDL for Table IMP_BA_KFZ_VERSICHERUNGEN
--------------------------------------------------------

  CREATE TABLE "COMPANY"."IMP_BA_KFZ_VERSICHERUNGEN" 
   (	"BEZEICHNUNG" VARCHAR2(26 BYTE), 
	"NUMMERNBEZ" VARCHAR2(26 BYTE), 
	"NUMMER" VARCHAR2(26 BYTE), 
	"VERTRAG" VARCHAR2(128 BYTE), 
	"DATUM" VARCHAR2(26 BYTE), 
	"TELEFONNUMMER" VARCHAR2(26 BYTE), 
	"TYP" VARCHAR2(1024 BYTE), 
	"S1" VARCHAR2(26 BYTE), 
	"KM_GRENZE" VARCHAR2(26 BYTE), 
	"BETRAG" VARCHAR2(26 BYTE), 
	"BETRAG_MWST" VARCHAR2(26 BYTE), 
	"AUSLANDSVERSICHERUNG" NUMBER(4,1), 
	"BETRAG_GESAMT" VARCHAR2(26 BYTE), 
	"FAHRZEUG" VARCHAR2(26 BYTE), 
	"SCHADENFREIHEITSKLASSE" VARCHAR2(128 BYTE), 
	"SCHADENFREIHEITSKLASSE1" VARCHAR2(128 BYTE), 
	"ZEITRAUM" VARCHAR2(26 BYTE), 
	"DATUM2" VARCHAR2(26 BYTE), 
	"ZULASSUNG" VARCHAR2(128 BYTE), 
	"DATUM3" VARCHAR2(26 BYTE), 
	"SCHLSSEL" NUMBER(5,0), 
	"TYP_SCHLUESSELNR" VARCHAR2(26 BYTE), 
	"LEISTUNG_KW" NUMBER(5,0), 
	"HUBRAUM_CCM" NUMBER(6,0), 
	"ERSTZULASSUNG" VARCHAR2(26 BYTE), 
	"FINANZIERT" VARCHAR2(26 BYTE), 
	"GEWERBLICH" VARCHAR2(26 BYTE), 
	"ERSTZULASSUNG2" VARCHAR2(26 BYTE), 
	"ZULASSUNG2" VARCHAR2(128 BYTE), 
	"RECHTSCHUTZ" VARCHAR2(128 BYTE), 
	"KM_STAND" VARCHAR2(128 BYTE), 
	"PERSONEN_MINDESTALTER" VARCHAR2(128 BYTE), 
	"FK_IMP_BA_BEL" NUMBER, 
	"BEMERKUNGEN" VARCHAR2(4000 BYTE), 
	"FK_ARBEITSTAG" NUMBER, 
	"FK_BUCHUNG" NUMBER, 
	"FAHRGESTELLNR" VARCHAR2(4000 BYTE), 
	"KENNZEICHEN" VARCHAR2(20 BYTE), 
	"WIEDERHOLUNG" VARCHAR2(20 BYTE), 
	"ZAHLWEISE" VARCHAR2(100 BYTE), 
	"PK_IMP_BA_KFZ_VERSICHERUNGEN" NUMBER, 
	"FK_INVENTAR" NUMBER, 
	"WÄHRUNG_BETRAG" VARCHAR2(20 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USER01" ;
--------------------------------------------------------
--  DDL for Table IMP_BA_KRANKENKASSE
--------------------------------------------------------

  CREATE TABLE "COMPANY"."IMP_BA_KRANKENKASSE" 
   (	"DATUM" VARCHAR2(26 BYTE), 
	"BUCHUNGSTEXT" VARCHAR2(26 BYTE), 
	"VON" VARCHAR2(26 BYTE), 
	"BIS" VARCHAR2(26 BYTE), 
	"BETRAG" VARCHAR2(26 BYTE), 
	"GEZAHLTER_BETRAG" NUMBER(7,0), 
	"KRANKENKASSE" VARCHAR2(26 BYTE), 
	"BEMERKUNG" VARCHAR2(4000 BYTE), 
	"SUMME" NUMBER(8,0), 
	"PROJEKTBEMERKUNG" VARCHAR2(26 BYTE), 
	"FK_BUCHUNG" NUMBER, 
	"FK_IMP_BA_BEL" NUMBER, 
	"PK_IMP_BA_KRANKENKASSE" NUMBER, 
	"FK_ARBEITSTAG" NUMBER, 
	"VERWENDUNGSZWECK" VARCHAR2(4000 BYTE), 
	"IBAN" VARCHAR2(20 BYTE), 
	"WIEDERHOLUNG" VARCHAR2(20 BYTE), 
	"BILD" BLOB, 
	"BILD1" BLOB, 
	"BETRAG1" NUMBER, 
	"ZAHLUNGSART" VARCHAR2(4000 BYTE), 
	"FK_BEITRAG" NUMBER
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USER01" 
 LOB ("BILD") STORE AS BASICFILE (
  TABLESPACE "USER01" ENABLE STORAGE IN ROW CHUNK 8192 RETENTION 
  NOCACHE LOGGING 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)) 
 LOB ("BILD1") STORE AS BASICFILE (
  TABLESPACE "USER01" ENABLE STORAGE IN ROW CHUNK 8192 RETENTION 
  NOCACHE LOGGING 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)) ;
--------------------------------------------------------
--  DDL for Table IMP_BA_OEFFENTL_TICKETS
--------------------------------------------------------

  CREATE TABLE "COMPANY"."IMP_BA_OEFFENTL_TICKETS" 
   (	"VERKEHRSVERBUND" VARCHAR2(26 BYTE), 
	"DATUM" VARCHAR2(26 BYTE), 
	"UHRZEIT" VARCHAR2(26 BYTE), 
	"FAHRTENKARTE" VARCHAR2(128 BYTE), 
	"BETRAG" NUMBER(5,2), 
	"MWST" VARCHAR2(26 BYTE), 
	"ZAHLUNGSART" VARCHAR2(26 BYTE), 
	"BEMERKUNG" VARCHAR2(4000 BYTE), 
	"S1" VARCHAR2(4000 BYTE), 
	"S2" VARCHAR2(4000 BYTE), 
	"S3" VARCHAR2(4000 BYTE), 
	"WOCHENTAG" VARCHAR2(26 BYTE), 
	"VERWENDUNGSZWECK" VARCHAR2(26 BYTE), 
	"FK_IMP_BA_BEL" NUMBER, 
	"PK_IMP_BA_OEFFENTL_TICKETS" NUMBER, 
	"FK_BUCHUNG" NUMBER, 
	"FK_ARBEITSTAG" NUMBER, 
	"BILD" BLOB, 
	"FK_PROJEKT" NUMBER, 
	"FK_LEX_BUCHUNG" NUMBER, 
	"FK_BELEG_ABLAGE" VARCHAR2(4000 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USER01" 
 LOB ("BILD") STORE AS BASICFILE (
  TABLESPACE "USER01" ENABLE STORAGE IN ROW CHUNK 8192 RETENTION 
  NOCACHE LOGGING 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)) ;
--------------------------------------------------------
--  DDL for Table IMP_BA_PARKTICKETS
--------------------------------------------------------

  CREATE TABLE "COMPANY"."IMP_BA_PARKTICKETS" 
   (	"NAME" VARCHAR2(128 BYTE), 
	"BELEGNR" VARCHAR2(128 BYTE), 
	"VON" VARCHAR2(4000 BYTE), 
	"BIS" VARCHAR2(26 BYTE), 
	"BARCODE" VARCHAR2(26 BYTE), 
	"BETRAG" VARCHAR2(26 BYTE), 
	"MWST" NUMBER(*,0), 
	"ZAHLUNGSART" VARCHAR2(26 BYTE), 
	"VERWENDUNGSZWECK" VARCHAR2(26 BYTE), 
	"SONSTIGES1" VARCHAR2(128 BYTE), 
	"SONSTIGES2" VARCHAR2(128 BYTE), 
	"SONSTIGES3" VARCHAR2(26 BYTE), 
	"SONSTIGES4" VARCHAR2(26 BYTE), 
	"STEUERSATZ" VARCHAR2(26 BYTE), 
	"SONSTIGES6" VARCHAR2(26 BYTE), 
	"SONSTIGES7" VARCHAR2(26 BYTE), 
	"SONSTIGES8" VARCHAR2(4000 BYTE), 
	"SONSTIGES9" VARCHAR2(4000 BYTE), 
	"SONSTIGES10" VARCHAR2(4000 BYTE), 
	"SONSTIGES11" VARCHAR2(4000 BYTE), 
	"SONSTIGES12" VARCHAR2(4000 BYTE), 
	"FK_IMP_BA_BEL" NUMBER, 
	"FK_ARBEITSTAG" NUMBER, 
	"FK_BUCHUNG" NUMBER, 
	"COLUMN1" VARCHAR2(20 BYTE), 
	"STEUERNUMMER" VARCHAR2(4000 BYTE), 
	"PK_IMP_BA_PARKTICKETS" NUMBER, 
	"CHECKED" NUMBER, 
	"LAND" VARCHAR2(20 BYTE), 
	"WÄHRUNG" VARCHAR2(20 BYTE), 
	"BILD" BLOB, 
	"KENNZEICHEN" VARCHAR2(20 BYTE), 
	"FK_INVENTAR" NUMBER, 
	"FK_PROJEKT" NUMBER, 
	"WÄHRUNG_BETRAG" VARCHAR2(20 BYTE), 
	"FK_BELEG_ABLAGE" VARCHAR2(4000 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USER01" 
 LOB ("BILD") STORE AS BASICFILE (
  TABLESPACE "USER01" ENABLE STORAGE IN ROW CHUNK 8192 RETENTION 
  NOCACHE LOGGING 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)) ;
--------------------------------------------------------
--  DDL for Table IMP_BA_SOFTWARE
--------------------------------------------------------

  CREATE TABLE "COMPANY"."IMP_BA_SOFTWARE" 
   (	"PK_IMP_BA_SOFTWARE" NUMBER, 
	"BEZEICHNUNG" VARCHAR2(4000 BYTE), 
	"LAND" VARCHAR2(26 BYTE), 
	"BETRAG" VARCHAR2(20 BYTE), 
	"WÄHRUNG" VARCHAR2(26 BYTE), 
	"STEUERSATZ" VARCHAR2(20 BYTE), 
	"STEUERNUMMER" VARCHAR2(128 BYTE), 
	"DATUM" VARCHAR2(26 BYTE), 
	"UHRZEIT" VARCHAR2(26 BYTE), 
	"BELEGNUMMER" VARCHAR2(128 BYTE), 
	"ZAHLUNGSART" VARCHAR2(26 BYTE), 
	"BELEG" VARCHAR2(128 BYTE), 
	"VERWENDUNGSZWECK" VARCHAR2(4000 BYTE), 
	"SONSTIGES2" VARCHAR2(4000 BYTE), 
	"S7" VARCHAR2(4000 BYTE), 
	"S8" VARCHAR2(4000 BYTE), 
	"S9" VARCHAR2(4000 BYTE), 
	"S10" VARCHAR2(4000 BYTE), 
	"FK_ARBEITSTAG" NUMBER, 
	"FK_BUCHUNG" NUMBER, 
	"FK_IMP_BA_BEL" NUMBER, 
	"MERK" VARCHAR2(20 BYTE), 
	"WERT" NUMBER, 
	"FK_IMP_BA_ALLG_BEL1" NUMBER, 
	"ORT" VARCHAR2(26 BYTE), 
	"UMRECHNUNGSKURS" VARCHAR2(255 BYTE), 
	"MWST" NUMBER, 
	"DOK" BFILE, 
	"BILD" BLOB, 
	"BILD1" BLOB, 
	"FK_INVENTAR" NUMBER
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USER01" 
 LOB ("BILD") STORE AS BASICFILE (
  TABLESPACE "USER01" ENABLE STORAGE IN ROW CHUNK 8192 RETENTION 
  NOCACHE LOGGING 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)) 
 LOB ("BILD1") STORE AS BASICFILE (
  TABLESPACE "USER01" ENABLE STORAGE IN ROW CHUNK 8192 RETENTION 
  NOCACHE LOGGING 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)) ;
--------------------------------------------------------
--  DDL for Table IMP_BA_SONSTIGE_BELEGE
--------------------------------------------------------

  CREATE TABLE "COMPANY"."IMP_BA_SONSTIGE_BELEGE" 
   (	"ART" VARCHAR2(4000 BYTE), 
	"FIRMA" VARCHAR2(4000 BYTE), 
	"BELEGNUMMER" VARCHAR2(4000 BYTE), 
	"DATUM" VARCHAR2(4000 BYTE), 
	"REFERENZNUMMER" VARCHAR2(4000 BYTE), 
	"ARTIKELNUMMER" VARCHAR2(4000 BYTE), 
	"BETRAG" VARCHAR2(4000 BYTE), 
	"STEUERNUMMER" VARCHAR2(4000 BYTE), 
	"S1" VARCHAR2(4000 BYTE), 
	"MWST" VARCHAR2(4000 BYTE), 
	"SENDUNGSNUMMER" VARCHAR2(4000 BYTE), 
	"GEWICHT" VARCHAR2(4000 BYTE), 
	"PK_IMP_BA_SONSTIGE_BELEGE" NUMBER, 
	"FK_IMP_BA_BEL" NUMBER, 
	"ZAHLUNGSART" VARCHAR2(4000 BYTE), 
	"FK_ARBEITSTAG" NUMBER, 
	"EINZELBETRÄGE" VARCHAR2(20 BYTE), 
	"FK_BUCHUNG" NUMBER, 
	"FK_INVENTAR" NUMBER, 
	"FK_PROJEKT" NUMBER, 
	"WÄHRUNG_BETRAG" VARCHAR2(20 BYTE), 
	"FK_LEX_BUCHUNG" NUMBER, 
	"FK_BELEG_ABLAGE" VARCHAR2(4000 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USER01" ;
--------------------------------------------------------
--  DDL for Table IMP_BA_STEUER
--------------------------------------------------------

  CREATE TABLE "COMPANY"."IMP_BA_STEUER" 
   (	"MELDEMONAT" VARCHAR2(26 BYTE), 
	"BERICHTIGTE_ANMELDUNG" NUMBER(3,0), 
	"BELEGNR" NUMBER(3,0), 
	"STEUERPFLICHTIGE_UMSAETZE" NUMBER(7,0), 
	"ABZIEHBARE_VORSTEUER" NUMBER(7,2), 
	"UEBERSCHUSS" VARCHAR2(26 BYTE), 
	"SENDEDATUM" VARCHAR2(128 BYTE), 
	"TRANSFERTICKET" VARCHAR2(128 BYTE), 
	"ZUGEH_BELEGE" VARCHAR2(26 BYTE), 
	"ZUGEH_BELEGE_ABR" VARCHAR2(26 BYTE), 
	"ZUGEH_FINANZAMT" VARCHAR2(26 BYTE), 
	"STEUERNUMMER" VARCHAR2(26 BYTE), 
	"FK_IMP_BA_BEL" NUMBER
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USER01" ;
--------------------------------------------------------
--  DDL for Table IMP_BA_STEUER_2016
--------------------------------------------------------

  CREATE TABLE "COMPANY"."IMP_BA_STEUER_2016" 
   (	"POS" VARCHAR2(128 BYTE), 
	"BETRAG" VARCHAR2(26 BYTE), 
	"POS1" VARCHAR2(26 BYTE), 
	"STEUERNUMMER" VARCHAR2(26 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USER01" ;
--------------------------------------------------------
--  DDL for Table IMP_BA_TANKSTELLE
--------------------------------------------------------

  CREATE TABLE "COMPANY"."IMP_BA_TANKSTELLE" 
   (	"TANKSTELLE" VARCHAR2(128 BYTE), 
	"ORT" VARCHAR2(4000 BYTE), 
	"LAND" VARCHAR2(4000 BYTE), 
	"TANKSTELLEN_NR" VARCHAR2(4000 BYTE), 
	"BELEG_NR" VARCHAR2(4000 BYTE), 
	"DATUM" VARCHAR2(4000 BYTE), 
	"ZAPFSULE" VARCHAR2(4000 BYTE), 
	"LITER" VARCHAR2(4000 BYTE), 
	"PREIS_PRO_LITER" VARCHAR2(4000 BYTE), 
	"EUR" VARCHAR2(4000 BYTE), 
	"KARTENZAHLUNG" VARCHAR2(4000 BYTE), 
	"MWST" VARCHAR2(4000 BYTE), 
	"MWST_BETRAG" VARCHAR2(26 BYTE), 
	"NETTO" VARCHAR2(20 BYTE), 
	"STEUERNR" VARCHAR2(128 BYTE), 
	"BEMERKUNGEN" VARCHAR2(128 BYTE), 
	"VERWENDUNGSZWECK" VARCHAR2(26 BYTE), 
	"KENNZEICHEN" VARCHAR2(26 BYTE), 
	"BEMERKUNGEN2" VARCHAR2(128 BYTE), 
	"FK_IMP_BA_BEL" NUMBER, 
	"WÄHRUNG" VARCHAR2(20 BYTE), 
	"PREIS_PRO_MENGE" VARCHAR2(20 BYTE), 
	"FK_BUCHUNG" NUMBER, 
	"FK_ARBEITSTAG" NUMBER, 
	"PK_IMP_BA_TANKSTELLE" NUMBER, 
	"CHECKED" NUMBER, 
	"WERT" NUMBER, 
	"BILD" BLOB, 
	"AUTOWAESCHE" NUMBER(1,0) DEFAULT 0, 
	"VIGNETTE" NUMBER(1,0) DEFAULT 0, 
	"LEBENSMITTEL" NUMBER(1,0) DEFAULT 0, 
	"SONSTIGES" NUMBER(1,0) DEFAULT 0, 
	"AUTOERSATZTEILE" NUMBER(1,0) DEFAULT 0, 
	"FK_INVENTAR" NUMBER, 
	"FK_PROJEKT" NUMBER, 
	"WÄHRUNG_BETRAG" VARCHAR2(20 BYTE), 
	"FK_LOCATION" NUMBER, 
	"FK_LEX_BUCHUNG" NUMBER, 
	"FK_BELEG_ABLAGE" VARCHAR2(4000 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USER01" 
 LOB ("BILD") STORE AS BASICFILE (
  TABLESPACE "USER01" ENABLE STORAGE IN ROW CHUNK 8192 RETENTION 
  NOCACHE LOGGING 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)) ;
--------------------------------------------------------
--  DDL for Table IMP_BA_TELEFONKARTEN
--------------------------------------------------------

  CREATE TABLE "COMPANY"."IMP_BA_TELEFONKARTEN" 
   (	"TYP_TELEFON_KARTE" VARCHAR2(26 BYTE), 
	"TELEFONNUMMER" VARCHAR2(26 BYTE), 
	"FL_VERTRAG" VARCHAR2(26 BYTE), 
	"FL_BESTEHEND" VARCHAR2(26 BYTE), 
	"ANTRAGSNUMMER" VARCHAR2(26 BYTE), 
	"TYP" VARCHAR2(26 BYTE), 
	"DATENKAPAZITT" VARCHAR2(26 BYTE), 
	"KUNDENNUMMER" VARCHAR2(4000 BYTE), 
	"DATUM" VARCHAR2(26 BYTE), 
	"PROVIDER" VARCHAR2(26 BYTE), 
	"DIENSTLEISTER" VARCHAR2(26 BYTE), 
	"PIN1" VARCHAR2(20 BYTE), 
	"KARTENNUMMER" VARCHAR2(20 BYTE), 
	"KARTENNUMMER1" VARCHAR2(20 BYTE), 
	"ABLAUFDATUM" VARCHAR2(26 BYTE), 
	"BEMERKUNG" VARCHAR2(26 BYTE), 
	"VERTRAGSART" VARCHAR2(26 BYTE), 
	"VERTRAGSLAUFZEIT" VARCHAR2(26 BYTE), 
	"DATUM2" VARCHAR2(20 BYTE), 
	"AUFTRAGSNUMMER" VARCHAR2(20 BYTE), 
	"PK_IMP_BA_TELEFONKARTEN" NUMBER, 
	"WEBSEITE" VARCHAR2(20 BYTE), 
	"BENUTZERNAME" VARCHAR2(20 BYTE), 
	"PASSWORT" VARCHAR2(20 BYTE), 
	"PUK1" VARCHAR2(4000 BYTE), 
	"PUK2" VARCHAR2(4000 BYTE), 
	"PIN2" VARCHAR2(20 BYTE), 
	"SIMKARTENNR" VARCHAR2(4000 BYTE), 
	"IMEI" VARCHAR2(20 BYTE), 
	"MANDATSREFERENZNUMMER" VARCHAR2(20 BYTE), 
	"PRODUKT" VARCHAR2(20 BYTE), 
	"DATENÜBERTRAGUNG" VARCHAR2(20 BYTE), 
	"VERTRAGSNUMMER" VARCHAR2(20 BYTE), 
	"VON" DATE, 
	"BIS" DATE, 
	"AUFTRAGSDATUM" DATE
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USER01" ;
--------------------------------------------------------
--  DDL for Table IMP_BA_TEXTILREINIGUNG
--------------------------------------------------------

  CREATE TABLE "COMPANY"."IMP_BA_TEXTILREINIGUNG" 
   (	"NR" VARCHAR2(26 BYTE), 
	"NR2" VARCHAR2(26 BYTE), 
	"TYP" VARCHAR2(26 BYTE), 
	"TYP2" VARCHAR2(26 BYTE), 
	"DATUM" VARCHAR2(26 BYTE), 
	"ARTIKELTYP" NUMBER(5,0), 
	"ANZAHL" NUMBER(3,0), 
	"PREIS_PRO_STUECK" NUMBER(6,1), 
	"ARTIKELBEZEICHNUNG" VARCHAR2(26 BYTE), 
	"KUNDENNR" NUMBER(6,0), 
	"WERTEKARTENNR" NUMBER(11,0), 
	"VORHERIGER_RESTWERT" NUMBER(5,0), 
	"AKTUELLER_RESTWERT" NUMBER(5,0), 
	"GESAMTPREIS" NUMBER(6,1), 
	"TEXTILREINIGUNG" VARCHAR2(128 BYTE), 
	"BEMERKUNG" VARCHAR2(26 BYTE), 
	"FK_IMP_BA_BEL" NUMBER, 
	"PK_IMP_BA_TEXTILREINIGUNG" NUMBER, 
	"FK_ARBEITSTAG" NUMBER, 
	"ZAHLUNGSART" VARCHAR2(4000 BYTE), 
	"FK_BUCHUNG" NUMBER, 
	"STEUERSATZ" NUMBER, 
	"FK_PROJEKT" NUMBER, 
	"FK_LEX_BUCHUNG" NUMBER, 
	"FK_BELEG_ABLAGE" VARCHAR2(4000 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USER01" ;
--------------------------------------------------------
--  DDL for Table IMP_BA_UNTERHALTUNG
--------------------------------------------------------

  CREATE TABLE "COMPANY"."IMP_BA_UNTERHALTUNG" 
   (	"COLUMN1" VARCHAR2(4000 BYTE), 
	"COLUMN2" VARCHAR2(4000 BYTE), 
	"COLUMN3" VARCHAR2(4000 BYTE), 
	"COLUMN4" VARCHAR2(4000 BYTE), 
	"BILD" BLOB
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USER01" 
 LOB ("BILD") STORE AS BASICFILE (
  TABLESPACE "USER01" ENABLE STORAGE IN ROW CHUNK 8192 RETENTION 
  NOCACHE LOGGING 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)) ;
--------------------------------------------------------
--  DDL for Table IMP_GEO
--------------------------------------------------------

  CREATE TABLE "COMPANY"."IMP_GEO" 
   (	"T1" NUMBER, 
	"T2" BLOB
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USER01" 
 LOB ("T2") STORE AS BASICFILE (
  TABLESPACE "USER01" ENABLE STORAGE IN ROW CHUNK 8192 RETENTION 
  NOCACHE LOGGING 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)) ;
--------------------------------------------------------
--  DDL for Table IMP_KRED_OV_OLD
--------------------------------------------------------

  CREATE TABLE "COMPANY"."IMP_KRED_OV_OLD" 
   (	"ID" VARCHAR2(20 BYTE), 
	"Datum" DATE, 
	"Uhrzeit" DATE, 
	"Zeitzone" VARCHAR2(255 BYTE), 
	"Name" VARCHAR2(255 BYTE), 
	"Typ" VARCHAR2(255 BYTE), 
	"Status" VARCHAR2(255 BYTE), 
	"Währung" VARCHAR2(255 BYTE), 
	"Brutto" BINARY_DOUBLE, 
	"Gebühr" VARCHAR2(255 BYTE), 
	"Netto" VARCHAR2(255 BYTE), 
	"Absender" VARCHAR2(255 BYTE), 
	"Empfänger" VARCHAR2(255 BYTE), 
	"Transaktionscode" VARCHAR2(255 BYTE), 
	"Lieferadresse" VARCHAR2(255 BYTE), 
	"Adress-Status" VARCHAR2(255 BYTE), 
	"Artikelbezeichnung" VARCHAR2(255 BYTE), 
	"Artikelnummer" VARCHAR2(255 BYTE), 
	"Versand" VARCHAR2(255 BYTE), 
	"Versicherungsbetrag" VARCHAR2(255 BYTE), 
	"Umsatzsteuer" VARCHAR2(255 BYTE), 
	"Option 1 Name" VARCHAR2(255 BYTE), 
	"Option 1 Wert" VARCHAR2(255 BYTE), 
	"Option 2 Name" VARCHAR2(255 BYTE), 
	"Option 2 Wert" VARCHAR2(255 BYTE), 
	"Zugehöriger" VARCHAR2(255 BYTE), 
	"Rechnungsnummer" VARCHAR2(255 BYTE), 
	"Zollnummer" VARCHAR2(255 BYTE), 
	"Anzahl" VARCHAR2(255 BYTE), 
	"Empfangsnummer" VARCHAR2(255 BYTE), 
	"Guthaben" BINARY_DOUBLE, 
	"Adresszeile_1" VARCHAR2(255 BYTE), 
	"Adresszusatz" VARCHAR2(255 BYTE), 
	"Ort" VARCHAR2(255 BYTE), 
	"Bundesland" VARCHAR2(255 BYTE), 
	"PLZ" VARCHAR2(255 BYTE), 
	"Land" VARCHAR2(255 BYTE), 
	"Telefon" VARCHAR2(255 BYTE), 
	"Betreff" VARCHAR2(255 BYTE), 
	"Hinweis" VARCHAR2(255 BYTE), 
	"Ländervorwahl" VARCHAR2(255 BYTE), 
	"Auswirkung" VARCHAR2(255 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USER01" ;
--------------------------------------------------------
--  DDL for Table IMP_KTO_GIR
--------------------------------------------------------

  CREATE TABLE "COMPANY"."IMP_KTO_GIR" 
   (	"BUCHUNGSTAG" VARCHAR2(26 BYTE), 
	"WERTSTELLUNG" VARCHAR2(26 BYTE), 
	"UMSATZART" VARCHAR2(26 BYTE), 
	"BUCHUNGSTEXT" VARCHAR2(1024 BYTE), 
	"BETRAG" NUMBER(8,2), 
	"WÄHRUNG" VARCHAR2(26 BYTE), 
	"AUFTRAGGEBERKONTO" NUMBER(11,0), 
	"BANKLEITZAHL_AUFTRAGGEBERKONTO" NUMBER(10,0), 
	"IBAN_AUFTRAGGEBERKONTO" VARCHAR2(26 BYTE), 
	"KATEGORIE" VARCHAR2(128 BYTE), 
	"ID" NUMBER
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USER01" ;
--------------------------------------------------------
--  DDL for Table IMP_KTO_KRED
--------------------------------------------------------

  CREATE TABLE "COMPANY"."IMP_KTO_KRED" 
   (	"BUCHUNGSTAG" VARCHAR2(26 BYTE), 
	"BELEG" VARCHAR2(26 BYTE), 
	"UNTERNEHMEN" VARCHAR2(128 BYTE), 
	"BETRAG" NUMBER(8,2), 
	"WÄHRUNG" VARCHAR2(26 BYTE), 
	"BETRAG_URSPRUNG" NUMBER(8,2), 
	"WÄHRUNG_URSPRUNG" VARCHAR2(26 BYTE), 
	"BELASTETE_KREDITKARTE" NUMBER(18,0), 
	"KATEGORIE" VARCHAR2(128 BYTE), 
	"ID" NUMBER
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USER01" ;
--------------------------------------------------------
--  DDL for Table IMP_TEL_MOBILCOM_RECH
--------------------------------------------------------

  CREATE TABLE "COMPANY"."IMP_TEL_MOBILCOM_RECH" 
   (	"ZAEHLER" NUMBER(4,0), 
	"RECHNUNGSNUMMER" VARCHAR2(26 BYTE), 
	"RECHNUNGSDATUM" NUMBER(10,0), 
	"ABRECHNUNGSMONAT" VARCHAR2(26 BYTE), 
	"KUNDENNUMMER" NUMBER(10,0), 
	"RUFNUMMER" VARCHAR2(26 BYTE), 
	"SIMNUMMER" NUMBER(21,0), 
	"BENUTZER" VARCHAR2(26 BYTE), 
	"KOSTENSTELLE" VARCHAR2(26 BYTE), 
	"ZUSATZINFO" VARCHAR2(26 BYTE), 
	"KATEGORIE" VARCHAR2(128 BYTE), 
	"DATUMVON" VARCHAR2(26 BYTE), 
	"DATUMBIS" VARCHAR2(26 BYTE), 
	"MWSTSATZ" NUMBER(4,0), 
	"NETTO_BETRAG" NUMBER(8,4), 
	"PK_IMP_TEL_MOBILCOM_RECH" NUMBER, 
	"BRUTTO_BETRAG" NUMBER, 
	"FK_BUCHUNG" NUMBER
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USER01" ;
--------------------------------------------------------
--  DDL for Table IMP_TEL_MOBILCOM_RECH_DET
--------------------------------------------------------

  CREATE TABLE "COMPANY"."IMP_TEL_MOBILCOM_RECH_DET" 
   (	"ZAEHLER" NUMBER(4,0), 
	"RECHNUNGSNUMMER" VARCHAR2(26 BYTE), 
	"RECHNUNGSDATUM" NUMBER(10,0), 
	"ABRECHNUNGSMONAT" VARCHAR2(26 BYTE), 
	"KUNDENNUMMER" NUMBER(10,0), 
	"RUFNUMMER" VARCHAR2(26 BYTE), 
	"SIMNUMMER" NUMBER(21,0), 
	"BENUTZER" VARCHAR2(26 BYTE), 
	"KOSTENSTELLE" VARCHAR2(26 BYTE), 
	"ZUSATZINFO" VARCHAR2(26 BYTE), 
	"KATEGORIE" VARCHAR2(128 BYTE), 
	"DETAIL" VARCHAR2(128 BYTE), 
	"DATUMVON" VARCHAR2(26 BYTE), 
	"DATUMBIS" VARCHAR2(26 BYTE), 
	"MENGE" NUMBER(5,0), 
	"MWSTSATZ" NUMBER(4,0), 
	"BETRAG" NUMBER(8,4)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USER01" ;
--------------------------------------------------------
--  DDL for Table IMP_TEL_MOBILCOM_RECH_OV
--------------------------------------------------------

  CREATE TABLE "COMPANY"."IMP_TEL_MOBILCOM_RECH_OV" 
   (	"Monat" VARCHAR2(255 BYTE), 
	"Rechnungsnummer" VARCHAR2(255 BYTE), 
	"Netto" VARCHAR2(255 BYTE), 
	"Mwst" VARCHAR2(255 BYTE), 
	"Brutto" VARCHAR2(255 BYTE), 
	"PK_IMP_TEL_MOBILCOM_RECH_OV" VARCHAR2(20 BYTE), 
	"FK_BUCHUNG" NUMBER, 
	"BELEG" BLOB, 
	"MIMETYPE" VARCHAR2(20 BYTE), 
	"RECHNUNGSDATUM" DATE, 
	"FK_RECHNUNGSDATUM" NUMBER, 
	"FK_IMP_TEL_BEL" NUMBER, 
	"ZAHLUNGSART" VARCHAR2(4000 BYTE), 
	"FK_LEX_BUCHUNG" VARCHAR2(20 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USER01" 
 LOB ("BELEG") STORE AS BASICFILE (
  TABLESPACE "USER01" ENABLE STORAGE IN ROW CHUNK 8192 RETENTION 
  NOCACHE LOGGING 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)) ;
--------------------------------------------------------
--  DDL for Table IMP_TEL_O2
--------------------------------------------------------

  CREATE TABLE "COMPANY"."IMP_TEL_O2" 
   (	"PK_IMP_TEL_O2" NUMBER(4,0), 
	"BANKVERBINDUNG" VARCHAR2(256 BYTE), 
	"JAHR" NUMBER(6,0), 
	"RECHNUNGSNUMMER" VARCHAR2(26 BYTE), 
	"RECHNUNGSDATUM" VARCHAR2(26 BYTE), 
	"VON" VARCHAR2(26 BYTE), 
	"TR" VARCHAR2(26 BYTE), 
	"BIS" NUMBER(10,0), 
	"FAELLIG_AM" NUMBER(10,0), 
	"BETRAG" NUMBER(6,2), 
	"WAEHRUNG" VARCHAR2(26 BYTE), 
	"OFFENER_BETRAG" NUMBER(3,0), 
	"WAEHRUNG1" VARCHAR2(26 BYTE), 
	"BEGLICHEN_AM" NUMBER(10,0), 
	"FK_BUCHUNG" NUMBER, 
	"FK_ARBEITSTAG" NUMBER, 
	"FK_IMP_TEL_BEL" NUMBER, 
	"ZAHLUNGSART" VARCHAR2(4000 BYTE), 
	"FK_LEX_BUCHUNG" NUMBER
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USER01" ;
--------------------------------------------------------
--  DDL for Table IMP_TEL_VODAFONE
--------------------------------------------------------

  CREATE TABLE "COMPANY"."IMP_TEL_VODAFONE" 
   (	"DATUM" VARCHAR2(26 BYTE), 
	"BEZEICHNUNG" VARCHAR2(128 BYTE), 
	"BETRAG" NUMBER(6,2), 
	"WÄHRUNG" VARCHAR2(26 BYTE), 
	"PK_TEL_VODAFONE" NUMBER, 
	"FK_BUCHUNG" NUMBER, 
	"FK_TEL_RECHNUNG" NUMBER, 
	"PK_IMP_TEL_VODAFONE" NUMBER, 
	"FK_ARBEITSTAG" NUMBER, 
	"FK_IMP_TEL_BEL" NUMBER, 
	"ZAHLUNGSART" VARCHAR2(4000 BYTE), 
	"FK_LEX_BUCHUNG" NUMBER
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USER01" ;
--------------------------------------------------------
--  DDL for Table INP_BELEGE_ALL
--------------------------------------------------------

  CREATE TABLE "COMPANY"."INP_BELEGE_ALL" 
   (	"PK_INP_BELEGE_ALL" NUMBER, 
	"FK_LEX_BUCHUNG" NUMBER, 
	"FK_KATEGORIE" NUMBER, 
	"FK_ARBEITSTAG" NUMBER, 
	"FK_BUCHUNG" NUMBER, 
	"FK_ZAHLUNGSART" NUMBER, 
	"FK_VERWENDUNGSZWECK" NUMBER, 
	"FK_INVENTAR" NUMBER, 
	"FK_PROJEKT" NUMBER, 
	"BELEGNUMMER" VARCHAR2(128 BYTE), 
	"BEZEICHNUNG" VARCHAR2(4000 BYTE), 
	"FK_LAND" NUMBER, 
	"FK_CITY" NUMBER, 
	"BEL_DATUM" DATE, 
	"VON" DATE, 
	"BIS" DATE, 
	"NETTO_BETRAG" NUMBER, 
	"FK_STEUERSATZ" NUMBER, 
	"MWST_BETRAG" NUMBER, 
	"BRUTTO_BETRAG" NUMBER, 
	"FK_WAEHRUNG" NUMBER, 
	"STEUERNUMMER" VARCHAR2(4000 BYTE), 
	"FK_UMRECHNUNGSKURS" NUMBER, 
	"COMM_REST_BELEG" CLOB, 
	"COMM_TEL_BELEG" CLOB, 
	"COMM_PRODUKTE" CLOB, 
	"COMM_BEGRÜNDUNG" CLOB, 
	"COMM_SONSTIGES" CLOB, 
	"BELEG" BLOB, 
	"ZAHLUNGSBELEG" BLOB, 
	"LITER" NUMBER, 
	"ZAPFSÄULE" NUMBER, 
	"FK_LOCATION" NUMBER, 
	"PERSÖNLICH_VOR_ORT" NUMBER, 
	"BELEG_UHRZEIT" DATE, 
	"VON_UHRZEIT" DATE, 
	"BIS_UHRZEIT" DATE, 
	"FK_VON_ARBEITSTAG" NUMBER, 
	"FK_BIS_ARBEITSTAG" NUMBER, 
	"COMM_ADRESSE" VARCHAR2(4000 BYTE), 
	"TANKSTELLEN_NR" VARCHAR2(4000 BYTE), 
	"BRUTTO_BETRAG_INCL_TRINKG" NUMBER, 
	"COMM_PARKTICKET" CLOB, 
	"FRMDW_NETTO_BETRAG" NUMBER, 
	"FK_FRMDW" NUMBER, 
	"FK_FRMDW_MWST_SATZ" NUMBER, 
	"FRMDW_MWST_BETRAG" NUMBER, 
	"FRMDW_BRUTTO_BETRAG" NUMBER, 
	"FRMDW_BRUTTO_INCL_TRINKG" NUMBER, 
	"MWST_BETRAG_EUR" NUMBER, 
	"BRUTTO_BETRAG_EUR" NUMBER, 
	"BRUTTO_INCL_TRINKG_EUR" NUMBER, 
	"NETTO_BETRAG_EUR" NUMBER, 
	"PREIS_PRO_MENGE" NUMBER, 
	"MENGENEINHEIT" NUMBER, 
	"LA_DATUM" DATE, 
	"FK_LA_KONTO" NUMBER, 
	"FK_LA_WDH" NUMBER, 
	"FK_STATUS" NUMBER, 
	"COMM_VERGEHEN" CLOB, 
	"VERG_BEHOERDE" VARCHAR2(4000 BYTE), 
	"CNT_PUNKTE" NUMBER, 
	"FK_BELEG_ABLAGE" VARCHAR2(4000 BYTE), 
	"FK_ABL_ORDNER_PAGE" NUMBER, 
	"CNT_PUNKTE_GESCHAETZT" NUMBER, 
	"PUNKTE_VON" DATE, 
	"PUNKTE_BIS" DATE, 
	"FK_LOCATION_VERG" NUMBER, 
	"FK_IMP_BA_BEL_OLD" NUMBER, 
	"GESCHW_IST" NUMBER, 
	"GESCHW_SOLL" NUMBER, 
	"GESCHW_UEBER_GRZ" NUMBER, 
	"GESCHW_UEBER_GRZ_ABZGL_MESSTOL" NUMBER, 
	"CODE_BUSSGELD" VARCHAR2(4000 BYTE), 
	"DESCR_BUSSGELD" VARCHAR2(4000 BYTE), 
	"GEZAHLT_AM" DATE, 
	"WEBSEITE" VARCHAR2(4000 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USER01" 
 LOB ("COMM_REST_BELEG") STORE AS BASICFILE (
  TABLESPACE "USER01" ENABLE STORAGE IN ROW CHUNK 8192 RETENTION 
  NOCACHE LOGGING 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)) 
 LOB ("COMM_TEL_BELEG") STORE AS BASICFILE (
  TABLESPACE "USER01" ENABLE STORAGE IN ROW CHUNK 8192 RETENTION 
  NOCACHE LOGGING 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)) 
 LOB ("COMM_PRODUKTE") STORE AS BASICFILE (
  TABLESPACE "USER01" ENABLE STORAGE IN ROW CHUNK 8192 RETENTION 
  NOCACHE LOGGING 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)) 
 LOB ("COMM_BEGRÜNDUNG") STORE AS BASICFILE (
  TABLESPACE "USER01" ENABLE STORAGE IN ROW CHUNK 8192 RETENTION 
  NOCACHE LOGGING 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)) 
 LOB ("COMM_SONSTIGES") STORE AS BASICFILE (
  TABLESPACE "USER01" ENABLE STORAGE IN ROW CHUNK 8192 RETENTION 
  NOCACHE LOGGING 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)) 
 LOB ("BELEG") STORE AS BASICFILE (
  TABLESPACE "USER01" ENABLE STORAGE IN ROW CHUNK 8192 RETENTION 
  NOCACHE LOGGING 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)) 
 LOB ("ZAHLUNGSBELEG") STORE AS BASICFILE (
  TABLESPACE "USER01" ENABLE STORAGE IN ROW CHUNK 8192 RETENTION 
  NOCACHE LOGGING 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)) 
 LOB ("COMM_PARKTICKET") STORE AS BASICFILE (
  TABLESPACE "USER01" ENABLE STORAGE IN ROW CHUNK 8192 RETENTION 
  NOCACHE LOGGING 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)) 
 LOB ("COMM_VERGEHEN") STORE AS BASICFILE (
  TABLESPACE "USER01" ENABLE STORAGE IN ROW CHUNK 8192 RETENTION 
  NOCACHE LOGGING 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)) ;

   COMMENT ON COLUMN "COMPANY"."INP_BELEGE_ALL"."LA_DATUM" IS 'Lastschrift';
   COMMENT ON COLUMN "COMPANY"."INP_BELEGE_ALL"."FK_LA_WDH" IS 'Wiederholung';
--------------------------------------------------------
--  DDL for Table INP_BELEGE_POS_ALL
--------------------------------------------------------

  CREATE TABLE "COMPANY"."INP_BELEGE_POS_ALL" 
   (	"PK_INP_BELEGE_POS_ALL" NUMBER, 
	"FK_BELEG" NUMBER, 
	"FK_LEX_BUCHUNG" NUMBER, 
	"FK_KATEGORIE" NUMBER, 
	"FK_ARBEITSTAG" NUMBER, 
	"FK_BUCHUNG" NUMBER, 
	"FK_ZAHLUNGSART" NUMBER, 
	"FK_VERWENDUNGSZWECK" NUMBER, 
	"FK_INVENTAR" NUMBER, 
	"FK_PROJEKT" NUMBER, 
	"BELEGNUMMER" VARCHAR2(128 BYTE), 
	"BEZEICHNUNG" VARCHAR2(4000 BYTE), 
	"FK_LAND" NUMBER, 
	"FK_CITY" NUMBER, 
	"BEL_DATUM" DATE, 
	"VON" DATE, 
	"BIS" DATE, 
	"NETTO_BETRAG" NUMBER, 
	"STEUERSATZ" NUMBER, 
	"MWST" NUMBER, 
	"BRUTTO_BETRAG" NUMBER, 
	"FK_WAEHRUNG" NUMBER, 
	"STEUERNUMMER" VARCHAR2(128 BYTE), 
	"UMRECHNUNGSKURS" VARCHAR2(255 BYTE), 
	"COMM_REST_BELEG" CLOB, 
	"COMM_TEL_BELEG" CLOB, 
	"COMM_PRODUKTE" CLOB, 
	"COMM_BEGRÜNDUNG" CLOB, 
	"COMM_SONSTIGES" CLOB, 
	"BELEG" BLOB, 
	"ZAHLUNGSBELEG" BLOB, 
	"LITER" NUMBER, 
	"ZAPFSÄULE" NUMBER
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USER01" 
 LOB ("COMM_REST_BELEG") STORE AS BASICFILE (
  TABLESPACE "USER01" ENABLE STORAGE IN ROW CHUNK 8192 RETENTION 
  NOCACHE LOGGING 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)) 
 LOB ("COMM_TEL_BELEG") STORE AS BASICFILE (
  TABLESPACE "USER01" ENABLE STORAGE IN ROW CHUNK 8192 RETENTION 
  NOCACHE LOGGING 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)) 
 LOB ("COMM_PRODUKTE") STORE AS BASICFILE (
  TABLESPACE "USER01" ENABLE STORAGE IN ROW CHUNK 8192 RETENTION 
  NOCACHE LOGGING 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)) 
 LOB ("COMM_BEGRÜNDUNG") STORE AS BASICFILE (
  TABLESPACE "USER01" ENABLE STORAGE IN ROW CHUNK 8192 RETENTION 
  NOCACHE LOGGING 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)) 
 LOB ("COMM_SONSTIGES") STORE AS BASICFILE (
  TABLESPACE "USER01" ENABLE STORAGE IN ROW CHUNK 8192 RETENTION 
  NOCACHE LOGGING 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)) 
 LOB ("BELEG") STORE AS BASICFILE (
  TABLESPACE "USER01" ENABLE STORAGE IN ROW CHUNK 8192 RETENTION 
  NOCACHE LOGGING 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)) 
 LOB ("ZAHLUNGSBELEG") STORE AS BASICFILE (
  TABLESPACE "USER01" ENABLE STORAGE IN ROW CHUNK 8192 RETENTION 
  NOCACHE LOGGING 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)) ;
--------------------------------------------------------
--  DDL for Table KTO_Girokonto
--------------------------------------------------------

  CREATE TABLE "COMPANY"."KTO_Girokonto" 
   (	"ID" NUMBER, 
	"Buchungstag" DATE, 
	"Wertstellung" DATE, 
	"Umsatzart" VARCHAR2(255 BYTE), 
	"Buchungstext" CLOB, 
	"Betrag" BINARY_DOUBLE, 
	"Währung" VARCHAR2(255 BYTE), 
	"Auftraggeberkonto" BINARY_DOUBLE, 
	"Bankleitzahl Auftraggeberkonto" BINARY_DOUBLE, 
	"IBAN Auftraggeberkonto" VARCHAR2(255 BYTE), 
	"Kategorie" VARCHAR2(255 BYTE), 
	"F12" VARCHAR2(255 BYTE), 
	"F13" VARCHAR2(255 BYTE), 
	"alt_ID" VARCHAR2(20 BYTE), 
	"FK_Kategorie" NUMBER, 
	"FK_Verwendungszweck" NUMBER, 
	"FK_Kontotyp" NUMBER DEFAULT 1, 
	"Bemerkungen" VARCHAR2(255 BYTE), 
	"FK_MAIN_KEY" NUMBER, 
	"FK_BUCHUNGSTAG" NUMBER, 
	"FK_WERTSTELLUNG" NUMBER, 
	"BUCHUNGSTEXT" VARCHAR2(4000 BYTE), 
	"FK_KONTO" NUMBER, 
	"KONTOSTAND" NUMBER, 
	"WIEDERHOLUNG" VARCHAR2(4000 BYTE), 
	"NÄCHSTE_ZAHLUNG" DATE, 
	"FK_BUCHUNG_STEUER" NUMBER, 
	"FK_VORGANG" NUMBER, 
	"FK_LOCATION" NUMBER, 
	"EMPFÄNGER" VARCHAR2(4000 BYTE), 
	"SALDO" NUMBER, 
	"KONTONUMMER" VARCHAR2(20 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USER01" 
 LOB ("Buchungstext") STORE AS BASICFILE (
  TABLESPACE "USER01" ENABLE STORAGE IN ROW CHUNK 8192 RETENTION 
  NOCACHE LOGGING 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)) ;
--------------------------------------------------------
--  DDL for Table KTO_Kreditkarte
--------------------------------------------------------

  CREATE TABLE "COMPANY"."KTO_Kreditkarte" 
   (	"ID" NUMBER, 
	"Buchungstag" DATE, 
	"Beleg" DATE, 
	"Unternehmen" VARCHAR2(255 BYTE), 
	"Betrag" BINARY_DOUBLE, 
	"Währung" VARCHAR2(255 BYTE), 
	"Betrag Ursprung" BINARY_DOUBLE, 
	"Währung Ursprung" VARCHAR2(255 BYTE), 
	"Belastete Kreditkarte" BINARY_DOUBLE, 
	"Kategorie" VARCHAR2(255 BYTE), 
	"Wertstellungsmonat" BINARY_DOUBLE, 
	"FK_Kategorie" NUMBER, 
	"FK_Verwendungszweck" NUMBER, 
	"FK_Kontotyp" NUMBER DEFAULT 2, 
	"Dummy" VARCHAR2(5 BYTE), 
	"Referenz" VARCHAR2(20 BYTE), 
	"FK_MAIN_BELEG" NUMBER, 
	"FK_MAIN_KEY" NUMBER, 
	"FK_BUCHUNGSTAG" NUMBER, 
	"FK_BELEG" NUMBER, 
	"BEMERKUNG" VARCHAR2(4000 BYTE), 
	"FK_KONTO" NUMBER, 
	"KONTOSTAND" NUMBER, 
	"WIEDERHOLUNG" VARCHAR2(20 BYTE), 
	"NÄCHSTE_ZAHLUNG" DATE, 
	"FK_BUCHUNG_STEUER" NUMBER, 
	"FK_VORGANG" NUMBER
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USER01" ;
--------------------------------------------------------
--  DDL for Table KTO_Paypal
--------------------------------------------------------

  CREATE TABLE "COMPANY"."KTO_Paypal" 
   (	"ID" NUMBER, 
	"Datum" DATE, 
	"Uhrzeit" DATE, 
	"Zeitzone" VARCHAR2(255 BYTE), 
	"Name" VARCHAR2(255 BYTE), 
	"Typ" VARCHAR2(255 BYTE), 
	"Status" VARCHAR2(255 BYTE), 
	"Währung" VARCHAR2(255 BYTE), 
	"Brutto" BINARY_DOUBLE, 
	"Gebühr" VARCHAR2(20 BYTE), 
	"Netto" BINARY_DOUBLE, 
	"Absender_Email" VARCHAR2(255 BYTE), 
	"Empfänger_Email" VARCHAR2(255 BYTE), 
	"Transaktionscode" VARCHAR2(255 BYTE), 
	"Lieferadresse" VARCHAR2(255 BYTE), 
	"Adress-Status" VARCHAR2(255 BYTE), 
	"Artikelbezeichnung" VARCHAR2(255 BYTE), 
	"Artikelnummer" VARCHAR2(255 BYTE), 
	"Versand_Bearbeitungsgeb" VARCHAR2(255 BYTE), 
	"Versicherungsbetrag" VARCHAR2(255 BYTE), 
	"Umsatzsteuer" VARCHAR2(255 BYTE), 
	"Option 1 Name" VARCHAR2(255 BYTE), 
	"Option 1 Wert" VARCHAR2(255 BYTE), 
	"Option 2 Name" VARCHAR2(255 BYTE), 
	"Option 2 Wert" VARCHAR2(255 BYTE), 
	"Zugehöriger_Transaktionscode" VARCHAR2(255 BYTE), 
	"Rechnungsnummer" VARCHAR2(255 BYTE), 
	"Zollnummer" VARCHAR2(255 BYTE), 
	"Anzahl" VARCHAR2(20 BYTE), 
	"Empfangsnummer" VARCHAR2(255 BYTE), 
	"Guthaben" BINARY_DOUBLE, 
	"Adresszeile 1" VARCHAR2(255 BYTE), 
	"Adresszusatz" VARCHAR2(255 BYTE), 
	"Ort" VARCHAR2(255 BYTE), 
	"Bundesland" VARCHAR2(255 BYTE), 
	"PLZ" VARCHAR2(255 BYTE), 
	"Land" VARCHAR2(255 BYTE), 
	"Telefon" VARCHAR2(255 BYTE), 
	"Betreff" VARCHAR2(255 BYTE), 
	"Hinweis" VARCHAR2(255 BYTE), 
	"Ländervorwahl" VARCHAR2(255 BYTE), 
	"Auswirkung_Guthaben" VARCHAR2(255 BYTE), 
	"FK_Kategorie" NUMBER, 
	"FK_Verwendungszweck" NUMBER, 
	"FK_Kontotyp" NUMBER DEFAULT 3, 
	"FK_VORGANG" NUMBER, 
	"FK_MAIN_KEY" NUMBER, 
	"FK_ARBEITSTAG" NUMBER, 
	"FK_ZUORD_ERL" NUMBER, 
	"FK_BELEG" NUMBER, 
	"WIEDERHOLUNG" VARCHAR2(20 BYTE), 
	"NÄCHSTE_ZAHLUNG" DATE, 
	"FK_BUCHUNG_STEUER" NUMBER
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USER01" ;
--------------------------------------------------------
--  DDL for Table KTO_Tagesgeldkonto
--------------------------------------------------------

  CREATE TABLE "COMPANY"."KTO_Tagesgeldkonto" 
   (	"ID" NUMBER, 
	"Buchungstag" DATE, 
	"Wertstellung" DATE, 
	"Umsatzart" VARCHAR2(255 BYTE), 
	"Buchungstext" CLOB, 
	"Betrag" BINARY_DOUBLE, 
	"Währung" VARCHAR2(255 BYTE), 
	"Auftraggeberkonto" BINARY_DOUBLE, 
	"Bankleitzahl Auftraggeberkonto" BINARY_DOUBLE, 
	"IBAN Auftraggeberkonto" VARCHAR2(255 BYTE), 
	"Kategorie" VARCHAR2(255 BYTE), 
	"FK_Kategorie" NUMBER, 
	"FK_Verwendungszweck" NUMBER, 
	"FK_MAIN_KEY" NUMBER, 
	"FK_BUCHUNGSTAG" NUMBER, 
	"FK_WERTSTELLUNG" NUMBER, 
	"FK_KONTOTYP" NUMBER DEFAULT 4, 
	"BUCHUNGSTEXT" VARCHAR2(4000 BYTE), 
	"KONTOSTAND" NUMBER, 
	"WIEDERHOLUNG" VARCHAR2(20 BYTE), 
	"NÄCHSTE_ZAHLUNG" DATE, 
	"FK_BUCHUNG_STEUER" NUMBER
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USER01" 
 LOB ("Buchungstext") STORE AS BASICFILE (
  TABLESPACE "USER01" ENABLE STORAGE IN ROW CHUNK 8192 RETENTION 
  NOCACHE LOGGING 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)) ;
--------------------------------------------------------
--  DDL for Table PP_Download
--------------------------------------------------------

  CREATE TABLE "COMPANY"."PP_Download" 
   (	"ID" VARCHAR2(20 BYTE), 
	"FK_Paypal" VARCHAR2(20 BYTE), 
	"DL_Number" VARCHAR2(20 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USER01" ;
--------------------------------------------------------
--  DDL for Table PP_Vorgang
--------------------------------------------------------

  CREATE TABLE "COMPANY"."PP_Vorgang" 
   (	"ID" VARCHAR2(20 BYTE), 
	"Bezeichnung" VARCHAR2(255 BYTE), 
	"Geschäftspartner" VARCHAR2(255 BYTE), 
	"Betrag" BINARY_DOUBLE, 
	"Betrag_Fremdwährung" BINARY_DOUBLE, 
	"Fremdwährung" VARCHAR2(255 BYTE), 
	"Rechnungsnummer" VARCHAR2(255 BYTE), 
	"Abschlusstyp" VARCHAR2(255 BYTE), 
	"Abschlussstatus" VARCHAR2(255 BYTE), 
	"Abschlussdatum" DATE, 
	"Abschlusszeit" DATE, 
	"OK" NUMBER
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USER01" ;
--------------------------------------------------------
--  DDL for Table PP_Vorgang_Download
--------------------------------------------------------

  CREATE TABLE "COMPANY"."PP_Vorgang_Download" 
   (	"ID" VARCHAR2(20 BYTE), 
	"FK_Download" VARCHAR2(20 BYTE), 
	"FK_Vorgang" VARCHAR2(20 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USER01" ;
--------------------------------------------------------
--  DDL for Table STD_Kontotyp
--------------------------------------------------------

  CREATE TABLE "COMPANY"."STD_Kontotyp" 
   (	"ID" VARCHAR2(20 BYTE), 
	"Kontotyp" VARCHAR2(255 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USER01" ;
--------------------------------------------------------
--  DDL for Table STD_Oberkategorie
--------------------------------------------------------

  CREATE TABLE "COMPANY"."STD_Oberkategorie" 
   (	"ID" VARCHAR2(20 BYTE), 
	"Oberkategorie" VARCHAR2(255 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USER01" ;
--------------------------------------------------------
--  DDL for Table STD_Verwendungszweck
--------------------------------------------------------

  CREATE TABLE "COMPANY"."STD_Verwendungszweck" 
   (	"ID" VARCHAR2(20 BYTE), 
	"Verwendungszweck" VARCHAR2(255 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USER01" ;
--------------------------------------------------------
--  DDL for Table T_ABL_ORDNER
--------------------------------------------------------

  CREATE TABLE "COMPANY"."T_ABL_ORDNER" 
   (	"PK_ABL_ORDNER" NUMBER, 
	"JAHR" NUMBER, 
	"ORDNER_NAME" VARCHAR2(4000 BYTE), 
	"COLUMN1" VARCHAR2(4000 BYTE), 
	"COMM" VARCHAR2(4000 BYTE), 
	"CREATED_BY" VARCHAR2(20 BYTE), 
	"CREATED_AT" DATE, 
	"MODIFIED_BY" VARCHAR2(20 BYTE), 
	"MODIFIED_AT" DATE
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USER01" ;
--------------------------------------------------------
--  DDL for Table T_ABL_ORDNER_PAGE
--------------------------------------------------------

  CREATE TABLE "COMPANY"."T_ABL_ORDNER_PAGE" 
   (	"PK_ABL_ORDNER_PAGE" NUMBER, 
	"FK_ABL_ORDNER" NUMBER, 
	"PAGE_NUMBER" NUMBER, 
	"DESCR" VARCHAR2(4000 BYTE), 
	"COMM" VARCHAR2(4000 BYTE), 
	"CREATED_BY" VARCHAR2(20 BYTE), 
	"CREATED_AT" DATE, 
	"MODIFIED_BY" VARCHAR2(20 BYTE), 
	"MODIFIED_AT" DATE
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USER01" ;
--------------------------------------------------------
--  DDL for Table T_ABSCHLUSSTYP
--------------------------------------------------------

  CREATE TABLE "COMPANY"."T_ABSCHLUSSTYP" 
   (	"PK_ABSCHLUSSTYP" NUMBER, 
	"ABSCHLUSSTYP" VARCHAR2(4000 CHAR), 
	"CREATED_BY" VARCHAR2(4000 CHAR), 
	"CREATED_AT" DATE, 
	"MODIFIED_BY" VARCHAR2(4000 CHAR), 
	"MODIFIED_AT" DATE
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table T_ADRESSE
--------------------------------------------------------

  CREATE TABLE "COMPANY"."T_ADRESSE" 
   (	"PK_ADRESSE" NUMBER, 
	"STRASSE" VARCHAR2(4000 CHAR), 
	"HSNR" VARCHAR2(4000 CHAR), 
	"BESCHREIBUNG" VARCHAR2(4000 CHAR), 
	"FK_PLZ_ORT" NUMBER, 
	"POSTFACH" VARCHAR2(4000 CHAR), 
	"CREATED_BY" VARCHAR2(4000 CHAR), 
	"CREATED_AT" DATE, 
	"MODIFIED_BY" VARCHAR2(4000 CHAR), 
	"MODIFIED_AT" DATE, 
	"COMM" VARCHAR2(4000 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table T_ARBEITSTAGE
--------------------------------------------------------

  CREATE TABLE "COMPANY"."T_ARBEITSTAGE" 
   (	"PK_ARBEITSTAGE" NUMBER, 
	"DATUM" DATE, 
	"FK_ARBEITSTAG" NUMBER, 
	"FK_WOCHENENDE" NUMBER, 
	"FK_FEIERTAG" NUMBER, 
	"FEIERTAG" VARCHAR2(4000 CHAR), 
	"TAG" NUMBER, 
	"MONAT" NUMBER, 
	"JAHR" NUMBER, 
	"CREATED_BY" VARCHAR2(4000 CHAR), 
	"CREATED_AT" DATE, 
	"MODIFIED_BY" VARCHAR2(4000 CHAR), 
	"MODIFIED_AT" DATE, 
	"WOCHENTAG" VARCHAR2(4000 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table T_ARBEITSZEITEN
--------------------------------------------------------

  CREATE TABLE "COMPANY"."T_ARBEITSZEITEN" 
   (	"PK_ARBEITSZEIT" NUMBER, 
	"ARBEITSTAGE" VARCHAR2(4000 CHAR), 
	"ARBEITSZEIT" VARCHAR2(4000 CHAR), 
	"CREATED_BY" VARCHAR2(4000 CHAR), 
	"CREATED_AT" DATE, 
	"MODIFIED_BY" VARCHAR2(4000 CHAR), 
	"MODIFIED_AT" DATE
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table T_ARTIKEL
--------------------------------------------------------

  CREATE TABLE "COMPANY"."T_ARTIKEL" 
   (	"PK_ARTIKEL" NUMBER, 
	"ARTIKEL" VARCHAR2(4000 CHAR), 
	"FK_PACKUNGSTYP" NUMBER, 
	"MENGE" NUMBER, 
	"PREIS_NETTO" NUMBER, 
	"FK_STEUERSATZ" NUMBER, 
	"PREIS_BRUTTO" NUMBER, 
	"KOMMENTAR" VARCHAR2(4000 CHAR), 
	"FK_MENGENEINHEIT" NUMBER, 
	"FK_BUENDELUNG" NUMBER, 
	"FK_STD_ARTIKEL" NUMBER, 
	"FK_STD_ARTIKEL_FLAG" NUMBER, 
	"FK_HERSTELLER" NUMBER, 
	"FK_FARBE" NUMBER, 
	"EXT_ARTIKELNR" VARCHAR2(4000 CHAR), 
	"CREATED_BY" VARCHAR2(4000 CHAR), 
	"CREATED_AT" DATE, 
	"MODIFIED_BY" VARCHAR2(4000 CHAR), 
	"MODIFIED_AT" DATE, 
	"FK_M_ARTIKEL" NUMBER
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table T_ARTIKELBESTANDTEILE
--------------------------------------------------------

  CREATE TABLE "COMPANY"."T_ARTIKELBESTANDTEILE" 
   (	"PK_ARTIKELBEST" NUMBER, 
	"ARTIKELBESTANDTEIL" VARCHAR2(4000 CHAR), 
	"FK_ARTIKEL" NUMBER, 
	"MENGE" NUMBER, 
	"FK_PACKUNGSTYP" NUMBER, 
	"FK_ARTIKELBESTANDTEILTYP" NUMBER, 
	"CREATED_BY" VARCHAR2(4000 CHAR), 
	"CREATED_AT" DATE, 
	"MODIFIED_BY" VARCHAR2(4000 CHAR), 
	"MODIFIED_AT" DATE
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table T_ARTIKELBESTANDTEILTYP
--------------------------------------------------------

  CREATE TABLE "COMPANY"."T_ARTIKELBESTANDTEILTYP" 
   (	"PK_ARTIKELBESTTYP" NUMBER, 
	"ARTIKELBESTANDTEILTYP" VARCHAR2(4000 CHAR), 
	"FK_ARTIKELTYP" NUMBER, 
	"CREATED_BY" VARCHAR2(4000 CHAR), 
	"CREATED_AT" DATE, 
	"MODIFIED_BY" VARCHAR2(4000 CHAR), 
	"MODIFIED_AT" DATE
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table T_ARTIKELTYP
--------------------------------------------------------

  CREATE TABLE "COMPANY"."T_ARTIKELTYP" 
   (	"PK_ARTIKELTYP" NUMBER, 
	"ARTIKELTYP" VARCHAR2(4000 CHAR), 
	"FK_HAUPTTYP" NUMBER, 
	"CREATED_BY" VARCHAR2(4000 CHAR), 
	"CREATED_AT" DATE, 
	"MODIFIED_BY" VARCHAR2(4000 CHAR), 
	"MODIFIED_AT" DATE
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table T_AUDI_FIN_VERTRAG_HAUPT_MERK
--------------------------------------------------------

  CREATE TABLE "COMPANY"."T_AUDI_FIN_VERTRAG_HAUPT_MERK" 
   (	"HAUPT_MERKMAL1" VARCHAR2(4000 BYTE), 
	"HAUPT_MERKMAL1_WERT" VARCHAR2(4000 BYTE), 
	"HAUPT_MERKMAL2" VARCHAR2(4000 BYTE), 
	"HAUPT_MERKMAL2_WERT" VARCHAR2(4000 BYTE), 
	"HAUPT_MERKMAL3" VARCHAR2(4000 BYTE), 
	"HAUPT_MERKMAL3_WERT" VARCHAR2(4000 BYTE), 
	"PK_AUDI_FIN_VERTRAG_HAUPT_MERK" NUMBER, 
	"FK_FIN_VERTRAG" NUMBER
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USER01" ;
--------------------------------------------------------
--  DDL for Table T_AUDI_FIN_VERTRAG_POS
--------------------------------------------------------

  CREATE TABLE "COMPANY"."T_AUDI_FIN_VERTRAG_POS" 
   (	"RATE" NUMBER(4,0), 
	"FLLIGKEIT" VARCHAR2(26 BYTE), 
	"RATENHHE" NUMBER(9,0), 
	"ZINSANTEIL" NUMBER(6,0), 
	"TILGUNGSANTEIL" NUMBER(9,0), 
	"RKG_ANTEILIG" NUMBER(9,0), 
	"PK_AUDI_FIN_VERTRAG_POS" NUMBER, 
	"FK_AUDI_FIN_VERTRAG" NUMBER, 
	"FK_BUCHUNG" NUMBER
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USER01" ;
--------------------------------------------------------
--  DDL for Table T_AUFGABE
--------------------------------------------------------

  CREATE TABLE "COMPANY"."T_AUFGABE" 
   (	"PK_AUFGABE" NUMBER, 
	"FK_EINSENDEAUFGABE" NUMBER, 
	"AUFGABENNR" VARCHAR2(4000 CHAR), 
	"AUFGABE" VARCHAR2(4000 CHAR), 
	"LÖSUNG" VARCHAR2(4000 CHAR), 
	"GESAMTPUNKTE" VARCHAR2(4000 CHAR), 
	"BEWERTUNG" VARCHAR2(4000 CHAR), 
	"CREATED_BY" VARCHAR2(4000 CHAR), 
	"CREATED_AT" DATE, 
	"MODIFIED_BY" VARCHAR2(4000 CHAR), 
	"MODIFIED_AT" DATE
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table T_BANK
--------------------------------------------------------

  CREATE TABLE "COMPANY"."T_BANK" 
   (	"PK_BANK" NUMBER, 
	"BANK" VARCHAR2(4000 CHAR), 
	"FK_ORT" NUMBER, 
	"FK_HAUPTBANK" NUMBER, 
	"CREATED_BY" VARCHAR2(4000 CHAR), 
	"CREATED_AT" DATE, 
	"MODIFIED_BY" VARCHAR2(4000 CHAR), 
	"MODIFIED_AT" DATE
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table T_BANKKONTO
--------------------------------------------------------

  CREATE TABLE "COMPANY"."T_BANKKONTO" 
   (	"PK_BANKKONTO" NUMBER, 
	"FK_BANK" NUMBER, 
	"IBAN" VARCHAR2(4000 CHAR), 
	"BIC" VARCHAR2(4000 CHAR), 
	"KONTONR" VARCHAR2(4000 CHAR), 
	"BLZ" VARCHAR2(4000 CHAR), 
	"CREATED_BY" VARCHAR2(4000 CHAR), 
	"CREATED_AT" DATE, 
	"MODIFIED_BY" VARCHAR2(4000 CHAR), 
	"MODIFIED_AT" DATE, 
	"KREDITKARTENNR" VARCHAR2(4000 BYTE), 
	"BEZ" VARCHAR2(4000 BYTE), 
	"FK_KONTOTYP" NUMBER, 
	"KREDITLINIE" NUMBER, 
	"ERÖFFUNGSDATUM" DATE, 
	"SCHLUSSDATUM" DATE, 
	"ZUGANG" VARCHAR2(4000 BYTE), 
	"PIN" VARCHAR2(4000 BYTE), 
	"DIBA_KEY" NUMBER, 
	"TELEBANKING_PIN" NUMBER, 
	"BEMERKUNGEN" VARCHAR2(4000 BYTE), 
	"KARTENSPERRUNG" VARCHAR2(4000 BYTE), 
	"VALID" NUMBER, 
	"VALID_FROM" DATE, 
	"VALID_TO" DATE
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table T_BARGELD
--------------------------------------------------------

  CREATE TABLE "COMPANY"."T_BARGELD" 
   (	"PK_BARGELD" NUMBER, 
	"BETRAG" NUMBER, 
	"WÄHRUNG" VARCHAR2(20 BYTE), 
	"HERKUNFT" VARCHAR2(4000 BYTE), 
	"BEMERKUNG" VARCHAR2(4000 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USER01" ;
--------------------------------------------------------
--  DDL for Table T_BEITRAG
--------------------------------------------------------

  CREATE TABLE "COMPANY"."T_BEITRAG" 
   (	"PK_BEITRAG" NUMBER, 
	"FK_BEITRAGSART" NUMBER, 
	"MONAT" NUMBER, 
	"JAHR" NUMBER, 
	"COMM" VARCHAR2(4000 BYTE), 
	"DAT_FAELLIGKEIT" DATE
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USER01" ;
--------------------------------------------------------
--  DDL for Table T_BELEG
--------------------------------------------------------

  CREATE TABLE "COMPANY"."T_BELEG" 
   (	"PK_BELEG" NUMBER, 
	"FK_STEUERSATZ" NUMBER, 
	"FK_BELEGART" NUMBER, 
	"FK_VERWENDUNGSZWECK" NUMBER, 
	"FK_ARBEITSTAG" NUMBER, 
	"FK_PROJEKT" NUMBER, 
	"FK_LEHRGANG" NUMBER, 
	"FK_EINKAUF" NUMBER, 
	"BELEG" VARCHAR2(4000 CHAR), 
	"BETRAG_BRUTTO" NUMBER, 
	"DATUM" DATE, 
	"VON" DATE, 
	"BIS" DATE, 
	"AZ_O_PAUSE" NUMBER, 
	"AZ_M_PAUSE" NUMBER, 
	"ANWESENHEITSZEIT" NUMBER, 
	"PARKZEIT" NUMBER, 
	"AZ_MANUELL_GEPFLEGT" NUMBER, 
	"KOMMENTAR" VARCHAR2(4000 CHAR), 
	"BETRAG_NETTO" NUMBER, 
	"FK_IMP_BEL_NR" NUMBER, 
	"FK_IMP_NO" NUMBER, 
	"EXT_RENR" VARCHAR2(4000 CHAR), 
	"EXT_AUFTRAGSNR" VARCHAR2(4000 CHAR), 
	"EXT_LIEFERSCHEINNR" VARCHAR2(4000 CHAR), 
	"EXT_LEISTUNGSDATUM" VARCHAR2(4000 CHAR), 
	"EXT_RECHNUNGSDATUM" VARCHAR2(4000 CHAR), 
	"EXT_AUFTRAGSDATUM" VARCHAR2(4000 CHAR), 
	"FK_OFFEN" NUMBER, 
	"FK_VORSTEUERRELEVANT" NUMBER, 
	"FK_VORSTEUERPFLEGE" NUMBER, 
	"FK_RECHNUNGSERSTELLUNG" NUMBER, 
	"FK_RECHNUNG_ERSTELLT" NUMBER, 
	"FK_BANKBELEG" NUMBER, 
	"CREATED_BY" VARCHAR2(4000 CHAR), 
	"CREATED_AT" DATE, 
	"MODIFIED_BY" VARCHAR2(4000 CHAR), 
	"MODIFIED_AT" DATE, 
	"MWST" NUMBER, 
	"FK_LIEFERART" NUMBER, 
	"FK_EINKOMMENSTEUERRELEVANT" NUMBER, 
	"FK_UNTERNEHMENSSTEUERRELEVANT" NUMBER, 
	"FK_BESTELLNR" VARCHAR2(4000 BYTE), 
	"FK_BESTELLTYP" NUMBER, 
	"FK_ABRECHNUNGSZEITRAUM" NUMBER, 
	"FK_FREMDWAEHRUNG" NUMBER DEFAULT 1, 
	"FRMDW_BETRAG_NETTO" NUMBER, 
	"FRMDW_STSATZ" NUMBER, 
	"FRMDW_MWST" NUMBER, 
	"FRMDW_BETRAG_BRUTTO" NUMBER, 
	"BUCHUNGSTAG" DATE, 
	"FK_KONTO" NUMBER, 
	"KUMULIERTER_BETRAG_NEG" NUMBER, 
	"KUMULIERTER_BETRAG" NUMBER, 
	"ENDBETRAG" NUMBER, 
	"STARTBETRAG" NUMBER, 
	"BETRAG_NEG" NUMBER, 
	"FK_BELEGWAEHRUNG" NUMBER, 
	"FK_UMSATZART" NUMBER, 
	"EINZELBETRAG_NEG" NUMBER, 
	"FK_MAIN_BELEG" NUMBER, 
	"FK_BEL_FEHLEND" NUMBER DEFAULT 0
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;

   COMMENT ON COLUMN "COMPANY"."T_BELEG"."FK_OFFEN" IS 'Es sind noch Vorgänge bzgl. des Beleges erforderlich, z.B.: Abholung von Wäsche aus Textilreinigung';
--------------------------------------------------------
--  DDL for Table T_BELEGART
--------------------------------------------------------

  CREATE TABLE "COMPANY"."T_BELEGART" 
   (	"PK_BELEGART" NUMBER, 
	"BELEGART" VARCHAR2(4000 CHAR), 
	"CREATED_BY" VARCHAR2(4000 CHAR), 
	"CREATED_AT" DATE, 
	"MODIFIED_BY" VARCHAR2(4000 CHAR), 
	"MODIFIED_AT" DATE
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table T_BELEGART_GRP
--------------------------------------------------------

  CREATE TABLE "COMPANY"."T_BELEGART_GRP" 
   (	"PK_BELEGART_GRP" NUMBER, 
	"BELEGART_GRP" VARCHAR2(4000 CHAR), 
	"CREATED_BY" VARCHAR2(4000 CHAR), 
	"CREATED_AT" DATE, 
	"MODIFIED_BY" VARCHAR2(4000 CHAR), 
	"MODIFIED_AT" DATE, 
	"FK_BELEGART_M_GRP" NUMBER
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USER01" ;
--------------------------------------------------------
--  DDL for Table T_BELEGPOSITION
--------------------------------------------------------

  CREATE TABLE "COMPANY"."T_BELEGPOSITION" 
   (	"PK_BELEGPOSITION" NUMBER, 
	"FK_BELEG" NUMBER, 
	"POSITION" VARCHAR2(4000 CHAR), 
	"ANZAHL" NUMBER, 
	"PREIS_BRUTTO" NUMBER, 
	"LITER" NUMBER, 
	"CREATED_BY" VARCHAR2(4000 CHAR), 
	"CREATED_AT" DATE, 
	"MODIFIED_BY" VARCHAR2(4000 CHAR), 
	"MODIFIED_AT" DATE, 
	"FK_MWST_SATZ" NUMBER, 
	"MWST" NUMBER, 
	"PREIS_NETTO" NUMBER, 
	"FK_ARTIKELBESTANDTEILTYP" NUMBER, 
	"FK_ARTIKELTYP" NUMBER, 
	"FRMDW_BETRAG_NETTO" NUMBER, 
	"FRMDW_STSTZ" NUMBER, 
	"FRMDW_MWST" NUMBER, 
	"FRMDW_BETRAG_BRUTTO" NUMBER, 
	"FK_FREMDWAEHRUNG" NUMBER, 
	"PREIS_EINZEL" NUMBER, 
	"RELEVANT_MWST" NUMBER
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table T_BELEGSEL
--------------------------------------------------------

  CREATE TABLE "COMPANY"."T_BELEGSEL" 
   (	"PK_BELEGSEL" NUMBER, 
	"STRING" VARCHAR2(4000 BYTE), 
	"FK_BELEGART" NUMBER, 
	"VALID" NUMBER
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USER01" ;
--------------------------------------------------------
--  DDL for Table T_BESTELLUNG
--------------------------------------------------------

  CREATE TABLE "COMPANY"."T_BESTELLUNG" 
   (	"PK_BESTELLUNG" NUMBER, 
	"FK_GESCHÄFTSPARTNER" NUMBER, 
	"BESTELLTEXT" VARCHAR2(4000 CHAR), 
	"MENGE" NUMBER, 
	"FK_PRODUKTE" NUMBER, 
	"CREATED_BY" VARCHAR2(4000 CHAR), 
	"CREATED_AT" DATE, 
	"MODIFIED_BY" VARCHAR2(4000 CHAR), 
	"MODIFIED_AT" DATE
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table T_BILD_BA
--------------------------------------------------------

  CREATE TABLE "COMPANY"."T_BILD_BA" 
   (	"BILD" BLOB, 
	"PK" NUMBER
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USER01" 
 LOB ("BILD") STORE AS BASICFILE (
  TABLESPACE "USER01" ENABLE STORAGE IN ROW CHUNK 8192 RETENTION 
  NOCACHE LOGGING 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)) ;
--------------------------------------------------------
--  DDL for Table T_BUCH
--------------------------------------------------------

  CREATE TABLE "COMPANY"."T_BUCH" 
   (	"BK_BUCH" NUMBER, 
	"ERSCHEINUNGSJAHR" NUMBER, 
	"TITEL" VARCHAR2(4000 CHAR), 
	"ISBN" VARCHAR2(4000 CHAR), 
	"AUFLAGE" VARCHAR2(4000 CHAR), 
	"CREATED_BY" VARCHAR2(4000 CHAR), 
	"CREATED_AT" DATE, 
	"MODIFIED_BY" VARCHAR2(4000 CHAR), 
	"MODIFIED_AT" DATE, 
	"FK_LEHRGANG" NUMBER
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table T_BUCH_ABGL
--------------------------------------------------------

  CREATE TABLE "COMPANY"."T_BUCH_ABGL" 
   (	"BUCHUNGSTEXT_A" VARCHAR2(4000 BYTE), 
	"PX_A" CHAR(86 BYTE), 
	"FK_MAIN_KEY_A" NUMBER, 
	"CS_RNR_VGL_A" NUMBER, 
	"CS_RNR_TEXT_A" NUMBER, 
	"TEIL_STR_A" VARCHAR2(4000 BYTE), 
	"BUCHUNGSTEXT_B" VARCHAR2(4000 BYTE), 
	"PX_B" CHAR(86 BYTE), 
	"FK_MAIN_KEY_B" NUMBER, 
	"CS_RNR_VGL_B" NUMBER, 
	"CS_RNR_TEXT_B" NUMBER, 
	"RNR" NUMBER
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USER01" ;
--------------------------------------------------------
--  DDL for Table T_BUCH_ABGL1
--------------------------------------------------------

  CREATE TABLE "COMPANY"."T_BUCH_ABGL1" 
   (	"TEIL_STR" VARCHAR2(4000 BYTE), 
	"FK_MAIN_KEY" NUMBER, 
	"BUCHUNGSTEXT" VARCHAR2(4000 BYTE), 
	"TXT" CHAR(86 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USER01" ;
--------------------------------------------------------
--  DDL for Table T_BUCH_ABGL2
--------------------------------------------------------

  CREATE TABLE "COMPANY"."T_BUCH_ABGL2" 
   (	"TEIL_STR" VARCHAR2(4000 BYTE), 
	"FK_MAIN_KEY" NUMBER, 
	"BUCHUNGSTEXT" VARCHAR2(4000 BYTE), 
	"TXT" CHAR(86 BYTE), 
	"BUCHST_TEXT" VARCHAR2(4 BYTE), 
	"BUCHST_VGL" VARCHAR2(4 BYTE), 
	"BU_T" VARCHAR2(4 BYTE), 
	"BU_V" VARCHAR2(4 BYTE), 
	"V" NUMBER, 
	"V1" NUMBER, 
	"T" NUMBER, 
	"T1" NUMBER
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USER01" ;
--------------------------------------------------------
--  DDL for Table T_BUENDELUNG
--------------------------------------------------------

  CREATE TABLE "COMPANY"."T_BUENDELUNG" 
   (	"PK_BUENDELUNG" NUMBER, 
	"BUENDELUNG" VARCHAR2(4000 CHAR), 
	"CREATED_BY" VARCHAR2(4000 CHAR), 
	"CREATED_AT" DATE, 
	"MODIFIED_BY" VARCHAR2(4000 CHAR), 
	"MODIFIED_AT" DATE
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table T_COMP
--------------------------------------------------------

  CREATE TABLE "COMPANY"."T_COMP" 
   (	"PK_COMP" NUMBER, 
	"FK_COMP_TYPE" NUMBER, 
	"FK_MANUFACT" NUMBER, 
	"FK_SUPPLIER" NUMBER, 
	"FK_STEUERSATZ" NUMBER, 
	"SNO" VARCHAR2(4000 CHAR), 
	"MAC_ADDR" VARCHAR2(4000 CHAR), 
	"BESCHAFFUNGSDATUM" DATE, 
	"IMEI_NR" VARCHAR2(4000 CHAR), 
	"PREIS_NETTO" NUMBER, 
	"PREIS_BRUTTO" NUMBER, 
	"ABSCHREIBUNGSDAUER" NUMBER, 
	"RESTBUCHWERT" NUMBER, 
	"FREMDARTIKELNR" VARCHAR2(4000 CHAR), 
	"MWST" NUMBER, 
	"CREATED_BY" VARCHAR2(4000 CHAR), 
	"CREATED_AT" DATE, 
	"MODIFIED_BY" VARCHAR2(4000 CHAR), 
	"MODIFIED_AT" DATE, 
	"KOMPONENTENBEZEICHNUNG" VARCHAR2(4000 BYTE), 
	"COMM" VARCHAR2(4000 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table T_DAT
--------------------------------------------------------

  CREATE TABLE "COMPANY"."T_DAT" 
   (	"DATUM" DATE, 
	"VON" VARCHAR2(8 BYTE), 
	"BIS" VARCHAR2(8 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table T_EINSENDEAUFGABE
--------------------------------------------------------

  CREATE TABLE "COMPANY"."T_EINSENDEAUFGABE" 
   (	"PK_EINSENDEAUFGABE" NUMBER, 
	"EINSENDEAUFGABE" VARCHAR2(4000 CHAR), 
	"FK_LEHRGANG" NUMBER, 
	"FK_BUCH" NUMBER, 
	"EINGESENDET_AM" DATE, 
	"NOTE" VARCHAR2(4000 CHAR), 
	"BEWERTET_AM" DATE, 
	"FK_TUTOR" NUMBER, 
	"FK_STATUS" NUMBER, 
	"FK_LEHRGANGSLEITER" NUMBER, 
	"CREATED_BY" VARCHAR2(4000 CHAR), 
	"CREATED_AT" DATE, 
	"MODIFIED_BY" VARCHAR2(4000 CHAR), 
	"MODIFIED_AT" DATE, 
	"PUNKTE_GES" NUMBER, 
	"PUNKTE_ERR" NUMBER
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table T_EINSENDEAUFGABENSTATUS
--------------------------------------------------------

  CREATE TABLE "COMPANY"."T_EINSENDEAUFGABENSTATUS" 
   (	"PK_EINSENDEAUFG_STAT" NUMBER, 
	"STATUS" VARCHAR2(4000 CHAR), 
	"CREATED_BY" VARCHAR2(4000 CHAR), 
	"CREATED_AT" DATE, 
	"MODIFIED_BY" VARCHAR2(4000 CHAR), 
	"MODIFIED_AT" DATE
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table T_ERF_BEL_KOMP
--------------------------------------------------------

  CREATE TABLE "COMPANY"."T_ERF_BEL_KOMP" 
   (	"NR" NUMBER, 
	"MIETVERTRAGSNUMMER" VARCHAR2(20 BYTE), 
	"RECHNUNGSNUMMER" VARCHAR2(20 BYTE), 
	"EFFEKTIVE_MIETDAUER" VARCHAR2(20 BYTE), 
	"VON_DATUM" DATE, 
	"BIS_DATUM" DATE
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USER01" ;
--------------------------------------------------------
--  DDL for Table T_ERF_BEL_KOMP_DET
--------------------------------------------------------

  CREATE TABLE "COMPANY"."T_ERF_BEL_KOMP_DET" 
   (	"NR" VARCHAR2(4000 BYTE), 
	"FK_ERF_BEL_KOMP" VARCHAR2(4000 BYTE), 
	"POS" VARCHAR2(4000 BYTE), 
	"EINHEITEN" VARCHAR2(4000 BYTE), 
	"NETTOBETRAG" VARCHAR2(4000 BYTE), 
	"MWST_SATZ" VARCHAR2(4000 BYTE), 
	"MWST" VARCHAR2(4000 BYTE), 
	"BRUTTOBETRAG" VARCHAR2(4000 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USER01" ;
--------------------------------------------------------
--  DDL for Table T_ERF_BEL_KRANKENKASSE
--------------------------------------------------------

  CREATE TABLE "COMPANY"."T_ERF_BEL_KRANKENKASSE" 
   (	"NR" VARCHAR2(20 BYTE), 
	"DATUM" VARCHAR2(20 BYTE), 
	"TYP" VARCHAR2(20 BYTE), 
	"DATUM1" VARCHAR2(20 BYTE), 
	"IBAN" VARCHAR2(4000 BYTE), 
	"VERWENDUNGSZWECK" VARCHAR2(4000 BYTE), 
	"OFFENER_BETRAG" VARCHAR2(20 BYTE), 
	"BEITRAG" VARCHAR2(20 BYTE), 
	"SÄUMNISZUSCHLAG" VARCHAR2(20 BYTE), 
	"MAHNKOSTEN" VARCHAR2(20 BYTE), 
	"STATUS" VARCHAR2(20 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USER01" ;
--------------------------------------------------------
--  DDL for Table TEST
--------------------------------------------------------

  CREATE TABLE "COMPANY"."TEST" 
   (	"COLUMN1" VARCHAR2(20 BYTE), 
	"COLUMN2" VARCHAR2(20 BYTE), 
	"COLUMN3" VARCHAR2(20 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USER01" ;
--------------------------------------------------------
--  DDL for Table T_FARBE
--------------------------------------------------------

  CREATE TABLE "COMPANY"."T_FARBE" 
   (	"PK_FARBE" NUMBER, 
	"FARBE" VARCHAR2(4000 CHAR), 
	"FK_HAUPTFARBE" NUMBER, 
	"CREATED_BY" VARCHAR2(4000 CHAR), 
	"CREATED_AT" DATE, 
	"MODIFIED_BY" VARCHAR2(4000 CHAR), 
	"MODIFIED_AT" DATE
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table T_FRAGE
--------------------------------------------------------

  CREATE TABLE "COMPANY"."T_FRAGE" 
   (	"PK_FRAGE" NUMBER, 
	"FK_EINSENDEAUFGABE" NUMBER, 
	"FRAGENNR" NUMBER, 
	"FRAGE" VARCHAR2(4000 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USER01" ;
--------------------------------------------------------
--  DDL for Table T_FREMDWAEHRUNG
--------------------------------------------------------

  CREATE TABLE "COMPANY"."T_FREMDWAEHRUNG" 
   (	"PK_FREMDWAEHRUNG" NUMBER, 
	"FREMDWAEHRUNG" VARCHAR2(4000 CHAR), 
	"CREATED_BY" VARCHAR2(4000 CHAR), 
	"CREATED_AT" DATE, 
	"MODIFIED_BY" VARCHAR2(4000 CHAR), 
	"MODIFIED_AT" DATE, 
	"FK_LAND" NUMBER
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USER01" ;
--------------------------------------------------------
--  DDL for Table T_FRMDW_UMTK
--------------------------------------------------------

  CREATE TABLE "COMPANY"."T_FRMDW_UMTK" 
   (	"PK_T_FRMDW_UMTK" NUMBER, 
	"FK_FREMDWAEHRUNG" NUMBER, 
	"FK_UMTAUSCHKURS" NUMBER, 
	"CREATED_BY" VARCHAR2(4000 CHAR), 
	"CREATED_AT" DATE, 
	"MODIFIED_BY" VARCHAR2(4000 CHAR), 
	"MODIFIED_AT" DATE
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USER01" ;
--------------------------------------------------------
--  DDL for Table T_GESCHAEFTSPARTNER
--------------------------------------------------------

  CREATE TABLE "COMPANY"."T_GESCHAEFTSPARTNER" 
   (	"PK_GESCHAEFTSPARTNER" NUMBER, 
	"GESCHAEFTSPARTNER" VARCHAR2(4000 CHAR), 
	"FK_GESCHAEFTSPARTNERTYP" NUMBER, 
	"UNTERNEHMENSBEZEICHNUNG" VARCHAR2(4000 CHAR), 
	"PERSONALNUMMER" VARCHAR2(4000 CHAR), 
	"CREATED_BY" VARCHAR2(4000 CHAR), 
	"CREATED_AT" DATE, 
	"MODIFIED_BY" VARCHAR2(4000 CHAR), 
	"MODIFIED_AT" DATE
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table T_GESCHAEFTSPARTNERTYP
--------------------------------------------------------

  CREATE TABLE "COMPANY"."T_GESCHAEFTSPARTNERTYP" 
   (	"PK_GESCHAEFTSPARTNERTYP" NUMBER, 
	"GESCHAEFTSPARTNERTYP" VARCHAR2(4000 CHAR), 
	"CREATED_BY" VARCHAR2(4000 CHAR), 
	"CREATED_AT" DATE, 
	"MODIFIED_BY" VARCHAR2(4000 CHAR), 
	"MODIFIED_AT" DATE
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table T_HERSTELLER
--------------------------------------------------------

  CREATE TABLE "COMPANY"."T_HERSTELLER" 
   (	"PK_HERSTELLER" NUMBER, 
	"HERSTELLER" VARCHAR2(4000 CHAR), 
	"CREATED_BY" VARCHAR2(4000 CHAR), 
	"CREATED_AT" DATE, 
	"MODIFIED_BY" VARCHAR2(4000 CHAR), 
	"MODIFIED_AT" DATE
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table T_IMP_BANK2
--------------------------------------------------------

  CREATE TABLE "COMPANY"."T_IMP_BANK2" 
   (	"BUCHUNGSTAG" VARCHAR2(26 BYTE), 
	"BELEG" VARCHAR2(10 BYTE), 
	"UNTERNEHMEN" VARCHAR2(40 BYTE), 
	"BETRAG" NUMBER(6,2), 
	"WAEHRUNG" VARCHAR2(26 BYTE), 
	"BETRAG_URSPRUNG" NUMBER(9,2), 
	"WAEHRUNGURSPRUNG" VARCHAR2(26 BYTE), 
	"BELASTETE_KREDITKARTE" NUMBER(18,0), 
	"RNR" NUMBER
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USER01" ;
--------------------------------------------------------
--  DDL for Table T_IMP_BANK3
--------------------------------------------------------

  CREATE TABLE "COMPANY"."T_IMP_BANK3" 
   (	"NR" VARCHAR2(26 BYTE), 
	"BUCHUNGSTAG" VARCHAR2(10 BYTE), 
	"WERTSTELLUNG" VARCHAR2(10 BYTE), 
	"UMSATZART" VARCHAR2(21 BYTE), 
	"BUCHUNGSTEXT" VARCHAR2(4000 BYTE), 
	"BETRAG" VARCHAR2(8 BYTE), 
	"WÄHRUNG" VARCHAR2(3 BYTE), 
	"AUFTRAGGEBERKONTO" VARCHAR2(10 BYTE), 
	"BANKLEITZAHL_AUFTRAGGEBERKONTO" VARCHAR2(11 BYTE), 
	"IBAN_AUFTRAGGEBERKONTO" VARCHAR2(22 BYTE), 
	"SPALTE11" VARCHAR2(1 BYTE), 
	"ENDBETRAG" VARCHAR2(4000 BYTE), 
	"EINZELBETRAG_NEGIERT" VARCHAR2(8 BYTE), 
	"KUMULIERTER_BETRAG_NEGATIV" VARCHAR2(4000 BYTE), 
	"STARTBETRAG" VARCHAR2(4000 BYTE), 
	"KUMULIERTER_BETRAG" VARCHAR2(4000 BYTE), 
	"RNR" NUMBER
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USER01" ;
--------------------------------------------------------
--  DDL for Table T_IMP_BANK4
--------------------------------------------------------

  CREATE TABLE "COMPANY"."T_IMP_BANK4" 
   (	"BUCHUNGSTAG" VARCHAR2(26 BYTE), 
	"BELEG" VARCHAR2(10 BYTE), 
	"UNTERNEHMEN" VARCHAR2(40 BYTE), 
	"BETRAG" NUMBER(6,2), 
	"WAEHRUNG" VARCHAR2(26 BYTE), 
	"BETRAG_URSPRUNG" NUMBER(9,2), 
	"WAEHRUNGURSPRUNG" VARCHAR2(26 BYTE), 
	"BELASTETE_KREDITKARTE" NUMBER(18,0), 
	"RNR" NUMBER
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USER01" ;
--------------------------------------------------------
--  DDL for Table T_IMP_BANK5
--------------------------------------------------------

  CREATE TABLE "COMPANY"."T_IMP_BANK5" 
   (	"NR" VARCHAR2(26 BYTE), 
	"BUCHUNGSTAG" VARCHAR2(10 BYTE), 
	"WERTSTELLUNG" VARCHAR2(10 BYTE), 
	"UMSATZART" VARCHAR2(21 BYTE), 
	"BUCHUNGSTEXT" VARCHAR2(4000 BYTE), 
	"BETRAG" VARCHAR2(8 BYTE), 
	"WÄHRUNG" VARCHAR2(3 BYTE), 
	"AUFTRAGGEBERKONTO" VARCHAR2(10 BYTE), 
	"BANKLEITZAHL_AUFTRAGGEBERKONTO" VARCHAR2(11 BYTE), 
	"IBAN_AUFTRAGGEBERKONTO" VARCHAR2(22 BYTE), 
	"SPALTE11" VARCHAR2(1 BYTE), 
	"ENDBETRAG" VARCHAR2(4000 BYTE), 
	"EINZELBETRAG_NEGIERT" VARCHAR2(8 BYTE), 
	"KUMULIERTER_BETRAG_NEGATIV" VARCHAR2(4000 BYTE), 
	"STARTBETRAG" VARCHAR2(4000 BYTE), 
	"KUMULIERTER_BETRAG" VARCHAR2(4000 BYTE), 
	"RNR" NUMBER
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USER01" ;
--------------------------------------------------------
--  DDL for Table T_IMP_BANK6
--------------------------------------------------------

  CREATE TABLE "COMPANY"."T_IMP_BANK6" 
   (	"BUCHUNGSTAG" VARCHAR2(26 BYTE), 
	"WERTSTELLUNG" VARCHAR2(26 BYTE), 
	"UMSATZART" VARCHAR2(26 BYTE), 
	"BUCHUNGSTEXT" VARCHAR2(1024 BYTE), 
	"BETRAG" NUMBER(9,2), 
	"WAEHRUNG" VARCHAR2(26 BYTE), 
	"AUFTRAGGEBERKONTO" NUMBER(11,0), 
	"BANKLEITZAHL" NUMBER(10,0), 
	"IBAN" VARCHAR2(26 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USER01" ;
--------------------------------------------------------
--  DDL for Table T_IMP_BANK7
--------------------------------------------------------

  CREATE TABLE "COMPANY"."T_IMP_BANK7" 
   (	"BUCHUNGSTAG" VARCHAR2(26 BYTE), 
	"BELEG" VARCHAR2(26 BYTE), 
	"UNTERNEHMEN" VARCHAR2(128 BYTE), 
	"BETRAG" NUMBER(8,2), 
	"WAEHRUNG" VARCHAR2(26 BYTE), 
	"BETRAG_UR" NUMBER(8,2), 
	"WAEHRUNG_UR" VARCHAR2(26 BYTE), 
	"KREDITKARTE" NUMBER(18,0)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USER01" ;
--------------------------------------------------------
--  DDL for Table T_IMP_BEL
--------------------------------------------------------

  CREATE TABLE "COMPANY"."T_IMP_BEL" 
   (	"ID" NUMBER(20,0), 
	"FK_STEUERSATZ" NUMBER, 
	"FK_BELEGART" NUMBER, 
	"FK_VERWENDUNGSZWECK" NUMBER, 
	"FK_ARBEITSTAG" NUMBER, 
	"FK_PROJEKT" NUMBER, 
	"FK_LEHRGANG" NUMBER, 
	"FK_EINKAUF" NUMBER, 
	"BELEG" VARCHAR2(4000 BYTE), 
	"BETRAG_BRUTTO" VARCHAR2(4000 BYTE), 
	"DATUM" VARCHAR2(10 BYTE), 
	"VON" VARCHAR2(30 BYTE), 
	"BIS" VARCHAR2(30 BYTE), 
	"AZ_O_PAUSE" VARCHAR2(19 BYTE), 
	"AZ_M_PAUSE" VARCHAR2(18 BYTE), 
	"ANWESENHEITSZEIT" VARCHAR2(18 BYTE), 
	"PARKZEIT" VARCHAR2(18 BYTE), 
	"AZ_MANUELL_GEPFLEGT" VARCHAR2(1 BYTE), 
	"KOMMENTAR" VARCHAR2(4000 BYTE), 
	"BETRAG_NETTO" NUMBER, 
	"MWST" NUMBER, 
	"FK_IMP_BEL_NR" NUMBER, 
	"FK_IMP_NO" NUMBER, 
	"EXT_RENR" VARCHAR2(4000 BYTE), 
	"EXT_AUFTRAGSNR" VARCHAR2(4000 BYTE), 
	"EXT_LIEFERSCHEINNR" VARCHAR2(4000 BYTE), 
	"EXT_LEISTUNGSDATUM" VARCHAR2(10 BYTE), 
	"EXT_RECHNUNGSDATUM" VARCHAR2(10 BYTE), 
	"EXT_AUFTRAGSDATUM" VARCHAR2(10 BYTE), 
	"CREATED_BY" VARCHAR2(4000 CHAR), 
	"CREATED_AT" DATE, 
	"MODIFIED_BY" VARCHAR2(4000 CHAR), 
	"MODIFIED_AT" DATE
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table T_IMP_KRE_062017
--------------------------------------------------------

  CREATE TABLE "COMPANY"."T_IMP_KRE_062017" 
   (	"NR" NUMBER(38,0), 
	"WERTSTELLUNGSDATUM" DATE, 
	"BELEGDATUM" DATE, 
	"BESCHREIBUNG" VARCHAR2(4000 BYTE), 
	"BETRAG" NUMBER(14,3), 
	"DETAIL" VARCHAR2(4000 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table T_IMP_KTO_062017
--------------------------------------------------------

  CREATE TABLE "COMPANY"."T_IMP_KTO_062017" 
   (	"DATUM" DATE, 
	"BELEG" VARCHAR2(4000 BYTE), 
	"KOMMENTAR1" VARCHAR2(4000 BYTE), 
	"KOMMENTAR2" VARCHAR2(4000 BYTE), 
	"KOMMENTAR3" VARCHAR2(4000 BYTE), 
	"KOMMENTAR4" VARCHAR2(4000 BYTE), 
	"BRUTTO_BETRAG" NUMBER(38,3), 
	"KOMMENTAR6" VARCHAR2(4000 BYTE), 
	"KOMMENTAR7" VARCHAR2(4000 BYTE), 
	"KOMMENTAR8" VARCHAR2(4000 BYTE), 
	"KOMMENTAR9" VARCHAR2(4000 BYTE), 
	"KOMMENTAR10" VARCHAR2(4000 BYTE), 
	"KOMMENTAR11" VARCHAR2(4000 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table T_INV_COMP
--------------------------------------------------------

  CREATE TABLE "COMPANY"."T_INV_COMP" 
   (	"PK_INV_COMP" NUMBER, 
	"FK_INV" NUMBER, 
	"FK_COMP" NUMBER, 
	"CREATED_BY" VARCHAR2(4000 CHAR), 
	"CREATED_AT" DATE, 
	"MODIFIED_BY" VARCHAR2(4000 CHAR), 
	"MODIFIED_AT" DATE
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table T_INVENTARE
--------------------------------------------------------

  CREATE TABLE "COMPANY"."T_INVENTARE" 
   (	"PK_INVENTAR" NUMBER, 
	"INVENTAR" VARCHAR2(4000 CHAR), 
	"ANSCHAFFUNGSDATUM" DATE, 
	"ANSCHAFFUNGSJAHR" NUMBER, 
	"ABSCHREIBUNGSDAUER" NUMBER, 
	"RESTBUCHWERT_2018" NUMBER, 
	"CREATED_BY" VARCHAR2(4000 CHAR), 
	"CREATED_AT" DATE, 
	"MODIFIED_BY" VARCHAR2(4000 CHAR), 
	"MODIFIED_AT" DATE, 
	"PREIS_NETTO" NUMBER, 
	"MWST" NUMBER, 
	"FK_STEUERSATZ" NUMBER, 
	"PREIS_BRUTTO" NUMBER, 
	"COMM" VARCHAR2(4000 BYTE), 
	"LIZENZNUMMER" VARCHAR2(4000 BYTE), 
	"ANFORDERUNGSCODE" VARCHAR2(4000 BYTE), 
	"FK_INVENTARTYP" NUMBER, 
	"KFZ_KENNZEICHEN" VARCHAR2(4000 BYTE), 
	"FAHRGESTELLNR" VARCHAR2(4000 BYTE), 
	"BEMERKUNGEN" VARCHAR2(4000 BYTE), 
	"BILD" BLOB, 
	"ABGANGSJAHR" NUMBER, 
	"ABGANGSDATUM" DATE, 
	"ABGANGSWERT" NUMBER, 
	"FK_VERWENDUNGSZWECK" NUMBER, 
	"GWG" NUMBER, 
	"RESTBUCHWERT_2017" NUMBER, 
	"ABGANGSGRUND" VARCHAR2(4000 BYTE), 
	"MAC_ADRESSE" VARCHAR2(4000 BYTE), 
	"SERIENNUMMER" VARCHAR2(4000 BYTE), 
	"GERÄTENAME" VARCHAR2(4000 BYTE), 
	"OK" VARCHAR2(20 BYTE), 
	"OK_BEMERKUNGEN" VARCHAR2(4000 BYTE), 
	"RESTBUCHWERT_2019" NUMBER
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" 
 LOB ("BILD") STORE AS BASICFILE (
  TABLESPACE "USERS" ENABLE STORAGE IN ROW CHUNK 8192 RETENTION 
  NOCACHE LOGGING 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)) ;
--------------------------------------------------------
--  DDL for Table T_INVENTARTYP
--------------------------------------------------------

  CREATE TABLE "COMPANY"."T_INVENTARTYP" 
   (	"PK_INVENTARTYP" NUMBER, 
	"INVENTARTYP" VARCHAR2(4000 CHAR), 
	"CREATED_BY" VARCHAR2(4000 CHAR), 
	"CREATED_AT" DATE, 
	"MODIFIED_BY" VARCHAR2(4000 CHAR), 
	"MODIFIED_AT" DATE, 
	"H_INV_TYP" NUMBER, 
	"STD_ABSCHREIBUNGSDAUER" NUMBER, 
	"MIN_BETRAG_ABSCHR" NUMBER, 
	"MAX_BETRAG_ABSCHR" NUMBER
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;

   COMMENT ON COLUMN "COMPANY"."T_INVENTARTYP"."STD_ABSCHREIBUNGSDAUER" IS 'in Jahren';
--------------------------------------------------------
--  DDL for Table T_KONTAKT
--------------------------------------------------------

  CREATE TABLE "COMPANY"."T_KONTAKT" 
   (	"PK_KONTAKT" NUMBER, 
	"EMAIL" VARCHAR2(4000 CHAR), 
	"EMAIL_1" VARCHAR2(4000 CHAR), 
	"FESTNETZNUMMER" VARCHAR2(4000 CHAR), 
	"MOBILNUMMER" VARCHAR2(4000 CHAR), 
	"WEBSEITE" VARCHAR2(4000 CHAR), 
	"FAX" VARCHAR2(4000 CHAR), 
	"BESCHREIBUNG" VARCHAR2(4000 CHAR), 
	"HR_EINTRAG" VARCHAR2(4000 CHAR), 
	"WEEE_REG_NR" VARCHAR2(4000 CHAR), 
	"STEUERNUMMER" VARCHAR2(4000 CHAR), 
	"UST_IDNR" VARCHAR2(4000 CHAR), 
	"STEUERNR_ALT" VARCHAR2(4000 CHAR), 
	"IDENTIFIKATIONSNUMMER" VARCHAR2(4000 CHAR), 
	"GÜLTIG_AB_UST_ID" DATE, 
	"KZ" VARCHAR2(4000 CHAR), 
	"GLÄUBIGER_ID" VARCHAR2(4000 CHAR), 
	"KOMMENTAR" VARCHAR2(4000 CHAR), 
	"CREATED_BY" VARCHAR2(4000 CHAR), 
	"CREATED_AT" DATE, 
	"MODIFIED_BY" VARCHAR2(4000 CHAR), 
	"MODIFIED_AT" DATE
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table T_KONTAKTTYP
--------------------------------------------------------

  CREATE TABLE "COMPANY"."T_KONTAKTTYP" 
   (	"PK_KONTAKTTYP" NUMBER, 
	"KONTAKTTYP" VARCHAR2(4000 CHAR), 
	"CREATED_BY" VARCHAR2(4000 CHAR), 
	"CREATED_AT" DATE, 
	"MODIFIED_BY" VARCHAR2(4000 CHAR), 
	"MODIFIED_AT" DATE
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table T_KONTENPLAN
--------------------------------------------------------

  CREATE TABLE "COMPANY"."T_KONTENPLAN" 
   (	"PK_KONTENPLAN" NUMBER, 
	"JAHR" NUMBER, 
	"VERSION" NUMBER
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USER01" ;
--------------------------------------------------------
--  DDL for Table T_KONTENPLAN_KONTEN
--------------------------------------------------------

  CREATE TABLE "COMPANY"."T_KONTENPLAN_KONTEN" 
   (	"PK_KONTENPLAN_KONTEN" NUMBER, 
	"KONTEN_NR_EXT" NUMBER, 
	"BEZEICHNUNG" VARCHAR2(4000 CHAR), 
	"FK_KONTENPLAN" NUMBER, 
	"FK_KONTENPLAN_KONTEN_GRP" NUMBER, 
	"FK_KONTENPLAN_KONTEN_GRP2" NUMBER, 
	"FK_KONTENPLAN_KONTEN_KL" NUMBER, 
	"FK_KONTENPLAN_KONTEN_TYP" NUMBER
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USER01" ;
--------------------------------------------------------
--  DDL for Table T_KONTENPLAN_KONTEN_GRP
--------------------------------------------------------

  CREATE TABLE "COMPANY"."T_KONTENPLAN_KONTEN_GRP" 
   (	"PK_KONTENPLAN_KONTEN_GRP" NUMBER, 
	"BEZEICHNUNG" VARCHAR2(4000 CHAR), 
	"KONTENNR_EXT" NUMBER
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USER01" ;
--------------------------------------------------------
--  DDL for Table T_KONTENPLAN_KONTEN_KAT
--------------------------------------------------------

  CREATE TABLE "COMPANY"."T_KONTENPLAN_KONTEN_KAT" 
   (	"PK_KONTENPLAN_KONTEN_KAT" NUMBER, 
	"BEZEICHNUNG" VARCHAR2(4000 CHAR), 
	"FK_KONTENPLAN" NUMBER, 
	"FK_KONTENPLAN_KONTEN_KAT_GRP" NUMBER
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USER01" ;
--------------------------------------------------------
--  DDL for Table T_KONTENPLAN_KONTEN_KAT_GRP
--------------------------------------------------------

  CREATE TABLE "COMPANY"."T_KONTENPLAN_KONTEN_KAT_GRP" 
   (	"PK_KONTENPLAN_KONTEN_KAT_GRP" NUMBER, 
	"BEZEICHNUNG" VARCHAR2(4000 CHAR), 
	"FK_KONTENPLAN" NUMBER
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USER01" ;
--------------------------------------------------------
--  DDL for Table T_KONTENPLAN_KONTEN_KL
--------------------------------------------------------

  CREATE TABLE "COMPANY"."T_KONTENPLAN_KONTEN_KL" 
   (	"PK_KONTENPLAN_KONTEN_KL" NUMBER, 
	"BEZEICHNUNG" VARCHAR2(4000 CHAR), 
	"FK_KONTENPLAN" NUMBER, 
	"VON" NUMBER, 
	"BIS" NUMBER, 
	"KT_KL_EXT" NUMBER, 
	"KTO_TYP_GRP" VARCHAR2(4000 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USER01" ;
--------------------------------------------------------
--  DDL for Table T_KONTENPLAN_KONTEN_TYP
--------------------------------------------------------

  CREATE TABLE "COMPANY"."T_KONTENPLAN_KONTEN_TYP" 
   (	"PK_KONTENPLAN_KONTEN_TYP" NUMBER, 
	"BEZEICHNUNG" VARCHAR2(4000 CHAR)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USER01" ;
--------------------------------------------------------
--  DDL for Table T_KONTO_AUSZUG
--------------------------------------------------------

  CREATE TABLE "COMPANY"."T_KONTO_AUSZUG" 
   (	"PK_KONTO_AUSZUG" NUMBER, 
	"FK_KONTO" NUMBER, 
	"FK_KONTOAUSZUG" NUMBER, 
	"FK_JAHR" NUMBER, 
	"FK_MONAT" NUMBER, 
	"ANFANGSDATUM" DATE, 
	"ENDDATUM" DATE, 
	"ABHOLDATUM" DATE, 
	"FK_BELEG" NUMBER, 
	"KOMMENTAR" VARCHAR2(4000 CHAR), 
	"CREATED_BY" VARCHAR2(4000 CHAR), 
	"CREATED_AT" DATE, 
	"MODIFIED_BY" VARCHAR2(4000 CHAR), 
	"MODIFIED_AT" DATE, 
	"ANFANGSBETRAG" NUMBER, 
	"ENDBETRAG" NUMBER, 
	"FK_ABHOLDATUM" NUMBER, 
	"FK_ANFANGSDATUM" NUMBER, 
	"FK_ENDDATUM" NUMBER
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USER01" ;
--------------------------------------------------------
--  DDL for Table T_KONTO_BUCH
--------------------------------------------------------

  CREATE TABLE "COMPANY"."T_KONTO_BUCH" 
   (	"PK_KONTO_BUCH" VARCHAR2(20 BYTE), 
	"FK_KONTO" NUMBER, 
	"Buchungstag" DATE, 
	"Wertstellung" DATE, 
	"Umsatzart" VARCHAR2(255 BYTE), 
	"Buchungstext" CLOB, 
	"BETRAG" BINARY_DOUBLE, 
	"Währung" VARCHAR2(255 BYTE), 
	"Auftraggeberkonto" BINARY_DOUBLE, 
	"Bankleitzahl Auftraggeberkonto" BINARY_DOUBLE, 
	"IBAN Auftraggeberkonto" VARCHAR2(255 BYTE), 
	"FK_Verwendungszweck" NUMBER, 
	"FK_Kontotyp" NUMBER, 
	"FK_KONTO_BUCH_KAT" NUMBER, 
	"Bemerkungen" VARCHAR2(255 BYTE), 
	"LFD_SUMME" NUMBER, 
	"Beleg" DATE, 
	"Unternehmen" VARCHAR2(255 BYTE), 
	"Betrag Ursprung" BINARY_DOUBLE, 
	"Währung Ursprung" VARCHAR2(255 BYTE), 
	"Belastete Kreditkarte" BINARY_DOUBLE, 
	"Kategorie" VARCHAR2(255 BYTE), 
	"Wertstellungsmonat" BINARY_DOUBLE, 
	"Datum" DATE, 
	"Uhrzeit" DATE, 
	"Zeitzone" VARCHAR2(255 BYTE), 
	"Name" VARCHAR2(255 BYTE), 
	"Typ" VARCHAR2(255 BYTE), 
	"Status" VARCHAR2(255 BYTE), 
	"Brutto" BINARY_DOUBLE, 
	"Gebühr" VARCHAR2(20 BYTE), 
	"Netto" BINARY_DOUBLE, 
	"Absender_Email" VARCHAR2(255 BYTE), 
	"Empfänger_Email" VARCHAR2(255 BYTE), 
	"Transaktionscode" VARCHAR2(255 BYTE), 
	"Lieferadresse" VARCHAR2(255 BYTE), 
	"Adress-Status" VARCHAR2(255 BYTE), 
	"Artikelbezeichnung" VARCHAR2(255 BYTE), 
	"Artikelnummer" VARCHAR2(255 BYTE), 
	"Versand_Bearbeitungsgeb" VARCHAR2(255 BYTE), 
	"Versicherungsbetrag" VARCHAR2(255 BYTE), 
	"Umsatzsteuer" VARCHAR2(255 BYTE), 
	"Option 1 Name" VARCHAR2(255 BYTE), 
	"Option 1 Wert" VARCHAR2(255 BYTE), 
	"Option 2 Name" VARCHAR2(255 BYTE), 
	"Option 2 Wert" VARCHAR2(255 BYTE), 
	"Zugehöriger_Transaktionscode" VARCHAR2(255 BYTE), 
	"Rechnungsnummer" VARCHAR2(255 BYTE), 
	"Zollnummer" VARCHAR2(255 BYTE), 
	"Anzahl" VARCHAR2(20 BYTE), 
	"Empfangsnummer" VARCHAR2(255 BYTE), 
	"Guthaben" BINARY_DOUBLE, 
	"Adresszeile 1" VARCHAR2(255 BYTE), 
	"Adresszusatz" VARCHAR2(255 BYTE), 
	"Ort" VARCHAR2(255 BYTE), 
	"Bundesland" VARCHAR2(255 BYTE), 
	"PLZ" VARCHAR2(255 BYTE), 
	"Land" VARCHAR2(255 BYTE), 
	"Telefon" VARCHAR2(255 BYTE), 
	"Betreff" VARCHAR2(255 BYTE), 
	"Hinweis" VARCHAR2(255 BYTE), 
	"Ländervorwahl" VARCHAR2(255 BYTE), 
	"Auswirkung_Guthaben" VARCHAR2(255 BYTE), 
	"OLD_ID" NUMBER, 
	"FK_SRC" VARCHAR2(20 BYTE), 
	"FK_ARBEITSTAG_BUCH" NUMBER, 
	"FK_ARBEITSTAG_WERTST" NUMBER, 
	"FK_KONTO_AUSZUG" NUMBER
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USER01" 
 LOB ("Buchungstext") STORE AS BASICFILE (
  TABLESPACE "USER01" ENABLE STORAGE IN ROW CHUNK 8192 RETENTION 
  NOCACHE LOGGING 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)) ;
--------------------------------------------------------
--  DDL for Table T_KONTO_BUCH_KAT
--------------------------------------------------------

  CREATE TABLE "COMPANY"."T_KONTO_BUCH_KAT" 
   (	"PK_KONTO_BUCH_KAT" NUMBER, 
	"Kategorie" VARCHAR2(255 BYTE), 
	"neu_alt" VARCHAR2(255 BYTE), 
	"FK_Oberkategorie" VARCHAR2(20 BYTE), 
	"VALID" NUMBER, 
	"VALID_FROM" DATE, 
	"VALID_TO" DATE, 
	"CREATION_DATE" DATE, 
	"MODIFY_DATE" DATE, 
	"CREATED_BY" VARCHAR2(4000 CHAR), 
	"MODIFIED_BY" VARCHAR2(4000 CHAR)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USER01" ;
--------------------------------------------------------
--  DDL for Table T_KONTROLLE
--------------------------------------------------------

  CREATE TABLE "COMPANY"."T_KONTROLLE" 
   (	"PK_KONTROLLE" NUMBER, 
	"JAHR" NUMBER, 
	"KONTO" NUMBER, 
	"FINALISIERUNGSDATUM" DATE
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USER01" ;
--------------------------------------------------------
--  DDL for Table T_LAGERORT
--------------------------------------------------------

  CREATE TABLE "COMPANY"."T_LAGERORT" 
   (	"PK_LAGERORT" NUMBER, 
	"LAGERORT" VARCHAR2(4000 CHAR), 
	"FK_LOCATION" NUMBER, 
	"RAUM" VARCHAR2(4000 CHAR), 
	"CREATED_BY" VARCHAR2(4000 CHAR), 
	"CREATED_AT" DATE, 
	"MODIFIED_BY" VARCHAR2(4000 CHAR), 
	"MODIFIED_AT" DATE
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table T_LAND
--------------------------------------------------------

  CREATE TABLE "COMPANY"."T_LAND" 
   (	"PK_LAND" NUMBER, 
	"LAND" VARCHAR2(4000 CHAR), 
	"CREATED_BY" VARCHAR2(4000 CHAR), 
	"CREATED_AT" DATE, 
	"MODIFIED_BY" VARCHAR2(4000 CHAR), 
	"MODIFIED_AT" DATE
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USER01" ;
--------------------------------------------------------
--  DDL for Table T_LEHRGANG
--------------------------------------------------------

  CREATE TABLE "COMPANY"."T_LEHRGANG" 
   (	"PK_LEHRGANG" NUMBER, 
	"LEHRGANG" VARCHAR2(4000 CHAR), 
	"LEHRGANGSNUMMER" NUMBER, 
	"FK_UNIVERSITÄT" NUMBER, 
	"FK_LEHRGANGSLEITER" NUMBER, 
	"MTL_STUDIENGEBÜHR" NUMBER, 
	"LEHRGANGSDAUER_SOLL" NUMBER, 
	"BETRAG_GESAMT_SOLL" NUMBER, 
	"BEGINN" DATE, 
	"ENDE" DATE, 
	"BENUTZERKENNUNG" VARCHAR2(4000 CHAR), 
	"PASSWORT" VARCHAR2(4000 CHAR), 
	"CREATED_BY" VARCHAR2(4000 CHAR), 
	"CREATED_AT" DATE, 
	"MODIFIED_BY" VARCHAR2(4000 CHAR), 
	"MODIFIED_AT" DATE, 
	"ZERTIFIZIERUNG" NUMBER, 
	"ZERTIFIZIERUNG_ABGESCHLOSSEN" NUMBER, 
	"ABGESCHLOSSEN" NUMBER
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table T_LEX
--------------------------------------------------------

  CREATE TABLE "COMPANY"."T_LEX" 
   (	"BELEGDATUM" VARCHAR2(26 BYTE), 
	"BUCHUNGSDATUM" VARCHAR2(26 BYTE), 
	"BUCHUNGSPERIODE" NUMBER(3,0), 
	"BELEGNUMMERNKREIS" VARCHAR2(26 BYTE), 
	"BELEGNUMMER" NUMBER(5,0), 
	"BUCHUNGSTEXT" VARCHAR2(128 BYTE), 
	"BUCHUNGSBETRAG" NUMBER(9,2), 
	"SOLLKONTO" NUMBER(6,0), 
	"HABENKONTO" NUMBER(6,0), 
	"STEUERSCHLÜSSEL" NUMBER(3,0), 
	"KOSTENSTELLE" VARCHAR2(26 BYTE), 
	"KOSTENTRÄGER" VARCHAR2(26 BYTE), 
	"BUCHUNGSBETRAG_EURO" NUMBER(9,2), 
	"WÄHRUNG" VARCHAR2(26 BYTE), 
	"ZUSATZANGABEN" NUMBER(3,0), 
	"OK" NUMBER DEFAULT 0, 
	"STORNO" NUMBER DEFAULT 0, 
	"PK_LEX" NUMBER, 
	"BEMERKUNGEN" VARCHAR2(4000 BYTE), 
	"DATUM_OK" DATE, 
	"FK_MAIN_KEY" NUMBER, 
	"FK_IMP_BA_BEL" NUMBER
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USER01" ;
--------------------------------------------------------
--  DDL for Table T_LEX_IMP
--------------------------------------------------------

  CREATE TABLE "COMPANY"."T_LEX_IMP" 
   (	"BELEGDATUM" VARCHAR2(26 BYTE), 
	"BUCHUNGSDATUM" VARCHAR2(26 BYTE), 
	"BUCHUNGSPERIODE" NUMBER(3,0), 
	"BELEGNUMMERNKREIS" VARCHAR2(26 BYTE), 
	"BELEGNUMMER" NUMBER(5,0), 
	"BUCHUNGSTEXT" VARCHAR2(128 BYTE), 
	"BUCHUNGSBETRAG" NUMBER(9,2), 
	"SOLLKONTO" NUMBER(6,0), 
	"HABENKONTO" NUMBER(6,0), 
	"STEUERSCHLÜSSEL" NUMBER(3,0), 
	"KOSTENSTELLE" VARCHAR2(26 BYTE), 
	"KOSTENTRÄGER" VARCHAR2(26 BYTE), 
	"BUCHUNGSBETRAG_EURO" NUMBER(9,2), 
	"WÄHRUNG" VARCHAR2(26 BYTE), 
	"ZUSATZANGABEN" NUMBER(3,0)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USER01" ;
--------------------------------------------------------
--  DDL for Table T_LIST
--------------------------------------------------------

  CREATE TABLE "COMPANY"."T_LIST" 
   (	"NR" VARCHAR2(26 BYTE), 
	"LISTENNR" NUMBER(3,0), 
	"FORTL_NR" NUMBER(5,0), 
	"R" NUMBER(8,0), 
	"DATUM" DATE, 
	"FK_KONTO" NUMBER
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USER01" ;
--------------------------------------------------------
--  DDL for Table T_LOCATION
--------------------------------------------------------

  CREATE TABLE "COMPANY"."T_LOCATION" 
   (	"PK_LOCATION" NUMBER, 
	"LOCATION" VARCHAR2(4000 CHAR), 
	"FK_LOCATION_TYPE" NUMBER, 
	"FK_ADRESSE" NUMBER, 
	"CREATED_BY" VARCHAR2(4000 CHAR), 
	"CREATED_AT" DATE, 
	"MODIFIED_BY" VARCHAR2(4000 CHAR), 
	"MODIFIED_AT" DATE
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table T_LOCATION_TYPE
--------------------------------------------------------

  CREATE TABLE "COMPANY"."T_LOCATION_TYPE" 
   (	"PK_LOCATION_TYPE" NUMBER, 
	"LOCATION_TYPE" VARCHAR2(4000 CHAR), 
	"CREATED_BY" VARCHAR2(4000 CHAR), 
	"CREATED_AT" DATE, 
	"MODIFIED_BY" VARCHAR2(4000 CHAR), 
	"MODIFIED_AT" DATE
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table T_LÖSUNG
--------------------------------------------------------

  CREATE TABLE "COMPANY"."T_LÖSUNG" 
   (	"PK_LÖSUNG" NUMBER, 
	"LÖS_NR" VARCHAR2(4000 CHAR), 
	"LÖSUNG" VARCHAR2(4000 CHAR), 
	"LÖSUNG_CLOB" CLOB, 
	"KORR" NUMBER, 
	"EIG_ANTW" NUMBER
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USER01" 
 LOB ("LÖSUNG_CLOB") STORE AS BASICFILE (
  TABLESPACE "USER01" ENABLE STORAGE IN ROW CHUNK 8192 RETENTION 
  NOCACHE LOGGING 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)) ;
--------------------------------------------------------
--  DDL for Table T_MATCH
--------------------------------------------------------

  CREATE TABLE "COMPANY"."T_MATCH" 
   (	"PK_MATCH" NUMBER, 
	"KRIT" VARCHAR2(4000 BYTE), 
	"FK_KEY" NUMBER, 
	"BESCHREIBUNG" VARCHAR2(4000 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USER01" ;
--------------------------------------------------------
--  DDL for Table T_MENGENEINHEIT
--------------------------------------------------------

  CREATE TABLE "COMPANY"."T_MENGENEINHEIT" 
   (	"PK_MENGENEINHEIT" NUMBER, 
	"MENGENEINHEIT" VARCHAR2(4000 CHAR), 
	"CREATED_BY" VARCHAR2(4000 CHAR), 
	"CREATED_AT" DATE, 
	"MODIFIED_BY" VARCHAR2(4000 CHAR), 
	"MODIFIED_AT" DATE
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table T_OFFENE_EINGANGSRECHNUNGEN
--------------------------------------------------------

  CREATE TABLE "COMPANY"."T_OFFENE_EINGANGSRECHNUNGEN" 
   (	"PK_OFFENE_RECHNUNGEN" NUMBER, 
	"BETRAG" NUMBER, 
	"WÄHRUNG" VARCHAR2(20 BYTE), 
	"GESCHÄFTSPARTNER" VARCHAR2(4000 BYTE), 
	"ZWECK" VARCHAR2(4000 BYTE), 
	"GRUND" VARCHAR2(4000 BYTE), 
	"EMPFÄNGER" VARCHAR2(4000 BYTE), 
	"IBAN" VARCHAR2(4000 BYTE), 
	"BANK_VERWENDUNGSZWECK" VARCHAR2(4000 BYTE), 
	"DATUM" VARCHAR2(20 BYTE), 
	"MAHNUNGSDATUM" VARCHAR2(20 BYTE), 
	"FÄLLIGKEITSDATUM" VARCHAR2(20 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USER01" ;
--------------------------------------------------------
--  DDL for Table T_ORGANISATIONSEINHEIT
--------------------------------------------------------

  CREATE TABLE "COMPANY"."T_ORGANISATIONSEINHEIT" 
   (	"PK_ORGANISATIONSEINHEIT" NUMBER, 
	"ORGANISATIONSEINHEIT" VARCHAR2(4000 CHAR), 
	"FK_PARENT_ORG_UNIT" NUMBER, 
	"FK_GESCHAEFTSPARTNER" NUMBER, 
	"CREATED_BY" VARCHAR2(4000 CHAR), 
	"CREATED_AT" DATE, 
	"MODIFIED_BY" VARCHAR2(4000 CHAR), 
	"MODIFIED_AT" DATE
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table T_ORT
--------------------------------------------------------

  CREATE TABLE "COMPANY"."T_ORT" 
   (	"PK_ORT" NUMBER, 
	"ORT" VARCHAR2(4000 BYTE), 
	"CREATED_BY" VARCHAR2(4000 CHAR), 
	"CREATED_AT" DATE, 
	"MODIFIED_BY" VARCHAR2(4000 CHAR), 
	"MODIFIED_AT" DATE, 
	"FK_LAND" NUMBER
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table T_PACKUNGSTYP
--------------------------------------------------------

  CREATE TABLE "COMPANY"."T_PACKUNGSTYP" 
   (	"PK_PACKKUNGSTYP" NUMBER, 
	"PACKUNGSTYP" VARCHAR2(4000 CHAR), 
	"FK_HAUPTPACKUNGSTYP" NUMBER, 
	"FK_BUENDELUNG_1" NUMBER, 
	"FK_BUENDELUNG_2" NUMBER, 
	"FK_BUENDELUNG_3" NUMBER, 
	"FK_BUENDELUNG_4" NUMBER, 
	"FK_BUENDELUNG_5" NUMBER, 
	"CREATED_BY" VARCHAR2(4000 CHAR), 
	"CREATED_AT" DATE, 
	"MODIFIED_BY" VARCHAR2(4000 CHAR), 
	"MODIFIED_AT" DATE
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table T_PERSON
--------------------------------------------------------

  CREATE TABLE "COMPANY"."T_PERSON" 
   (	"PK_PERSON" NUMBER, 
	"NACHNAME" VARCHAR2(4000 CHAR), 
	"VORNAME" VARCHAR2(4000 CHAR), 
	"BEMERKUNG" VARCHAR2(4000 CHAR), 
	"CREATED_BY" VARCHAR2(4000 CHAR), 
	"CREATED_AT" DATE, 
	"MODIFIED_BY" VARCHAR2(4000 CHAR), 
	"MODIFIED_AT" DATE
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table T_PLZ_ORT
--------------------------------------------------------

  CREATE TABLE "COMPANY"."T_PLZ_ORT" 
   (	"PK_PLZ_ORT" NUMBER, 
	"PLZ" VARCHAR2(4000 CHAR), 
	"OT" VARCHAR2(4000 CHAR), 
	"FK_ORT" NUMBER, 
	"CREATED_BY" VARCHAR2(4000 CHAR), 
	"CREATED_AT" DATE, 
	"MODIFIED_BY" VARCHAR2(4000 CHAR), 
	"MODIFIED_AT" DATE
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table T_PRODUKT
--------------------------------------------------------

  CREATE TABLE "COMPANY"."T_PRODUKT" 
   (	"PK_PRODUKT" NUMBER, 
	"PRODUKT" VARCHAR2(4000 CHAR), 
	"PRODUKTBESCHREIBUNG" VARCHAR2(4000 CHAR), 
	"MENGE" VARCHAR2(4000 CHAR), 
	"FK_PRODUKTGROESSE" VARCHAR2(4000 CHAR), 
	"CREATED_BY" VARCHAR2(4000 CHAR), 
	"CREATED_AT" DATE, 
	"MODIFIED_BY" VARCHAR2(4000 CHAR), 
	"MODIFIED_AT" DATE
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table T_PROJEKT
--------------------------------------------------------

  CREATE TABLE "COMPANY"."T_PROJEKT" 
   (	"PK_PROJEKT" NUMBER, 
	"FK_AUFTRAGGEBER" NUMBER, 
	"FK_PROJEKTPARTNER_1" NUMBER, 
	"FK_PROJEKTPARTNER_2" NUMBER, 
	"PROJEKT" VARCHAR2(4000 CHAR), 
	"VON" DATE, 
	"BIS" DATE, 
	"AKTUELLER_STUNDENSATZ" NUMBER, 
	"PSP_ELEMENT" VARCHAR2(4000 CHAR), 
	"CREATED_BY" VARCHAR2(4000 CHAR), 
	"CREATED_AT" DATE, 
	"MODIFIED_BY" VARCHAR2(4000 CHAR), 
	"MODIFIED_AT" DATE, 
	"RECHNUNG_GESTELLT" NUMBER, 
	"ZAHLUNG_ABGESCHLOSSEN" NUMBER, 
	"BELEGE_ZUGEORDNET" NUMBER, 
	"KM_GERECHNET" NUMBER, 
	"PROJEKT_ABGESCHLOSSEN" NUMBER, 
	"FK_PROJEKT_ART" NUMBER, 
	"FK_LEHRGANG" NUMBER, 
	"BILD" BLOB, 
	"BILD1" BLOB, 
	"BILD2" BLOB, 
	"BILD3" BLOB, 
	"BILD4" BLOB, 
	"BILD5" BLOB, 
	"DATEINAME" VARCHAR2(4000 BYTE), 
	"DATEINAME1" VARCHAR2(4000 BYTE), 
	"DATEINAME2" VARCHAR2(4000 BYTE), 
	"DATEINAME3" VARCHAR2(4000 BYTE), 
	"DATEINAME4" VARCHAR2(4000 BYTE), 
	"DATEINAME5" VARCHAR2(4000 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" 
 LOB ("BILD") STORE AS BASICFILE (
  TABLESPACE "USERS" ENABLE STORAGE IN ROW CHUNK 8192 RETENTION 
  NOCACHE LOGGING 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)) 
 LOB ("BILD1") STORE AS BASICFILE (
  TABLESPACE "USERS" ENABLE STORAGE IN ROW CHUNK 8192 RETENTION 
  NOCACHE LOGGING 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)) 
 LOB ("BILD2") STORE AS BASICFILE (
  TABLESPACE "USERS" ENABLE STORAGE IN ROW CHUNK 8192 RETENTION 
  NOCACHE LOGGING 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)) 
 LOB ("BILD3") STORE AS BASICFILE (
  TABLESPACE "USERS" ENABLE STORAGE IN ROW CHUNK 8192 RETENTION 
  NOCACHE LOGGING 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)) 
 LOB ("BILD4") STORE AS BASICFILE (
  TABLESPACE "USERS" ENABLE STORAGE IN ROW CHUNK 8192 RETENTION 
  NOCACHE LOGGING 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)) 
 LOB ("BILD5") STORE AS BASICFILE (
  TABLESPACE "USERS" ENABLE STORAGE IN ROW CHUNK 8192 RETENTION 
  NOCACHE LOGGING 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)) ;
--------------------------------------------------------
--  DDL for Table T_PROJEKT_ART
--------------------------------------------------------

  CREATE TABLE "COMPANY"."T_PROJEKT_ART" 
   (	"PK_PROJEKT_ART" NUMBER, 
	"PROJEKT_ART" VARCHAR2(4000 CHAR), 
	"CREATED_BY" VARCHAR2(4000 CHAR), 
	"CREATED_AT" DATE, 
	"MODIFIED_BY" VARCHAR2(4000 CHAR), 
	"MODIFIED_AT" DATE
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USER01" ;
--------------------------------------------------------
--  DDL for Table T_PRUEFUNG
--------------------------------------------------------

  CREATE TABLE "COMPANY"."T_PRUEFUNG" 
   (	"PK_PRUEFUNG" NUMBER, 
	"PRUEFUNG" VARCHAR2(4000 CHAR), 
	"FK_LEHRGANG" NUMBER, 
	"MONAT" NUMBER, 
	"JAHR" NUMBER, 
	"FK_ABSCHLUSSTYP" NUMBER, 
	"DATUM" DATE, 
	"GESAMTPUNKTE" VARCHAR2(4000 CHAR), 
	"PUNKTEBEWERTUNG" VARCHAR2(4000 CHAR), 
	"NOTE" VARCHAR2(4000 CHAR), 
	"PRÜFUNGSGEBÜHR_NETTO" VARCHAR2(4000 CHAR), 
	"FK_STEUERSATZ" NUMBER, 
	"PRUEFUNGSGEBÜHR_STEUER" VARCHAR2(4000 CHAR), 
	"PRUEFUNGSGEBÜHR_BRUTTO" VARCHAR2(4000 CHAR), 
	"VON" DATE, 
	"BIS" DATE, 
	"FK_ADRESSE" NUMBER, 
	"ANMELDESCHLUSS" DATE, 
	"CREATED_BY" VARCHAR2(4000 CHAR), 
	"CREATED_AT" DATE, 
	"MODIFIED_BY" VARCHAR2(4000 CHAR), 
	"MODIFIED_AT" DATE
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table T_QUELLE
--------------------------------------------------------

  CREATE TABLE "COMPANY"."T_QUELLE" 
   (	"PK_QUELLE" NUMBER, 
	"QUELLE" VARCHAR2(4000 CHAR), 
	"FK_QUELLENTYP" NUMBER, 
	"FK_KONTAKT" NUMBER, 
	"FK_BUCH" NUMBER, 
	"CREATED_BY" VARCHAR2(4000 CHAR), 
	"CREATED_AT" DATE, 
	"MODIFIED_BY" VARCHAR2(4000 CHAR), 
	"MODIFIED_AT" DATE
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table T_QUELLENTYP
--------------------------------------------------------

  CREATE TABLE "COMPANY"."T_QUELLENTYP" 
   (	"PK_QUELLENTYP" NUMBER, 
	"QUELLENTYP" VARCHAR2(4000 CHAR), 
	"CREATED_BY" VARCHAR2(4000 CHAR), 
	"CREATED_AT" DATE, 
	"MODIFIED_BY" VARCHAR2(4000 CHAR), 
	"MODIFIED_AT" DATE
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table T_RECHNUNG
--------------------------------------------------------

  CREATE TABLE "COMPANY"."T_RECHNUNG" 
   (	"PK_RECHNUNG" NUMBER, 
	"RECHNUNGSNUMMER" VARCHAR2(4000 CHAR), 
	"RECHNUNG" VARCHAR2(4000 CHAR), 
	"FK_PROJEKT" NUMBER, 
	"RECHNUNGSDATUM" DATE, 
	"ZEITRAUM_VON" DATE, 
	"ZEITRAUM_BIS" DATE, 
	"RECHNUNGSBETRAG_NETTO" NUMBER, 
	"FK_STEUERSATZ" NUMBER, 
	"MWST" NUMBER, 
	"RECHNUNGSBETRAG_BRUTTO" NUMBER, 
	"ZAHLUNGSEINGANG" DATE, 
	"GEZAHLT_AM" DATE, 
	"ZAHLUNGSBETRAG" NUMBER, 
	"FK_RECHNUNGSTYP" NUMBER, 
	"CREATED_BY" VARCHAR2(4000 CHAR), 
	"CREATED_AT" DATE, 
	"MODIFIED_BY" VARCHAR2(4000 CHAR), 
	"MODIFIED_AT" DATE, 
	"FK_ZAHLUNGSART" NUMBER, 
	"SKONTOBETRAG" NUMBER, 
	"SKONTOSATZ" NUMBER, 
	"ZAHLUNG_ABGESCHLOSSEN" NUMBER, 
	"VORSTEUER_BEZAHLT" NUMBER, 
	"STEUERENDABRECHNUNG" NUMBER
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table T_RECHNUNGSTYP
--------------------------------------------------------

  CREATE TABLE "COMPANY"."T_RECHNUNGSTYP" 
   (	"PK_RECHNUNGSTYP" NUMBER, 
	"RECHNUNGSTYP" VARCHAR2(4000 CHAR), 
	"CREATED_BY" VARCHAR2(4000 CHAR), 
	"CREATED_AT" DATE, 
	"MODIFIED_BY" VARCHAR2(4000 CHAR), 
	"MODIFIED_AT" DATE
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table T_REL_ARTIKEL_ARTIKELTYP
--------------------------------------------------------

  CREATE TABLE "COMPANY"."T_REL_ARTIKEL_ARTIKELTYP" 
   (	"PK_REL_ART_ARTT" NUMBER, 
	"FK_ARTIKEL" NUMBER, 
	"FK_ARTIKELTYP" NUMBER, 
	"CREATED_BY" VARCHAR2(4000 CHAR), 
	"CREATED_AT" DATE, 
	"MODIFIED_BY" VARCHAR2(4000 CHAR), 
	"MODIFIED_AT" DATE
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table T_REL_ARTIKELTYP_ARTIKELTYP
--------------------------------------------------------

  CREATE TABLE "COMPANY"."T_REL_ARTIKELTYP_ARTIKELTYP" 
   (	"PK_REL_ARTT_ARTT" NUMBER, 
	"FK_ARTIKELTYP_MAIN" NUMBER, 
	"FK_ARTIKELTYP_SUB" NUMBER, 
	"CREATED_BY" VARCHAR2(4000 CHAR), 
	"CREATED_AT" DATE, 
	"MODIFIED_BY" VARCHAR2(4000 CHAR), 
	"MODIFIED_AT" DATE
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USER01" ;
--------------------------------------------------------
--  DDL for Table T_REL_BARGELD_BELEG
--------------------------------------------------------

  CREATE TABLE "COMPANY"."T_REL_BARGELD_BELEG" 
   (	"PK_REL_BARGELD" NUMBER, 
	"FK_BARGELD" NUMBER, 
	"FK_BELEG" NUMBER
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USER01" ;
--------------------------------------------------------
--  DDL for Table T_REL_BELEGART_GRP
--------------------------------------------------------

  CREATE TABLE "COMPANY"."T_REL_BELEGART_GRP" 
   (	"PK_REL_BELEGART_GRP" NUMBER, 
	"FK_BELEGART" NUMBER, 
	"FK_BELEGART_GRP" NUMBER, 
	"CREATED_BY" VARCHAR2(4000 CHAR), 
	"CREATED_AT" DATE, 
	"MODIFIED_BY" VARCHAR2(4000 CHAR), 
	"MODIFIED_AT" DATE
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USER01" ;
--------------------------------------------------------
--  DDL for Table T_REL_BELEG_ARTIKEL
--------------------------------------------------------

  CREATE TABLE "COMPANY"."T_REL_BELEG_ARTIKEL" 
   (	"PK_REL_BEL_ARTIKEL" NUMBER, 
	"FK_BELEG" NUMBER, 
	"FK_ARTIKEL" NUMBER, 
	"MENGE" NUMBER, 
	"PREIS_NETTO" NUMBER, 
	"FK_STEUERSATZ" NUMBER, 
	"MWST" NUMBER, 
	"PREIS_BRUTTO" NUMBER, 
	"LITER" NUMBER, 
	"CREATED_BY" VARCHAR2(4000 CHAR), 
	"CREATED_AT" DATE, 
	"MODIFIED_BY" VARCHAR2(4000 CHAR), 
	"MODIFIED_AT" DATE, 
	"FK_ARTIKELBESTANDTEIL" NUMBER
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table T_REL_BELEG_INVENTAR
--------------------------------------------------------

  CREATE TABLE "COMPANY"."T_REL_BELEG_INVENTAR" 
   (	"PK_REL_BEL_INV" NUMBER, 
	"FK_BELEG" NUMBER, 
	"FK_INVENTAR" NUMBER, 
	"CREATED_BY" VARCHAR2(4000 CHAR), 
	"CREATED_AT" DATE, 
	"MODIFIED_BY" VARCHAR2(4000 CHAR), 
	"MODIFIED_AT" DATE
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table T_REL_BELEG_LOCATION
--------------------------------------------------------

  CREATE TABLE "COMPANY"."T_REL_BELEG_LOCATION" 
   (	"PK_REL_BEL_LOC" NUMBER, 
	"FK_BELEG" NUMBER, 
	"FK_LOCATION" NUMBER, 
	"CREATED_BY" VARCHAR2(4000 CHAR), 
	"CREATED_AT" DATE, 
	"MODIFIED_BY" VARCHAR2(4000 CHAR), 
	"MODIFIED_AT" DATE
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table T_REL_BELEGPOS_ARTIKEL
--------------------------------------------------------

  CREATE TABLE "COMPANY"."T_REL_BELEGPOS_ARTIKEL" 
   (	"PK_REL_BELPOS_ARTIKEL" NUMBER, 
	"FK_BELEGPOS" NUMBER, 
	"FK_ARTIKEL" NUMBER, 
	"MENGE" NUMBER, 
	"PREIS_NETTO" NUMBER, 
	"FK_STEUERSATZ" NUMBER, 
	"MWST" NUMBER, 
	"PREIS_BRUTTO" NUMBER, 
	"LITER" NUMBER, 
	"CREATED_BY" VARCHAR2(4000 CHAR), 
	"CREATED_AT" DATE, 
	"MODIFIED_BY" VARCHAR2(4000 CHAR), 
	"MODIFIED_AT" DATE, 
	"FK_ARTIKELBESTANDTEIL" NUMBER
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table T_REL_BELEG_PRODUKT
--------------------------------------------------------

  CREATE TABLE "COMPANY"."T_REL_BELEG_PRODUKT" 
   (	"PK_REL_BEL_PROD" NUMBER, 
	"FK_BELEG" NUMBER, 
	"MENGE" NUMBER, 
	"FK_PRODUKT" NUMBER, 
	"PREIS_NETTO" NUMBER, 
	"FK_STEUERSATZ" NUMBER, 
	"MWST" NUMBER, 
	"PREIS_BRUTTO" NUMBER, 
	"CREATED_BY" VARCHAR2(4000 CHAR), 
	"CREATED_AT" DATE, 
	"MODIFIED_BY" VARCHAR2(4000 CHAR), 
	"MODIFIED_AT" DATE
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table T_REL_BEL_KONT_ADR
--------------------------------------------------------

  CREATE TABLE "COMPANY"."T_REL_BEL_KONT_ADR" 
   (	"PK_REL_BEL_KONT_ADR" NUMBER, 
	"FK_BELEG" NUMBER, 
	"FK_KONT_ADR" NUMBER
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table T_REL_BEL_KONT_BUCH
--------------------------------------------------------

  CREATE TABLE "COMPANY"."T_REL_BEL_KONT_BUCH" 
   (	"PK_REL_BEL_KONT_BUCH" NUMBER, 
	"FK_BELEG" NUMBER, 
	"FK_KONTOAUSZUG_BUCH" NUMBER, 
	"CREATED_BY" VARCHAR2(4000 CHAR), 
	"CREATED_AT" DATE, 
	"MODIFIED_BY" VARCHAR2(4000 CHAR), 
	"MODIFIED_AT" DATE
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USER01" ;
--------------------------------------------------------
--  DDL for Table T_REL_BEL_VERBRAUCHSMAT
--------------------------------------------------------

  CREATE TABLE "COMPANY"."T_REL_BEL_VERBRAUCHSMAT" 
   (	"PK_REL_BEL_VERBRAUCHSMAT" NUMBER, 
	"FK_BELEG" NUMBER, 
	"FK_VERBRAUCHSMATERIAL" NUMBER, 
	"CREATED_BY" VARCHAR2(4000 CHAR), 
	"CREATED_AT" DATE, 
	"MODIFIED_BY" VARCHAR2(4000 CHAR), 
	"MODIFIED_AT" DATE
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table T_REL_FRAGE_LÖS
--------------------------------------------------------

  CREATE TABLE "COMPANY"."T_REL_FRAGE_LÖS" 
   (	"PK_FRAGE_LÖS" NUMBER, 
	"FK_FRAGE" NUMBER, 
	"FK_LÖSUNG" NUMBER
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USER01" ;
--------------------------------------------------------
--  DDL for Table T_REL_GESCHAEFTSP_KONT
--------------------------------------------------------

  CREATE TABLE "COMPANY"."T_REL_GESCHAEFTSP_KONT" 
   (	"PK_REL_GP_KONT" NUMBER, 
	"FK_GESCHAEFTSPARTNER" NUMBER, 
	"FK_KONTAKT" NUMBER, 
	"FK_ADRESSE" NUMBER, 
	"CREATED_BY" VARCHAR2(4000 CHAR), 
	"CREATED_AT" DATE, 
	"MODIFIED_BY" VARCHAR2(4000 CHAR), 
	"MODIFIED_AT" DATE
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table T_REL_GESCHAEFTSP_KUNR
--------------------------------------------------------

  CREATE TABLE "COMPANY"."T_REL_GESCHAEFTSP_KUNR" 
   (	"PK_REL_GP_KUNR" NUMBER, 
	"FK_GESCHÄFTSPARTNER" NUMBER, 
	"EXT_KUNDENNR" NUMBER, 
	"CREATED_BY" VARCHAR2(4000 CHAR), 
	"CREATED_AT" DATE, 
	"MODIFIED_BY" VARCHAR2(4000 CHAR), 
	"MODIFIED_AT" DATE
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table T_REL_IMP_BEL_BEL
--------------------------------------------------------

  CREATE TABLE "COMPANY"."T_REL_IMP_BEL_BEL" 
   (	"PK_REL_IMP_BEL_BEL" NUMBER, 
	"FK_IMP_BA_BEL1" NUMBER, 
	"FK_IMP_BA_BEL2" NUMBER, 
	"FK_VORGANG" NUMBER
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USER01" ;
--------------------------------------------------------
--  DDL for Table T_REL_INVENTAR_ARTIKEL
--------------------------------------------------------

  CREATE TABLE "COMPANY"."T_REL_INVENTAR_ARTIKEL" 
   (	"PK_REL_INV_ART" NUMBER, 
	"FK_INVENTAR" NUMBER, 
	"FK_ARTIKEL" NUMBER, 
	"CREATED_BY" VARCHAR2(4000 CHAR), 
	"CREATED_AT" DATE, 
	"MODIFIED_BY" VARCHAR2(4000 CHAR), 
	"MODIFIED_AT" DATE
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table T_REL_INVENTAR_BARZAHL
--------------------------------------------------------

  CREATE TABLE "COMPANY"."T_REL_INVENTAR_BARZAHL" 
   (	"PK_REL_INV_BARZAHL" NUMBER, 
	"FK_INVENTAR" NUMBER, 
	"FK_IMP_BA_BEL" NUMBER, 
	"CREATED_BY" VARCHAR2(4000 CHAR), 
	"CREATED_AT" DATE, 
	"MODIFIED_BY" VARCHAR2(4000 CHAR), 
	"MODIFIED_AT" DATE
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USER01" ;
--------------------------------------------------------
--  DDL for Table T_REL_INVENTAR_INVENTARTYP
--------------------------------------------------------

  CREATE TABLE "COMPANY"."T_REL_INVENTAR_INVENTARTYP" 
   (	"PK_REL_INV_INVT" NUMBER, 
	"FK_INVENTAR" NUMBER, 
	"FK_INVENTARTYP" NUMBER, 
	"CREATED_BY" VARCHAR2(4000 CHAR), 
	"CREATED_AT" DATE, 
	"MODIFIED_BY" VARCHAR2(4000 CHAR), 
	"MODIFIED_AT" DATE
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table T_REL_INVENTAR_ZAHLUNG
--------------------------------------------------------

  CREATE TABLE "COMPANY"."T_REL_INVENTAR_ZAHLUNG" 
   (	"PK_REL_INV_ZAHLUNG" NUMBER, 
	"FK_INVENTAR" NUMBER, 
	"FK_MAIN_KEY" NUMBER, 
	"FK_IMP_BA_BEL" NUMBER, 
	"CREATED_BY" VARCHAR2(4000 CHAR), 
	"CREATED_AT" DATE, 
	"MODIFIED_BY" VARCHAR2(4000 CHAR), 
	"MODIFIED_AT" DATE, 
	"ZUORDNUNGSART" VARCHAR2(4000 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USER01" ;
--------------------------------------------------------
--  DDL for Table T_REL_INV_VERBRAUCHSMAT
--------------------------------------------------------

  CREATE TABLE "COMPANY"."T_REL_INV_VERBRAUCHSMAT" 
   (	"PK_REL_INV_VERBRAUCHSMAT" NUMBER, 
	"FK_INVENTAR" NUMBER, 
	"FK_VERBRAUCHSMATERIAL" NUMBER, 
	"CREATED_BY" VARCHAR2(4000 CHAR), 
	"CREATED_AT" DATE, 
	"MODIFIED_BY" VARCHAR2(4000 CHAR), 
	"MODIFIED_AT" DATE
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table T_REL_KONTAKT_KONTAKTTYP
--------------------------------------------------------

  CREATE TABLE "COMPANY"."T_REL_KONTAKT_KONTAKTTYP" 
   (	"PK_REL_KON_KONT" NUMBER, 
	"FK_KONTAKT" NUMBER, 
	"FK_KONTAKTTYP" NUMBER, 
	"CREATED_BY" VARCHAR2(4000 CHAR), 
	"CREATED_AT" DATE, 
	"MODIFIED_BY" VARCHAR2(4000 CHAR), 
	"MODIFIED_AT" DATE
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table T_REL_KONTAKTPERSON_ADRESSE
--------------------------------------------------------

  CREATE TABLE "COMPANY"."T_REL_KONTAKTPERSON_ADRESSE" 
   (	"PK_REL_KONTP_ADR" NUMBER, 
	"FK_KONTAKTPERSON" NUMBER, 
	"FK_ORG_UNIT" NUMBER, 
	"FK_ADRESSE" NUMBER, 
	"FK_KONTAKT" NUMBER, 
	"FK_GESCHAEFTSPARTNER" NUMBER, 
	"CREATED_BY" VARCHAR2(4000 CHAR), 
	"CREATED_AT" DATE, 
	"MODIFIED_BY" VARCHAR2(4000 CHAR), 
	"MODIFIED_AT" DATE
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table T_REL_KONT_BUCH_IMP_BEL
--------------------------------------------------------

  CREATE TABLE "COMPANY"."T_REL_KONT_BUCH_IMP_BEL" 
   (	"PK_REL_KONT_BUCH_IMP_BEL" NUMBER, 
	"FK_KONTO_BUCH" NUMBER, 
	"FK_IMP_BEL" NUMBER, 
	"CREATED_BY" VARCHAR2(4000 CHAR), 
	"CREATED_AT" DATE, 
	"MODIFIED_BY" VARCHAR2(4000 CHAR), 
	"MODIFIED_AT" DATE, 
	"RELEVANTER_TEILBETRAG" NUMBER
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USER01" ;
--------------------------------------------------------
--  DDL for Table T_REL_KONT_BUCH_KONT_BUCH
--------------------------------------------------------

  CREATE TABLE "COMPANY"."T_REL_KONT_BUCH_KONT_BUCH" 
   (	"PK_REL_KONT_BUCH_KONT_BUCH" NUMBER, 
	"FK_KONTO_BUCH1" NUMBER, 
	"FK_KONTO_BUCH2" NUMBER, 
	"CREATED_BY" VARCHAR2(4000 CHAR), 
	"CREATED_AT" DATE, 
	"MODIFIED_BY" VARCHAR2(4000 CHAR), 
	"MODIFIED_AT" DATE, 
	"BEMERKUNG" VARCHAR2(4000 CHAR), 
	"FK_BUCHUNGSVORGANG" NUMBER
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USER01" ;
--------------------------------------------------------
--  DDL for Table T_REL_KONT_BUCH_LEX_BUCH
--------------------------------------------------------

  CREATE TABLE "COMPANY"."T_REL_KONT_BUCH_LEX_BUCH" 
   (	"PK_REL_KONT_BUCH_LEX_BUCH" NUMBER, 
	"FK_LEX_BUCH" NUMBER, 
	"FK_MAIN_KEY" NUMBER, 
	"SOLLKONTO" NUMBER, 
	"HABENKONTO" NUMBER
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USER01" ;
--------------------------------------------------------
--  DDL for Table T_REL_KONTENPLAN_KTO_KTO_KAT
--------------------------------------------------------

  CREATE TABLE "COMPANY"."T_REL_KONTENPLAN_KTO_KTO_KAT" 
   (	"PK_REL_KONTENPLAN_KTO_KTO_KAT" NUMBER, 
	"FK_KONTENPLAN_KONTEN" NUMBER, 
	"FK_KONTENPLAN_KONTEN_KAT" NUMBER, 
	"FK_KONTENPLAN_KONTEN_KAT_GRP" NUMBER
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USER01" ;
--------------------------------------------------------
--  DDL for Table T_REL_KONTO_AUSZUG_BILD
--------------------------------------------------------

  CREATE TABLE "COMPANY"."T_REL_KONTO_AUSZUG_BILD" 
   (	"PK_KONTO_AUSZUG_BILD" NUMBER, 
	"FK_KONTO_AUSZUG" NUMBER, 
	"SEITE" NUMBER, 
	"BILD" BLOB
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USER01" 
 LOB ("BILD") STORE AS BASICFILE (
  TABLESPACE "USER01" ENABLE STORAGE IN ROW CHUNK 8192 RETENTION 
  NOCACHE LOGGING 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)) ;
--------------------------------------------------------
--  DDL for Table T_REL_KONTO_AUSZUG_GIR
--------------------------------------------------------

  CREATE TABLE "COMPANY"."T_REL_KONTO_AUSZUG_GIR" 
   (	"PK_REL_KONTO_AUSZUG_GIR" NUMBER, 
	"FK_KONTO_AUSZUG" NUMBER, 
	"FK_GIROKONTO" NUMBER, 
	"FK_MAIN_KEY" NUMBER
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USER01" ;
--------------------------------------------------------
--  DDL for Table T_REL_LAGERORT_ARTIKEL
--------------------------------------------------------

  CREATE TABLE "COMPANY"."T_REL_LAGERORT_ARTIKEL" 
   (	"PK_REL_LAGO_ART" NUMBER, 
	"FK_ARTIKEL" NUMBER, 
	"FK_LAGERORT" NUMBER, 
	"FK_PACKUNGSGRÖßE" NUMBER, 
	"MENGE" NUMBER, 
	"CREATED_BY" VARCHAR2(4000 CHAR), 
	"CREATED_AT" DATE, 
	"MODIFIED_BY" VARCHAR2(4000 CHAR), 
	"MODIFIED_AT" DATE
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table T_REL_LOCATION_ADRESSE
--------------------------------------------------------

  CREATE TABLE "COMPANY"."T_REL_LOCATION_ADRESSE" 
   (	"PK_REL_LOC_ADR" NUMBER, 
	"FK_LOCATION" NUMBER, 
	"FK_ADRESSE" NUMBER, 
	"CREATED_BY" VARCHAR2(4000 CHAR), 
	"CREATED_AT" DATE, 
	"MODIFIED_BY" VARCHAR2(4000 CHAR), 
	"MODIFIED_AT" DATE
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table T_REL_PRODUKT_ARTIKEL
--------------------------------------------------------

  CREATE TABLE "COMPANY"."T_REL_PRODUKT_ARTIKEL" 
   (	"PK_REL_PROD_ART" NUMBER, 
	"FK_PRODUKT" NUMBER, 
	"MENGE" NUMBER, 
	"FK_ARTIKEL" NUMBER, 
	"FK_REZEPT" NUMBER, 
	"CREATED_BY" VARCHAR2(4000 CHAR), 
	"CREATED_AT" DATE, 
	"MODIFIED_BY" VARCHAR2(4000 CHAR), 
	"MODIFIED_AT" DATE
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table T_REL_PRODUKT_ENTNAHME
--------------------------------------------------------

  CREATE TABLE "COMPANY"."T_REL_PRODUKT_ENTNAHME" 
   (	"PK_REL_PROD_ENT" NUMBER, 
	"FK_BELEG_PRODUKT" NUMBER, 
	"FK_ENTNAHME" NUMBER, 
	"CREATED_BY" VARCHAR2(4000 CHAR), 
	"CREATED_AT" DATE, 
	"MODIFIED_BY" VARCHAR2(4000 CHAR), 
	"MODIFIED_AT" DATE
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table T_REL_PROJEKT_LOCATION
--------------------------------------------------------

  CREATE TABLE "COMPANY"."T_REL_PROJEKT_LOCATION" 
   (	"PK_REL_PROJ_LOCATION" NUMBER, 
	"FK_PROJEKT" NUMBER, 
	"FK_LOCATION" NUMBER, 
	"CREATED_BY" VARCHAR2(4000 CHAR), 
	"CREATED_AT" DATE, 
	"MODIFIED_BY" VARCHAR2(4000 CHAR), 
	"MODIFIED_AT" DATE, 
	"ZUORDNUNGSART" VARCHAR2(4000 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USER01" ;
--------------------------------------------------------
--  DDL for Table T_REL_PROJEKT_ZAHLUNG
--------------------------------------------------------

  CREATE TABLE "COMPANY"."T_REL_PROJEKT_ZAHLUNG" 
   (	"PK_REL_PROJ_ZAHLUNG" NUMBER, 
	"FK_PROJEKT" NUMBER, 
	"FK_MAIN_KEY" NUMBER, 
	"FK_IMP_BA_BEL" NUMBER, 
	"CREATED_BY" VARCHAR2(4000 CHAR), 
	"CREATED_AT" DATE, 
	"MODIFIED_BY" VARCHAR2(4000 CHAR), 
	"MODIFIED_AT" DATE, 
	"ZUORDNUNGSART" VARCHAR2(4000 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USER01" ;
--------------------------------------------------------
--  DDL for Table T_REL_RECHNG_STUNDEN
--------------------------------------------------------

  CREATE TABLE "COMPANY"."T_REL_RECHNG_STUNDEN" 
   (	"PK_REL_RE_ST" VARCHAR2(1 BYTE), 
	"FK_RECHNUNG" VARCHAR2(1 BYTE), 
	"FK_STUNDENZETTEL" VARCHAR2(1 BYTE), 
	"CREATED_BY" VARCHAR2(4000 CHAR), 
	"CREATED_AT" DATE, 
	"MODIFIED_BY" VARCHAR2(4000 CHAR), 
	"MODIFIED_AT" DATE
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table T_REL_RECHNUNG_BELEG
--------------------------------------------------------

  CREATE TABLE "COMPANY"."T_REL_RECHNUNG_BELEG" 
   (	"PK_REL_RE_BEL" NUMBER, 
	"FK_RECHNUNG" NUMBER, 
	"FK_BELEG" NUMBER, 
	"CREATED_BY" VARCHAR2(4000 CHAR), 
	"CREATED_AT" DATE, 
	"MODIFIED_BY" VARCHAR2(4000 CHAR), 
	"MODIFIED_AT" DATE
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table T_REL_RECHNUNG_STUNDENZETTEL
--------------------------------------------------------

  CREATE TABLE "COMPANY"."T_REL_RECHNUNG_STUNDENZETTEL" 
   (	"PK_REL_RE_STDZ" NUMBER, 
	"FK_RECHNUNG" NUMBER, 
	"FK_STUNDENZETTEL" NUMBER, 
	"CREATED_BY" VARCHAR2(4000 CHAR), 
	"CREATED_AT" DATE, 
	"MODIFIED_BY" VARCHAR2(4000 CHAR), 
	"MODIFIED_AT" DATE
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table T_REL_RECHNUNG_ZAHLUNG
--------------------------------------------------------

  CREATE TABLE "COMPANY"."T_REL_RECHNUNG_ZAHLUNG" 
   (	"PK_REL_RE_ZAHL" NUMBER, 
	"FK_RECHNUNG" NUMBER, 
	"FK_MAIN_KEY" NUMBER, 
	"CREATED_BY" VARCHAR2(4000 CHAR), 
	"CREATED_AT" DATE, 
	"MODIFIED_BY" VARCHAR2(4000 CHAR), 
	"MODIFIED_AT" DATE, 
	"RELEVANTER_TEILBETRAG" NUMBER, 
	"BEMERKUNG" VARCHAR2(4000 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USER01" ;
--------------------------------------------------------
--  DDL for Table T_REL_REZEPT_ARTIKEL
--------------------------------------------------------

  CREATE TABLE "COMPANY"."T_REL_REZEPT_ARTIKEL" 
   (	"PK_REL_REZ_ART" NUMBER, 
	"FK_REZEPT" NUMBER, 
	"FK_ARTIKEL" NUMBER, 
	"MENGE" NUMBER, 
	"KOMMENTAR" VARCHAR2(4000 CHAR), 
	"CREATED_BY" VARCHAR2(4000 CHAR), 
	"CREATED_AT" DATE, 
	"MODIFIED_BY" VARCHAR2(4000 CHAR), 
	"MODIFIED_AT" DATE
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table T_REL_STEUER_LOHN_ZAHL
--------------------------------------------------------

  CREATE TABLE "COMPANY"."T_REL_STEUER_LOHN_ZAHL" 
   (	"PK_REL_STEUER_LOHN_ZAHL" NUMBER, 
	"FK_STEUER_LOHNSTEUERKARTE" NUMBER, 
	"FK_MAIN_KEY" NUMBER, 
	"CREATED_BY" VARCHAR2(4000 CHAR), 
	"CREATED_AT" DATE, 
	"MODIFIED_BY" VARCHAR2(4000 CHAR), 
	"MODIFIED_AT" DATE, 
	"RELEVANTER_TEILBETRAG" NUMBER, 
	"BEMERKUNG" VARCHAR2(4000 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USER01" ;
--------------------------------------------------------
--  DDL for Table T_REL_STEUER_MONAT_BEL
--------------------------------------------------------

  CREATE TABLE "COMPANY"."T_REL_STEUER_MONAT_BEL" 
   (	"PK_REL_BEL_STEUER_MONAT" NUMBER, 
	"FK_STEUER_MONAT" NUMBER, 
	"FK_BELEG" NUMBER
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USER01" ;
--------------------------------------------------------
--  DDL for Table T_REL_STEUER_MONAT_RECH
--------------------------------------------------------

  CREATE TABLE "COMPANY"."T_REL_STEUER_MONAT_RECH" 
   (	"PK_REL_STEUER_MONAT_RECH" NUMBER, 
	"FK_STEUER_MONAT" NUMBER, 
	"FK_RECHNUNG" NUMBER
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USER01" ;
--------------------------------------------------------
--  DDL for Table T_REL_STEUER_SATZ_GÜLT
--------------------------------------------------------

  CREATE TABLE "COMPANY"."T_REL_STEUER_SATZ_GÜLT" 
   (	"PK_REL_STEUER_SATZ_GÜLT" NUMBER, 
	"FK_STEUER_SATZ_LEX" NUMBER, 
	"FK_STEUER_SATZ" NUMBER, 
	"GÜLTIG_AB" DATE
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USER01" ;
--------------------------------------------------------
--  DDL for Table T_REL_STUNDEN_BELEG
--------------------------------------------------------

  CREATE TABLE "COMPANY"."T_REL_STUNDEN_BELEG" 
   (	"FK_STUNDENZETTEL" VARCHAR2(1 BYTE), 
	"FK_BELEG" VARCHAR2(3 BYTE), 
	"CREATED_BY" VARCHAR2(4000 CHAR), 
	"CREATED_AT" DATE, 
	"MODIFIED_BY" VARCHAR2(4000 CHAR), 
	"MODIFIED_AT" DATE
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table T_REL_STUNDENZETTEL_BELEG
--------------------------------------------------------

  CREATE TABLE "COMPANY"."T_REL_STUNDENZETTEL_BELEG" 
   (	"PK_REL_STDZ_BEL" NUMBER, 
	"FK_STUNDENZETTEL" NUMBER, 
	"FK_BELEG" NUMBER, 
	"CREATED_BY" VARCHAR2(4000 CHAR), 
	"CREATED_AT" DATE, 
	"MODIFIED_BY" VARCHAR2(4000 CHAR), 
	"MODIFIED_AT" DATE
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table T_STD
--------------------------------------------------------

  CREATE TABLE "COMPANY"."T_STD" 
   (	"PK_STD" NUMBER, 
	"FK_STD_GROUP" NUMBER, 
	"STD_NAME" VARCHAR2(4000 CHAR), 
	"STD_VALUE" VARCHAR2(4000 CHAR), 
	"COMM" VARCHAR2(4000 CHAR), 
	"VALID" NUMBER, 
	"VALID_FROM" DATE, 
	"VALID_TO" DATE, 
	"CREATED_BY" VARCHAR2(4000 CHAR), 
	"CREATED_AT" DATE, 
	"MODIFIED_BY" VARCHAR2(4000 CHAR), 
	"MODIFIED_AT" DATE
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table T_STD_GROUP
--------------------------------------------------------

  CREATE TABLE "COMPANY"."T_STD_GROUP" 
   (	"PK_STD_GROUP" NUMBER, 
	"STD_GROUP_NAME" VARCHAR2(4000 CHAR), 
	"TABLE_NAME" VARCHAR2(4000 CHAR), 
	"COL_NAME" VARCHAR2(4000 CHAR), 
	"COMM" VARCHAR2(4000 CHAR), 
	"VALID" NUMBER, 
	"VALID_FROM" DATE, 
	"VALID_TO" DATE, 
	"CREATED_BY" VARCHAR2(4000 CHAR), 
	"CREATED_AT" DATE, 
	"MODIFIED_BY" VARCHAR2(4000 CHAR), 
	"MODIFIED_AT" DATE
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table T_STEUER_KRANKENKASSE
--------------------------------------------------------

  CREATE TABLE "COMPANY"."T_STEUER_KRANKENKASSE" 
   (	"PK_STEUER_KRANKENKASSE" NUMBER, 
	"MITGLIEDSNUMMER" VARCHAR2(20 BYTE), 
	"STEUERIDENTIFIKATIONSNUMMER" NUMBER, 
	"JAHR" NUMBER, 
	"VON" VARCHAR2(20 BYTE), 
	"BIS" VARCHAR2(20 BYTE), 
	"BEITRAGSART" VARCHAR2(4000 BYTE), 
	"BETRAG" NUMBER
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USER01" ;
--------------------------------------------------------
--  DDL for Table T_STEUER_LOHN
--------------------------------------------------------

  CREATE TABLE "COMPANY"."T_STEUER_LOHN" 
   (	"KATEGORIE" VARCHAR2(4000 BYTE), 
	"WERT" VARCHAR2(4000 BYTE), 
	"FK_STEUER_LOHNSTEUERKARTE" NUMBER, 
	"PK_STEUER_LOHN" NUMBER
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USER01" ;
--------------------------------------------------------
--  DDL for Table T_STEUER_LOHNSTEUERKARTE
--------------------------------------------------------

  CREATE TABLE "COMPANY"."T_STEUER_LOHNSTEUERKARTE" 
   (	"PK_STEUER_LOHNSTEUERKARTE" NUMBER, 
	"FK_FIRMA" NUMBER, 
	"FK_JAHR" NUMBER, 
	"VON" DATE, 
	"BIS" DATE, 
	"ETIN" VARCHAR2(20 BYTE), 
	"DATUM" DATE, 
	"IDENTIFIKATIONSNUMMER" NUMBER, 
	"FK_PROJEKT" NUMBER
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USER01" ;
--------------------------------------------------------
--  DDL for Table T_STEUER_MONAT
--------------------------------------------------------

  CREATE TABLE "COMPANY"."T_STEUER_MONAT" 
   (	"PK_STEUER_MONAT" NUMBER, 
	"MONAT" NUMBER, 
	"JAHR" NUMBER
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USER01" ;
--------------------------------------------------------
--  DDL for Table T_STEUERNUMMER
--------------------------------------------------------

  CREATE TABLE "COMPANY"."T_STEUERNUMMER" 
   (	"PK_STEUERNUMMER" NUMBER, 
	"STEUERNUMMER" VARCHAR2(4000 BYTE), 
	"STEUERART" VARCHAR2(4000 BYTE), 
	"GÜLTIG_VON" DATE, 
	"GÜLTIG_BIS" DATE, 
	"BEMERKUNGEN" VARCHAR2(4000 BYTE), 
	"FINANZAMT" VARCHAR2(4000 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USER01" ;
--------------------------------------------------------
--  DDL for Table T_STEUERSATZ
--------------------------------------------------------

  CREATE TABLE "COMPANY"."T_STEUERSATZ" 
   (	"PK_STEUERSATZ" NUMBER, 
	"STEUERSATZ" NUMBER, 
	"CREATED_BY" VARCHAR2(4000 CHAR), 
	"CREATED_AT" DATE, 
	"MODIFIED_BY" VARCHAR2(4000 CHAR), 
	"MODIFIED_AT" DATE, 
	"FK_LAND" NUMBER
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table T_STEUER_SATZ_LEX
--------------------------------------------------------

  CREATE TABLE "COMPANY"."T_STEUER_SATZ_LEX" 
   (	"PK_STEUER_SATZ_LEX" NUMBER, 
	"KURZBEZEICHNUNG" VARCHAR2(20 BYTE), 
	"BEZEICHNUNG" VARCHAR2(4000 BYTE), 
	"PROZENTSATZ" NUMBER, 
	"STEUERART" VARCHAR2(4000 BYTE), 
	"UMSATZSTEUERKONTO" NUMBER, 
	"UMSATZSTEUERKONTO_N_FÄLLIG" NUMBER, 
	"V_ST_KONTO_EU" NUMBER, 
	"GÜLTIG" NUMBER, 
	"GÜLTIG_VON" DATE, 
	"GÜLTIG_BIS" DATE
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USER01" ;
--------------------------------------------------------
--  DDL for Table T_STEUER_VORANMLDG
--------------------------------------------------------

  CREATE TABLE "COMPANY"."T_STEUER_VORANMLDG" 
   (	"PK_STEUER_VORANMLDG" NUMBER, 
	"MELDEMONAT" DATE, 
	"BERICHTIGTE_ANMLDG_NR" NUMBER, 
	"BELEG_NR" NUMBER, 
	"STEUERPFL_UMSAETZE" NUMBER, 
	"ABZIEHBARE_VORSTEUERBETR" NUMBER, 
	"UMSATZSTVORAUSZLG_UEBERSCHUSS" NUMBER, 
	"SENDEDATUM" DATE, 
	"TRANSAKTIONSNUMMER" VARCHAR2(4000 CHAR), 
	"CREATED_BY" VARCHAR2(4000 CHAR), 
	"CREATED_AT" DATE, 
	"MODIFIED_BY" VARCHAR2(4000 CHAR), 
	"MODIFIED_AT" DATE
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USER01" ;
--------------------------------------------------------
--  DDL for Table T_STROMABLESUNG
--------------------------------------------------------

  CREATE TABLE "COMPANY"."T_STROMABLESUNG" 
   (	"PK_STROMABLESUNG" NUMBER, 
	"ABLESEWERT" NUMBER, 
	"ABLESEDATUM" DATE, 
	"TERMIN" DATE, 
	"VERTRAGSKONTO" VARCHAR2(20 BYTE), 
	"ZÄHLER" NUMBER, 
	"ZÄHLERVERSION" VARCHAR2(20 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USER01" ;
--------------------------------------------------------
--  DDL for Table T_STUNDENZETTEL
--------------------------------------------------------

  CREATE TABLE "COMPANY"."T_STUNDENZETTEL" 
   (	"PK_STUNDENZETTEL" NUMBER, 
	"BESCHREIBUNG" VARCHAR2(4000 CHAR), 
	"MONAT" NUMBER, 
	"JAHR" NUMBER, 
	"FK_PROJEKT" NUMBER, 
	"ZEITRAUM_VON" DATE, 
	"ZEITRAUM_BIS" DATE, 
	"ERSTELLT_AM" DATE, 
	"GEZEICHNET_AM" DATE, 
	"FK_GEZEICHNET_VON" NUMBER, 
	"STUNDENZAHL" NUMBER, 
	"GENEHMIGT_AM" DATE, 
	"EINGEREICHT_AM_PP_1" DATE, 
	"EINGEREICHT_AM_PP2" DATE, 
	"BESTÄTIGUNG_AM_PP1" DATE, 
	"BESTÄTIGUNG_AM_PP_2" DATE, 
	"KOMMENTAR" VARCHAR2(4000 CHAR), 
	"CREATED_BY" VARCHAR2(4000 CHAR), 
	"CREATED_AT" DATE, 
	"MODIFIED_BY" VARCHAR2(4000 CHAR), 
	"MODIFIED_AT" DATE
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table T_TEMP_BELEG
--------------------------------------------------------

  CREATE TABLE "COMPANY"."T_TEMP_BELEG" 
   (	"PK_BELEG" NUMBER, 
	"FK_STEUERSATZ" NUMBER, 
	"FK_BELEGART" NUMBER, 
	"FK_VERWENDUNGSZWECK" NUMBER, 
	"FK_ARBEITSTAG" NUMBER, 
	"FK_PROJEKT" NUMBER, 
	"FK_LEHRGANG" NUMBER, 
	"FK_EINKAUF" NUMBER, 
	"BELEG" VARCHAR2(4000 CHAR), 
	"BETRAG_BRUTTO" NUMBER, 
	"DATUM" DATE, 
	"VON" DATE, 
	"BIS" DATE, 
	"AZ_O_PAUSE" NUMBER, 
	"AZ_M_PAUSE" NUMBER, 
	"ANWESENHEITSZEIT" NUMBER, 
	"PARKZEIT" NUMBER, 
	"AZ_MANUELL_GEPFLEGT" NUMBER, 
	"KOMMENTAR" VARCHAR2(4000 CHAR), 
	"BETRAG_NETTO" NUMBER, 
	"FK_IMP_BEL_NR" NUMBER, 
	"FK_IMP_NO" NUMBER, 
	"EXT_RENR" VARCHAR2(4000 CHAR), 
	"EXT_AUFTRAGSNR" VARCHAR2(4000 CHAR), 
	"EXT_LIEFERSCHEINNR" VARCHAR2(4000 CHAR), 
	"EXT_LEISTUNGSDATUM" VARCHAR2(4000 CHAR), 
	"EXT_RECHNUNGSDATUM" VARCHAR2(4000 CHAR), 
	"EXT_AUFTRAGSDATUM" VARCHAR2(4000 CHAR), 
	"FK_OFFEN" NUMBER, 
	"FK_VORSTEUERRELEVANT" NUMBER, 
	"FK_VORSTEUERPFLEGE" NUMBER, 
	"FK_RECHNUNGSERSTELLUNG" NUMBER, 
	"FK_RECHNUNG_ERSTELLT" NUMBER, 
	"FK_BANKBELEG" NUMBER, 
	"CREATED_BY" VARCHAR2(4000 CHAR), 
	"CREATED_AT" DATE, 
	"MODIFIED_BY" VARCHAR2(4000 CHAR), 
	"MODIFIED_AT" DATE, 
	"MWST" NUMBER, 
	"FK_LIEFERART" NUMBER, 
	"FK_EINKOMMENSTEUERRELEVANT" NUMBER, 
	"FK_UNTERNEHMENSSTEUERRELEVANT" NUMBER, 
	"FK_BESTELLNR" VARCHAR2(4000 BYTE), 
	"FK_BESTELLTYP" NUMBER, 
	"FK_ABRECHNUNGSZEITRAUM" NUMBER, 
	"FK_FREMDWAEHRUNG" NUMBER, 
	"FRMDW_BETRAG_NETTO" NUMBER, 
	"FRMDW_STSATZ" NUMBER, 
	"FRMDW_MWST" NUMBER, 
	"FRMDW_BETRAG_BRUTTO" NUMBER, 
	"BUCHUNGSTAG" DATE, 
	"FK_KONTO" NUMBER, 
	"KUMULIERTER_BETRAG_NEG" NUMBER, 
	"KUMULIERTER_BETRAG" NUMBER, 
	"ENDBETRAG" NUMBER, 
	"STARTBETRAG" NUMBER, 
	"BETRAG_NEG" NUMBER, 
	"FK_BELEGWAEHRUNG" NUMBER, 
	"FK_UMSATZART" NUMBER, 
	"EINZELBETRAG_NEG" NUMBER
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USER01" ;
--------------------------------------------------------
--  DDL for Table T_TERMIN
--------------------------------------------------------

  CREATE TABLE "COMPANY"."T_TERMIN" 
   (	"PK_TERMIN" NUMBER, 
	"TERMIN" VARCHAR2(20 BYTE), 
	"DATUM" DATE, 
	"CREATED_BY" VARCHAR2(4000 CHAR), 
	"CREATED_AT" DATE, 
	"MODIFIED_BY" VARCHAR2(4000 CHAR), 
	"MODIFIED_AT" DATE
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table T_UMSATZART
--------------------------------------------------------

  CREATE TABLE "COMPANY"."T_UMSATZART" 
   (	"PK_UMSATZART" NUMBER, 
	"UMSATZART" VARCHAR2(4000 CHAR), 
	"CREATED_BY" VARCHAR2(4000 CHAR), 
	"CREATED_AT" DATE, 
	"MODIFIED_BY" VARCHAR2(4000 CHAR), 
	"MODIFIED_AT" DATE
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USER01" ;
--------------------------------------------------------
--  DDL for Table T_UMTAUSCHKURS
--------------------------------------------------------

  CREATE TABLE "COMPANY"."T_UMTAUSCHKURS" 
   (	"PK_T_UMTAUSCHKURS" NUMBER, 
	"KURS" NUMBER, 
	"DAT" DATE, 
	"VALID" NUMBER, 
	"VALID_FROM" DATE, 
	"VALID_TO" DATE, 
	"CREATED_BY" VARCHAR2(4000 CHAR), 
	"CREATED_AT" DATE, 
	"MODIFIED_BY" VARCHAR2(4000 CHAR), 
	"MODIFIED_AT" DATE
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USER01" ;
--------------------------------------------------------
--  DDL for Table T_VERBRAUCHSMATERIAL
--------------------------------------------------------

  CREATE TABLE "COMPANY"."T_VERBRAUCHSMATERIAL" 
   (	"PK_VERBRAUCHSMATERIAL" NUMBER, 
	"VERBRAUCHSMATERIAL" VARCHAR2(4000 CHAR), 
	"ANSCHAFFUNGSDATUM" DATE, 
	"ANSCHAFFUNGSJAHR" NUMBER, 
	"CREATED_BY" VARCHAR2(4000 CHAR), 
	"CREATED_AT" DATE, 
	"MODIFIED_BY" VARCHAR2(4000 CHAR), 
	"MODIFIED_AT" DATE, 
	"FK_VERBR_MAT_TYP" NUMBER, 
	"FK_M_VERBR_MAT" NUMBER, 
	"COMM" VARCHAR2(4000 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table T_VERBRAUCHSMAT_TYP
--------------------------------------------------------

  CREATE TABLE "COMPANY"."T_VERBRAUCHSMAT_TYP" 
   (	"PK_VERBRAUCHSMAT_TYP" NUMBER, 
	"VERBR_MAT_NAME" VARCHAR2(4000 CHAR), 
	"CREATED_BY" VARCHAR2(4000 CHAR), 
	"CREATED_AT" DATE, 
	"MODIFIED_BY" VARCHAR2(4000 CHAR), 
	"MODIFIED_AT" DATE
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table T_VERWENDUNGSZWECK
--------------------------------------------------------

  CREATE TABLE "COMPANY"."T_VERWENDUNGSZWECK" 
   (	"PK_VERWENDUNGSZWECK" NUMBER, 
	"VERWENDUNGSZWECK" VARCHAR2(4000 BYTE), 
	"CREATED_BY" VARCHAR2(4000 CHAR), 
	"CREATED_AT" DATE, 
	"MODIFIED_BY" VARCHAR2(4000 CHAR), 
	"MODIFIED_AT" DATE
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table T_WAEHRUNG
--------------------------------------------------------

  CREATE TABLE "COMPANY"."T_WAEHRUNG" 
   (	"PK_WAEHRUNG" NUMBER, 
	"WAEHRUNG" VARCHAR2(20 BYTE), 
	"WAEHRUNG_LANG" VARCHAR2(20 BYTE), 
	"COMM" VARCHAR2(4000 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USER01" ;
--------------------------------------------------------
--  DDL for Table T_WARENBESTAND
--------------------------------------------------------

  CREATE TABLE "COMPANY"."T_WARENBESTAND" 
   (	"PK_WARENBESTAND" NUMBER, 
	"MENGE" NUMBER, 
	"FK_ARTIKEL" NUMBER, 
	"DATUM" DATE, 
	"MINDESTMENGE" NUMBER, 
	"GÜLTIG_VON" DATE, 
	"GÜLTIG_BIS" DATE, 
	"CREATED_BY" VARCHAR2(4000 CHAR), 
	"CREATED_AT" DATE, 
	"MODIFIED_BY" VARCHAR2(4000 CHAR), 
	"MODIFIED_AT" DATE
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table T_WARENBEWEGUNG
--------------------------------------------------------

  CREATE TABLE "COMPANY"."T_WARENBEWEGUNG" 
   (	"PK_WARENBEWEGUNG" NUMBER, 
	"FK_WARENEINGANG" NUMBER, 
	"FK_WARENENTNAHME" NUMBER, 
	"FK_SOLLBESTAND" NUMBER, 
	"CREATED_BY" VARCHAR2(4000 CHAR), 
	"CREATED_AT" DATE, 
	"MODIFIED_BY" VARCHAR2(4000 CHAR), 
	"MODIFIED_AT" DATE
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table T_WARENEINGANG
--------------------------------------------------------

  CREATE TABLE "COMPANY"."T_WARENEINGANG" 
   (	"PK_WARENEINGANG" NUMBER, 
	"MENGE" NUMBER, 
	"FK_ARTIKEL" NUMBER, 
	"DATUM" DATE, 
	"FK_BELEG" NUMBER, 
	"CREATED_BY" VARCHAR2(4000 CHAR), 
	"CREATED_AT" DATE, 
	"MODIFIED_BY" VARCHAR2(4000 CHAR), 
	"MODIFIED_AT" DATE
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table T_WARENENTNAHME
--------------------------------------------------------

  CREATE TABLE "COMPANY"."T_WARENENTNAHME" 
   (	"PK_WARENENTNAHME" NUMBER, 
	"FK_ENTNAHME" NUMBER, 
	"MENGE" NUMBER, 
	"FK_ARTIKEL" NUMBER, 
	"BEMERKUNG" VARCHAR2(4000 CHAR), 
	"FK_REZEPT" NUMBER, 
	"FK_PRODUKT" NUMBER, 
	"CREATED_BY" VARCHAR2(4000 CHAR), 
	"CREATED_AT" DATE, 
	"MODIFIED_BY" VARCHAR2(4000 CHAR), 
	"MODIFIED_AT" DATE
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for View V_ADRESSE
--------------------------------------------------------

  CREATE OR REPLACE FORCE VIEW "COMPANY"."V_ADRESSE" ("PK_ADRESSE", "STRASSE", "HSNR", "PLZ", "ORT", "OT", "LAND", "BESCHREIBUNG", "ADR") AS 
  select pk_adresse, strasse, hsnr, plz, ort,ot, land, beschreibung, strasse || ' ' || hsnr || ', ' || plz || ' ' || ort || ' (' || ot || ')' || ', ' || land adr
from  t_adresse ad 
  left join t_plz_ort plz on plz.pk_plz_ort = ad.fk_plz_ort
  left join t_ort ort on plz.fk_ort = ort.pk_ort
  left join t_land land on ort.fk_land = land.pk_land
;
--------------------------------------------------------
--  DDL for View V_ALL_KONT_BUCH
--------------------------------------------------------

  CREATE OR REPLACE FORCE VIEW "COMPANY"."V_ALL_KONT_BUCH" ("FK_MAIN_KEY") AS 
  select fk_main_key
from "KTO_Girokonto"
union
select fk_main_key
from "KTO_Kreditkarte"
union
select fk_main_key
from "KTO_Tagesgeldkonto"
union
select fk_main_key
from "KTO_Paypal"
;
--------------------------------------------------------
--  DDL for View V_BELEGDAT
--------------------------------------------------------

  CREATE OR REPLACE FORCE VIEW "COMPANY"."V_BELEGDAT" ("PK_BELEG", "BELEG", "BETRAG_BRUTTO", "DATUM", "VON", "BIS", "AZ_O_PAUSE", "AZ_M_PAUSE", "ANWESENHEITSZEIT", "PARKZEIT", "AZ_MANUELL_GEPFLEGT", "KOMMENTAR", "BETRAG_NETTO", "FK_IMP_BEL_NR", "FK_IMP_NO", "EXT_RENR", "EXT_AUFTRAGSNR", "EXT_LIEFERSCHEINNR", "EXT_LEISTUNGSDATUM", "EXT_RECHNUNGSDATUM", "EXT_AUFTRAGSDATUM", "FK_OFFEN", "FK_VORSTEUERRELEVANT", "FK_VORSTEUERPFLEGE", "FK_RECHNUNGSERSTELLUNG", "FK_RECHNUNG_ERSTELLT", "FK_BANKBELEG", "MWST", "FK_LIEFERART", "FK_EINKOMMENSTEUERRELEVANT", "FK_UNTERNEHMENSSTEUERRELEVANT", "FK_BESTELLNR", "FK_BESTELLTYP", "FK_ABRECHNUNGSZEITRAUM", "FK_FREMDWAEHRUNG", "FRMDW_BETRAG_NETTO", "FRMDW_STSATZ", "FRMDW_MWST", "FRMDW_BETRAG_BRUTTO") AS 
  select PK_BELEG,
       BELEG || case when fk_feiertag = 1 then 'Feiertag' end || case when von is not null then ' von ' || to_char(von,'HH24:MI') || ' bis ' || to_char(bis,'HH24:MI') end || ' (' || pk_beleg || ')' beleg,
       BETRAG_BRUTTO,
       nvl(tb.DATUM, ta.datum) datum,
       VON,
       BIS,
       AZ_O_PAUSE,
       AZ_M_PAUSE,
       ANWESENHEITSZEIT,
       PARKZEIT,
       AZ_MANUELL_GEPFLEGT,
       KOMMENTAR,
       BETRAG_NETTO,
       FK_IMP_BEL_NR,
       FK_IMP_NO,
       EXT_RENR,
       EXT_AUFTRAGSNR,
       EXT_LIEFERSCHEINNR,
       EXT_LEISTUNGSDATUM,
       EXT_RECHNUNGSDATUM,
       EXT_AUFTRAGSDATUM,
       FK_OFFEN,
       FK_VORSTEUERRELEVANT,
       FK_VORSTEUERPFLEGE,
       FK_RECHNUNGSERSTELLUNG,
       FK_RECHNUNG_ERSTELLT,
       FK_BANKBELEG,
       MWST,
       FK_LIEFERART,
       FK_EINKOMMENSTEUERRELEVANT,
       FK_UNTERNEHMENSSTEUERRELEVANT,
       FK_BESTELLNR,
       FK_BESTELLTYP,
       FK_ABRECHNUNGSZEITRAUM,
       FK_FREMDWAEHRUNG,
       FRMDW_BETRAG_NETTO,
       FRMDW_STSATZ,
       FRMDW_MWST,
       FRMDW_BETRAG_BRUTTO
  from T_BELEG tb
   left join t_arbeitstage ta on tb.fk_arbeitstag = ta.pk_arbeitstage
;
--------------------------------------------------------
--  DDL for View V_BEL_RE
--------------------------------------------------------

  CREATE OR REPLACE FORCE VIEW "COMPANY"."V_BEL_RE" ("CHILD", "PARENT", "TXT") AS 
  select 'B' || pK_rechnung child,
'A' || 0 parent,
pk_rechnung || ' ' || rechnung  as txt
from t_rechnung
union
select 'B' || 0 child,
'A' || 0 parent,
'Beleg ohne Rechnung'
from dual
union
select 'C1' || pk_beleg child,
'B' || nvl(fk_rechnung,0) parent,
pk_rechnung || ' Beleg: ' || pk_beleg || ' ' || beleg || ' ' ||  belegart || ' ' || datum || ' ' || rechnung || ' ' || rechnungsdatum || ' ' || rechnungsnummer || ' ' || rechnungstyp
from t_beleg tbel
 left join t_belegart tbela on tbel.fk_belegart = tbela.pk_belegart
 left join t_rel_rechnung_beleg trrebe on trrebe.fk_beleg = tbel.pk_beleg
 left join t_rechnung tre on trrebe.fk_rechnung = tre.pk_rechnung
 left join t_rechnungstyp tret on tre.fk_rechnungstyp = tret.pk_rechnungstyp
union
select 'C2' || pk_stundenzettel child,
'B' || nvl(fk_rechnung,0) parent,
pk_rechnung || ' Stundenzettel: ' || pk_stundenzettel || ' ' ||  beschreibung 
from t_stundenzettel tstdz
 left join t_rel_rechnung_stundenzettel tstdzb on tstdzb.fk_stundenzettel = tstdz.pk_stundenzettel
 left join t_rechnung tre on tstdzb.fk_rechnung = tre.pk_rechnung
 left join t_rechnungstyp tret on tre.fk_rechnungstyp = tret.pk_rechnungstyp
;
--------------------------------------------------------
--  DDL for View V_BUCHUNG
--------------------------------------------------------

  CREATE OR REPLACE FORCE VIEW "COMPANY"."V_BUCHUNG" ("PK_REL_KONT_BUCH_KONT_BUCH", "FK_KONTO_BUCH1", "FK_KONTO_BUCH2", "CREATED_BY", "CREATED_AT", "MODIFIED_BY", "MODIFIED_AT", "BEMERKUNG", "FK_BUCHUNGSVORGANG", "VON_FK_MAIN_KEY", "VON_ID", "VON_BUCHUNGSTAG", "VON_BETRAG", "VON_BUCHUNGSTEXT", "VON_FK_KATEGORIE", "VON_FK_VERWENDUNGSZWECK", "VON_FK_KONTOTYP", "VON_FK_BUCHUNGSTAG", "VON_FK_WERTSTELLUNG", "VON_KONTOTYP", "VON_KATEGORIE", "VON_VERWENDUNGSZWECK", "NACH_FK_MAIN_KEY", "NACH_ID", "NACH_BUCHUNGSTAG", "NACH_BETRAG", "NACH_BUCHUNGSTEXT", "NACH_FK_KATEGORIE", "NACH_FK_VERWENDUNGSZWECK", "NACH_FK_KONTOTYP", "NACH_FK_BUCHUNGSTAG", "NACH_FK_WERTSTELLUNG", "NACH_KONTOTYP", "NACH_KATEGORIE", "NACH_VERWENDUNGSZWECK") AS 
  select buch."PK_REL_KONT_BUCH_KONT_BUCH",buch."FK_KONTO_BUCH1",buch."FK_KONTO_BUCH2",buch."CREATED_BY",buch."CREATED_AT",buch."MODIFIED_BY",buch."MODIFIED_AT",buch."BEMERKUNG",buch.fk_buchungsvorgang,
--von
von.FK_MAIN_KEY von_fk_main_key, 
von.ID von_id, 
von."Buchungstag" von_Buchungstag, 
von."Betrag" von_betrag,
von.BUCHUNGSTEXT von_buchungstext, 
von."FK_Kategorie" von_fk_kategorie, 
von."FK_Verwendungszweck" von_fk_Verwendungszweck,
von."FK_Kontotyp" von_fk_kontotyp,
von.FK_BUCHUNGSTAG von_fk_buchungstag,
von.FK_WERTSTELLUNG von_fk_wertstellung,
von."Kontotyp" von_kontotyp,
von.Kategorie von_Kategorie,
von.verwendungszweck von_verwendungszweck,
--nach
nach.FK_MAIN_KEY nach_fk_main_key, 
nach.ID nach_id, 
nach."Buchungstag" nach_Buchungstag, 
nach."Betrag" nach_betrag, 
nach.BUCHUNGSTEXT nach_Buchungstext, 
nach."FK_Kategorie" nach_fk_kategorie , 
nach."FK_Verwendungszweck" nach_fk_verwendungszweck, 
nach."FK_Kontotyp" nach_fk_kontotyp, 
nach.FK_BUCHUNGSTAG nach_fk_buchungstag, 
nach.FK_WERTSTELLUNG nach_fk_wertstellung,
nach."Kontotyp" nach_kontotyp,
nach.Kategorie nach_kategorie,
nach.verwendungszweck nach_verwendungszweck




from t_rel_kont_buch_kont_buch buch
  left join v_konten_zus von on von.fk_main_key = buch.fk_konto_buch1
  left join v_konten_zus nach on nach.fk_main_key = buch.fk_konto_buch2
;
--------------------------------------------------------
--  DDL for View V_BUCHUNGSTATUS
--------------------------------------------------------

  CREATE OR REPLACE FORCE VIEW "COMPANY"."V_BUCHUNGSTATUS" ("TYP", "KTONR", "BELEGDATUM", "BUCHUNGSDATUM", "BUCHUNGSPERIODE", "BELEGNUMMERNKREIS", "BELEGNUMMER", "BUCHUNGSTEXT", "BUCHUNGSBETRAG", "SOLLKONTO", "HABENKONTO", "STEUERSCHLÜSSEL", "KOSTENSTELLE", "KOSTENTRÄGER", "BUCHUNGSBETRAG_EURO", "WÄHRUNG", "ZUSATZANGABEN", "OK", "STORNO", "PK_LEX", "BEMERKUNGEN", "DATUM_OK", "WERT", "Kontotyp", "LSOLLKONTO", "FK_MAIN_KEY", "VERWENDUNGSZWECK", "KATEGORIE") AS 
  with kto as (select sollkonto ktonr from t_LEX GROUP  by sollkonto
                  union select habenkonto from t_lex group by habenkonto)
select 'Sollkonto' typ, kto."KTONR" , t_lex."BELEGDATUM",t_lex."BUCHUNGSDATUM",t_lex."BUCHUNGSPERIODE",t_lex."BELEGNUMMERNKREIS",t_lex."BELEGNUMMER",t_lex."BUCHUNGSTEXT",t_lex."BUCHUNGSBETRAG",t_lex."SOLLKONTO",t_lex."HABENKONTO",t_lex."STEUERSCHLÜSSEL",t_lex."KOSTENSTELLE",t_lex."KOSTENTRÄGER",t_lex."BUCHUNGSBETRAG_EURO",t_lex."WÄHRUNG",t_lex."ZUSATZANGABEN",t_lex."OK",t_lex."STORNO",t_lex."PK_LEX",t_lex."BEMERKUNGEN",t_lex."DATUM_OK" , -Buchungsbetrag wert, ktozus."Kontotyp", case when t_lex.sollkonto = 1700 then 'Girokonto' when t_lex.sollkonto = 1710 then 'Kreditkarte' end lsollkonto, t_lex.fk_main_key, verwendungszweck, kategorie
from t_lex
 left  join kto on  kto.ktonr = t_lex.sollkonto
  left join (select case when "Kontotyp" = 'Girokonto' then 1700 when "Kontotyp"='Kreditkarte' then 1710 else null end as bktonr, kto.*  from v_konten_zus kto ) ktozus on ktozus.fk_buchung_steuer = t_lex.belegnummer
 union
 select  'Habenkonto' typ, kto."KTONR" , t_lex."BELEGDATUM",t_lex."BUCHUNGSDATUM",t_lex."BUCHUNGSPERIODE",t_lex."BELEGNUMMERNKREIS",t_lex."BELEGNUMMER",t_lex."BUCHUNGSTEXT",t_lex."BUCHUNGSBETRAG",t_lex."SOLLKONTO",t_lex."HABENKONTO",t_lex."STEUERSCHLÜSSEL",t_lex."KOSTENSTELLE",t_lex."KOSTENTRÄGER",t_lex."BUCHUNGSBETRAG_EURO",t_lex."WÄHRUNG",t_lex."ZUSATZANGABEN",t_lex."OK",t_lex."STORNO",t_lex."PK_LEX",t_lex."BEMERKUNGEN",t_lex."DATUM_OK" ,Buchungsbetrag wert, ktozus."Kontotyp", case when t_lex.habenkonto = 1700 then 'Girokonto' when t_lex.habenkonto = 1710 then 'Kreditkarte' end lsollkonto,t_lex. fk_main_key, verwendungszweck, Kategorie
from t_lex
 left join kto on kto.ktonr = t_lex.habenkonto
 left join (select case when "Kontotyp" = 'Girokonto' then 1700 when "Kontotyp"='Kreditkarte' then 1710 else null end as bktonr, kto.*  from v_konten_zus kto ) ktozus on ktozus.fk_buchung_steuer = t_lex.belegnummer
;
--------------------------------------------------------
--  DDL for View V_CHECK_GIR
--------------------------------------------------------

  CREATE OR REPLACE FORCE VIEW "COMPANY"."V_CHECK_GIR" ("Buchungstag", "BUCHUNGSTEXT", "Betrag") AS 
  select "Buchungstag", Buchungstext, "Betrag"
from "KTO_Girokonto"
--where "Unternehmen" not in ('1.50% AUSLANDSEINSATZENTGELT','1.75% AUSLANDSEINSATZENTGELT')
group by "Buchungstag", Buchungstext, "Betrag"
having count(*) >1
;
--------------------------------------------------------
--  DDL for View V_CHECK_KRED
--------------------------------------------------------

  CREATE OR REPLACE FORCE VIEW "COMPANY"."V_CHECK_KRED" ("Buchungstag", "Unternehmen", "Betrag") AS 
  select "Buchungstag", "Unternehmen", "Betrag"
from "KTO_Kreditkarte"
where "Unternehmen" not in ('1.50% AUSLANDSEINSATZENTGELT','1.75% AUSLANDSEINSATZENTGELT')
group by "Buchungstag", "Unternehmen", "Betrag"
having count(*) >1
;
--------------------------------------------------------
--  DDL for View V_CNT_OK_LEX
--------------------------------------------------------

  CREATE OR REPLACE FORCE VIEW "COMPANY"."V_CNT_OK_LEX" ("SOLLKONTO", "CNT_STORNO", "CNT_OK") AS 
  with cnt as (select sollkonto, sum(case when storno = 0 then 1 else 0 end) cnt_storno, sum(case when ok = 1 and storno = 0 then 1 else 0 end) cnt_ok
from t_lex

group by sollkonto)
select sollkonto, cnt_storno, cnt_ok
from cnt
where cnt_storno = cnt_ok
;
--------------------------------------------------------
--  DDL for View V_GESCHAEFTSPARTNER
--------------------------------------------------------

  CREATE OR REPLACE FORCE VIEW "COMPANY"."V_GESCHAEFTSPARTNER" ("PK_GESCHAEFTSPARTNER", "GESCHAEFTSPARTNER", "FK_GESCHAEFTSPARTNERTYP", "PK_ADRESSE", "STRASSE", "HSNR", "PLZ", "ORT", "LAND", "BESCHREIBUNG", "PK_REL_GP_KONT") AS 
  select pk_geschaeftspartner, geschaeftspartner, fk_geschaeftspartnertyp, pk_adresse, strasse, hsnr, plz, ort, land, beschreibung,PK_REL_GP_KONT
from t_geschaeftspartner gep
  left join T_REL_GESCHAEFTSP_KONT kon_adr on kon_adr.fk_geschaeftspartner = gep.pk_geschaeftspartner
  left join v_adresse ad on ad.pk_adresse = kon_adr.fk_adresse
;
--------------------------------------------------------
--  DDL for View V_GROUPING_SETS
--------------------------------------------------------

  CREATE OR REPLACE FORCE VIEW "COMPANY"."V_GROUPING_SETS" ("RECHNUNGSDATUM", "FK_PROJEKT", "SUM_RECH", "AVG_RECH", "MIN_RECH", "MAX_RECH") AS 
  select 
rechnungsdatum, fk_projekt, sum(rechnungsbetrag_netto) sum_rech, avg(rechnungsbetrag_netto) avg_rech, min(rechnungsbetrag_netto) min_rech, max(rechnungsbetrag_netto) max_rech
from t_rechnung
group by  
grouping sets (rechnungsdatum, fk_projekt), ( fk_projekt), ( )
order by 1
;
--------------------------------------------------------
--  DDL for View V_IMP_BEL_ZUS
--------------------------------------------------------

  CREATE OR REPLACE FORCE VIEW "COMPANY"."V_IMP_BEL_ZUS" ("ART", "FK_IMP_BA_BEL", "PK_IMP_BA_ALLG_BEL", "BEZEICHNUNG", "KENNZEICHEN", "DATUM", "DATUM_VERGEHEN", "FK_ARBEITSTAG", "FK_BUCHUNG", "BETRAG", "WÄHRUNG", "STEUERSATZ", "MWST_BETRAG", "NETTO", "ZAHLUNGSART", "BILD", "BILD1", "VERWENDUNGSZWECK", "FK_INVENTAR", "FK_PROJEKT", "WÄHRUNG_BETRAG", "FK_KATEGORIE", "Kategorie", "PROJEKT", "INVENTAR", "FK_BELEG_ABLAGE") AS 
  with bel as (
  SELECT
        'ALLG_BELEG' art,
        fk_imp_ba_bel,
        pk_imp_ba_allg_bel,
        bezeichnung,
        NULL kennzeichen,
        datum,
        NULL datum_vergehen,
        fk_arbeitstag,
        fk_buchung,
        TO_CHAR(betrag) betrag,
        währung,
        TO_CHAR(steuersatz) steuersatz,
        NULL mwst_betrag,
        NULL netto,
        zahlungsart,
        bild,
        bild1,
        verwendungszweck,
        fk_inventar,
        fk_projekt,
        währung_betrag,
        fk_kategorie,
        fk_beleg_ablage
    FROM
        imp_ba_allg_bel
    UNION all
    SELECT
        'AUTOERSATZTEILE' art,
        fk_imp_ba_bel,
        pk_imp_ba_autoersatzteile,
        geschäft,
        kennzeichen,
        datum_uhrzeit,
        NULL,
        fk_arbeitstag,
        fk_buchung,
        TO_CHAR(betrag),
        NULL währung,
        steuersatz,
        NULL mwst_betrag,
        NULL netto,
      zahlungsart,
        null bild,
        null bild1,
        verwendungszweck,
        fk_inventar,
        null fk_projekt,
        null währung_betrag,
        null fk_kategorie,
        fk_beleg_ablage
    FROM
        imp_ba_autoersatzteile
    UNION all
    SELECT
        'BUSSGELDER' art,
        fk_imp_ba_bel,
        pk_imp_ba_bussgelder,
        ort,
        kennzeichen,
        datum,
        datum_vergehen,
        fk_arbeitstag,
        fk_buchung,
        TO_CHAR(betrag),
        NULL währung,
        NULL steuersatz,
        NULL mwst_betrag,
        NULL netto,
        zahlungsart,
        null bild,
        null bild1,
        verwendungszweck,
        fk_inventar,
        fk_projekt,
        null währung_betrag,
        null fk_kategorie,
        null fk_beleg_ablage
    FROM
        imp_ba_bussgelder
    UNION all
    SELECT
        'CARMIETE' art,
        fk_imp_ba_bel,
        pk_imp_ba_carmiete,
        land
        || ' '
        || bemerkung,
        NULL kennzeichen,
        TO_CHAR(datum),
        NULL datum_vergehen,
        fk_arbeitstag,
        fk_buchung,
        TO_CHAR(betrag),
        NULL währung,
        NULL steuersatz,
        NULL mwst_betrag,
        NULL netto,
        zahlungsart,        
        null bild,
        null bild1,
        null verwendungszweck,
        null fk_inventar,
        null fk_projekt,
        null währung_betrag,
        null fk_kategorie,
        null fk_beleg_ablage
    FROM
        imp_ba_carmiete
    UNION all
    SELECT
        'COWORKING' art,
        fk_imp_ba_bel,
        pk_imp_ba_coworking,
        ort,
        NULL kennzeichen,
        TO_CHAR(datum),
        NULL datum_vergehen,
        fk_arbeitstag,
        fk_buchung,
        TO_CHAR(betrag),
        NULL währung,
        NULL steuersatz,
        NULL mwst_betrag,
        NULL netto,
        null zahlungsart,
        null bild,
        null bild1,
        null verwendungszweck,
        null fk_inventar,
        fk_projekt,
        null währung_betrag,
        null fk_kategorie,
        null fk_beleg_ablage
    FROM
        imp_ba_coworking
    UNION all
    SELECT
        'ELEKTRONIK' art,
        fk_imp_ba_bel,
        pk_imp_ba_elektronik,
        bezeichnung,
        NULL kennzeichen,
        datum,
        NULL datum_vergehen,
        fk_arbeitstag,
        fk_buchung,
        TO_CHAR(betrag),
        NULL währung,
        NULL steuersatz,
        NULL mwst_betrag,
        NULL netto,
        null zahlungsart,
        null bild,
        null bild1,
        null  verwendungszweck,
        fk_inventar,
        null fk_projekt,
        währung_betrag,
        null fk_kategorie,
        fk_beleg_ablage
    FROM
        imp_ba_elektronik
    UNION all
    SELECT
        'GRENZBELEGE' art,
        fk_imp_ba_bel,
        pk_imp_ba_grenzbelege,
        bezeichnung,
        NULL kennzeichen,
        datum,
        NULL datum_vergehen,
        fk_arbeitstag,
        fk_buchung,
        TO_CHAR(betrag),
        NULL währung,
        NULL steuersatz,
        NULL mwst_betrag,
        NULL netto,
        null zahlungsart,
        null bild,
        null bild1,
        null verwendungszweck,
        fk_inventar,
        null fk_projekt,
        währung_betrag,
        null fk_kategorie,
        fk_beleg_ablage
    FROM
        imp_ba_grenzbelege
    UNION all
    SELECT
        'HEIZUNGSABRECHNUNG' art,
        fk_imp_ba_bel,
        pk_imp_ba_heizungsabrechnung,
        abrechnungszeitraum,
        NULL kennzeichen,
        abrechnungsdatum,
        NULL datum_vergehen,
        fk_arbeitstag,
        fk_buchung,
        TO_CHAR(nachzahlungsbetrag),
        NULL währung,
        NULL steuersatz,
        NULL mwst_betrag,
        NULL netto,
        null zahlungsart,
        null bild,
        null bild1,
        null verwendungszweck,
        null fk_inventar,
        null fk_projekt,
        null währung_betrag,
        null fk_kategorie,
        null fk_beleg_ablage
    FROM
        imp_ba_heizungsabrechnung
    UNION all
    SELECT
        'HOTELRECHNUNGEN' art,
        fk_imp_ba_bel,
        pk_imp_ba_hotelrechnungen,
        hotel,
        NULL kennzeichen,
        datum,
        NULL datum_vergehen,
        fk_arbeitstag,
        fk_buchung,
        TO_CHAR(betrag),
        NULL währung,
        NULL steuersatz,
        NULL mwst_betrag,
        NULL netto,
        null zahlungsart,
        bild,
        bild1,
        verwendungszweck,
        null fk_inventar,
        fk_projekt,
        währung_betrag,
        null fk_kategorie,
        null fk_beleg_ablage
    FROM
        imp_ba_hotelrechnungen
    UNION all
    SELECT
        'KFZ_VERSICHERUNGEN' art,
        fk_imp_ba_bel,
        pk_imp_ba_kfz_versicherungen,
        bezeichnung,
        NULL kennzeichen,
        datum,
        NULL datum_vergehen,
        fk_arbeitstag,
        fk_buchung,
        TO_CHAR(betrag),
        NULL währung,
        NULL steuersatz,
        NULL mwst_betrag,
        NULL netto,
        null zahlungsart,
        null bild, 
        null bild1,
        null verwendungszweck,
        fk_inventar,
        null fk_projekt,
        währung_betrag,
        null fk_kategorie,
        null fk_beleg_ablage
    FROM
        imp_ba_kfz_versicherungen
    UNION all
    SELECT
        'KRANKENKASSE' art,
        fk_imp_ba_bel,
        pk_imp_ba_krankenkasse,
        buchungstext,
        NULL kennzeichen,
        datum,
        NULL datum_vergehen,
        fk_arbeitstag,
        fk_buchung,
        TO_CHAR(betrag),
        NULL währung,
        NULL steuersatz,
        NULL mwst_betrag,
        NULL netto,
        null zahlungsart,
        bild,
        bild1,
        verwendungszweck,
        null fk_inventar,
        null fk_projekt,
        null währung_betrag,
        null fk_kategorie,
        null fk_beleg_ablage
    FROM
        imp_ba_krankenkasse
    UNION all
    SELECT
        'OEFFENTL_TICKKETS' art,
        fk_imp_ba_bel,
        pk_imp_ba_oeffentl_tickets,
        verkehrsverbund,
        NULL kennzeichen,
        datum,
        NULL datum_vergehen,
        fk_arbeitstag,
        fk_buchung,
        TO_CHAR(betrag),
        NULL währung,
        NULL steuersatz,
        NULL mwst_betrag,
        NULL netto,
        null zahlungsart,
        bild,
        null bild1,
        verwendungszweck,
        null fk_inventar,
        fk_projekt,
        null währung_betrag,
        null fk_kategorie,
        fk_beleg_ablage
    FROM
        imp_ba_oeffentl_tickets
    UNION all
    SELECT
        'PARKTICKETS' art,
        fk_imp_ba_bel,
        pk_imp_ba_parktickets,
        name,
        NULL kennzeichen,
        von
        || ' '
        || bis,
        NULL datum_vergehen,
        fk_arbeitstag,
        fk_buchung,
        TO_CHAR(betrag),
        NULL währung,
        TO_CHAR(steuersatz),
        NULL mwst_betrag,
        NULL netto,
        zahlungsart,
        bild,
        null bild1,
        verwendungszweck,
        fk_inventar,
        fk_projekt,
        währung_betrag,
        null fk_kategorie,
    fk_beleg_ablage
    FROM
        imp_ba_parktickets
    UNION all
    SELECT
        'SONSTIGE_BELEGE' art,
        fk_imp_ba_bel,
        pk_imp_ba_sonstige_belege,
        art
        || ' '
        || firma,
        NULL kennzeichen,
        datum,
        NULL datum_vergehen,
        fk_arbeitstag,
        fk_buchung,
        TO_CHAR(betrag),
        NULL währung,
        NULL steuersatz,
        NULL mwst_betrag,
        NULL netto,
        null zahlungsart,
        null bild,
        null bild1,
        null verwendungszweck,
        fk_inventar,
        fk_projekt,
        null währung_betrag,
        null fk_Kategorie,
    fk_beleg_ablage
    FROM
        imp_ba_sonstige_belege
    UNION all
    SELECT
        'TANKSTELLE' art,
        fk_imp_ba_bel,
        pk_imp_ba_tankstelle,
        tankstelle
        || ' '
        || ort,
        NULL kennzeichen,
        TO_CHAR(datum),
        NULL datum_vergehen,
        fk_arbeitstag,
        fk_buchung,
        TO_CHAR(eur),
        NULL währung,
        NULL steuersatz,
        NULL mwst_betrag,
        NULL netto,
        null zahlungsart,
        bild,
        null bild1,
        verwendungszweck,
        fk_inventar,
        fk_projekt,
        währung_betrag,
        null fk_kategorie,
       fk_beleg_ablage
    FROM
        imp_ba_tankstelle
    UNION all
    SELECT
        'TEXTILREINIGUNG' art,
        fk_imp_ba_bel,
        pk_imp_ba_textilreinigung,
        textilreinigung
        || ' '
        || typ,
        NULL kennzeichen,
        TO_CHAR(datum),
        NULL datum_vergehen,
        fk_arbeitstag,
        fk_buchung,
        TO_CHAR(gesamtpreis),
        NULL währung,
        TO_CHAR(steuersatz),
        NULL mwst_betrag,
        NULL netto,
        zahlungsart,
        null bild,
        null bild1,
        null verwendungszweck,
        null fk_inventar,
        fk_projekt,
        null währung_betrag,
        null fk_kategorie,
    fk_beleg_ablage
    FROM
        imp_ba_textilreinigung
    UNION all
    SELECT
        'TEL_MOBILCOM' art,
        fk_imp_tel_bel,
        to_number(pk_imp_tel_mobilcom_rech_ov),
        "Rechnungsnummer",
        NULL kennzeichen,
        TO_CHAR(rechnungsdatum),
        NULL datum_vergehen,
        fk_rechnungsdatum,
        fk_buchung,
        TO_CHAR("Brutto"),
        NULL währung,
        NULL steuersatz,
        NULL mwst_betrag,
        NULL netto,
        null zahlungsart,
        null bild,
        null bild1,
        null verwendungszweck,
        null  fk_inventar,
        null fk_projekt,
        null währung_betrag,
        null fk_kategorie,
        null fk_beleg_ablage
    FROM
        imp_tel_mobilcom_rech_ov
    UNION all
    SELECT
        'TEL_O2' art,
        fk_imp_tel_bel,
        pk_imp_tel_o2,
        rechnungsnummer,
        NULL kennzeichen,
        TO_CHAR(rechnungsdatum),
        NULL datum_vergehen,
        fk_arbeitstag,
        fk_buchung,
        TO_CHAR(betrag),
        NULL währung,
        NULL steuersatz,
        NULL mwst_betrag,
        NULL netto,
        null zahlungsart,
        null bild,
        null bild1,
        null verwendungszweck,
        null fk_inventar,
        null fk_projekt,
        null währung_betrag,
        null fk_kategorie,
        null fk_beleg_ablage
    FROM
        imp_tel_o2
    UNION all
    SELECT
        'TEL_VODAFONE' art,
        fk_imp_tel_bel,
        pk_imp_tel_vodafone,
        bezeichnung,
        NULL kennzeichen,
        TO_CHAR(datum),
        NULL datum_vergehen,
        fk_arbeitstag,
        fk_buchung,
        TO_CHAR(betrag),
        NULL währung,
        NULL steuersatz,
        NULL mwst_betrag,
        NULL netto,
        null zahlungsart,
        null bild,
        null bild1,
        null verwendungszweck,
        null fk_inventar,
        null fk_projekt,
        null währung_betrag,
        null fk_kategorie,
        null fk_beleg_ablage
    FROM
        imp_tel_vodafone
    UNION ALL
      SELECT
        'SOFTWARE' art,
        fk_imp_ba_bel,
        pk_imp_ba_software,
        bezeichnung,
        NULL kennzeichen,
        datum,
        NULL datum_vergehen,
        fk_arbeitstag,
        fk_buchung,
        TO_CHAR(betrag) betrag,
        währung,
        TO_CHAR(steuersatz) steuersatz,
        NULL mwst_betrag,
        NULL netto,
        zahlungsart,
        bild,
        bild1,
        verwendungszweck,
        fk_inventar,
        null fk_projekt,
        null währung_betrag,
        null fk_kategorie,
        null fk_beleg_ablage
    FROM
        imp_ba_software
        )
        select 
        bel.art,
        bel.fk_imp_ba_bel,
        bel.pk_imp_ba_allg_bel,
        bel.bezeichnung,
        bel.kennzeichen,
        bel.datum,
        bel.datum_vergehen,
        bel.fk_arbeitstag,
        bel.fk_buchung,
        bel.betrag,
        bel.währung,
        bel.steuersatz,
         bel.mwst_betrag,
        bel.netto,
        bel.zahlungsart,
        bel.bild,
        bel.bild1,
        bel.verwendungszweck,
        bel.fk_inventar,
        bel.fk_projekt,
        bel.währung_betrag,
        bel.fk_kategorie,
        kat."Kategorie",
        pr.Projekt,
        inv.inventar,
        fk_beleg_ablage
        from bel
         left join t_inventare inv on bel.fk_inventar = inv.pk_inventar
         left join t_projekt pr on pr.pk_projekt = bel.fk_projekt
         left join t_konto_buch_kat kat on kat.pk_konto_buch_kat = bel.fk_kategorie
;
--------------------------------------------------------
--  DDL for View V_IMP_TEL_CONTROL
--------------------------------------------------------

  CREATE OR REPLACE FORCE VIEW "COMPANY"."V_IMP_TEL_CONTROL" ("ABRECHNUNGSMONAT", "COUNT(*)", "SUM(BETRAG)", "RECHNUNGSNUMMER", "NETTOBETRAG") AS 
  select a."ABRECHNUNGSMONAT",a."COUNT(*)",a."SUM(BETRAG)",a."RECHNUNGSNUMMER", b.betrag nettobetrag
from (
select abrechnungsmonat, count(*), sum(Betrag), rechnungsnummer
from imp_tel_mobilcom_rech_det
where detail not in (
'Nettosumme',
'Summe MwSt.Satz',
'Rechnungsbetrag gesamt'
)
group by abrechnungsmonat, rechnungsnummer
) a
left join (

select *
from imp_tel_mobilcom_rech_det
where detail in (
'Nettosumme'

)) b
on a.rechnungsnummer = b.rechnungsnummer
;
--------------------------------------------------------
--  DDL for View V_KONTEN_IMP_CHECK
--------------------------------------------------------

  CREATE OR REPLACE FORCE VIEW "COMPANY"."V_KONTEN_IMP_CHECK" ("SOLLKONTO") AS 
  select sollkonto 
from (
select sollkonto
from t_lex
group by sollkonto
union
select habenkonto
from t_lex
group by habenkonto
) t1
 left join t_kontenplan_konten kto on kto.konten_nr_ext = t1.sollkonto
 where kto.konten_nr_ext is null
;
--------------------------------------------------------
--  DDL for View V_KONTEN_ZUS
--------------------------------------------------------

  CREATE OR REPLACE FORCE VIEW "COMPANY"."V_KONTEN_ZUS" ("FK_MAIN_KEY", "ID", "Buchungstag", "Betrag", "Währung", "Fremdwährungsbetrag", "Fremdwährung", "BUCHUNGSTEXT", "FK_Kategorie", "FK_Verwendungszweck", "FK_Kontotyp", "FK_BUCHUNGSTAG", "FK_WERTSTELLUNG", "VERWENDUNGSZWECK", "KATEGORIE", "BUCHT_TAG", "BUCHT_MONAT", "BUCHT_JAHR", "BUCHT_DATUM", "WERTT_TAG", "WERTT_MONAT", "WERTT_JAHR", "WERTT_DATUM", "Kontotyp", "FK_VORGANG", "WIEDERHOLUNG", "NAECHSTE_ZAHLUNG", "FK_BUCHUNG_STEUER") AS 
  WITH gir AS (
        SELECT
            *
        FROM
            "KTO_Girokonto"
    ),
    kred AS (
        SELECT
            *
        FROM
            "KTO_Kreditkarte"
    ),
    tages AS (
        SELECT
            *
        FROM
            "KTO_Tagesgeldkonto"
    ),
    paypal AS (
        SELECT
            *
        FROM
            "KTO_Paypal"
    ),
    un_all AS (
        SELECT
            fk_main_key,
            id,
            "Buchungstag",
            "Betrag",
            "Währung",
            NULL "Fremdwährungsbetrag",
            NULL "Fremdwährung",
            buchungstext,
            "FK_Kategorie",
            "FK_Verwendungszweck",
            "FK_Kontotyp",
            fk_buchungstag,
            fk_wertstellung,
            fk_vorgang,
            wiederholung,
            nächste_zahlung,
            fk_buchung_steuer
            
        FROM
            gir
        UNION
        SELECT
            fk_main_key,
            id,
            "Buchungstag",
            "Betrag",
            "Währung",
            "Betrag Ursprung"    "Fremdwährungsbetrag",
            "Währung Ursprung"   "Fremdwährung",
            "Unternehmen",
            "FK_Kategorie",
            "FK_Verwendungszweck",
            "FK_Kontotyp",
            fk_buchungstag,
            fk_beleg,
            fk_vorgang,
            wiederholung,
            nächste_zahlung,
            fk_buchung_steuer
        FROM
            kred
        UNION
        SELECT
            fk_main_key,
            id,
            "Buchungstag",
            "Betrag",
            "Währung",
            NULL "Fremdwährungsbetrag",
            NULL "Fremdwährung",
            buchungstext,
            "FK_Kategorie",
            "FK_Verwendungszweck",
            fk_kontotyp,
            fk_buchungstag,
            fk_wertstellung,
            null as fk_vorgang,
            wiederholung,
            nächste_zahlung,
            fk_buchung_steuer
        FROM
            tages
        UNION
        SELECT
            fk_main_key,
            id,
            "Datum",
            "Brutto",
            "Währung",
            NULL "Fremdwährungsbetrag",
            NULL "Fremdwährung",
            "Betreff",
            "FK_Kategorie",
            "FK_Verwendungszweck",
            "FK_Kontotyp",
            fk_arbeitstag,
            fk_arbeitstag,
            fk_vorgang,
            wiederholung,
            nächste_zahlung,
            fk_buchung_steuer
        FROM
            paypal
    )
    SELECT
        un_all.fk_main_key,
        un_all.id,
        un_all."Buchungstag",
        un_all."Betrag",
        un_all."Währung",
        un_all."Fremdwährungsbetrag",
        un_all."Fremdwährung",
        un_all.buchungstext,
        un_all."FK_Kategorie",
        un_all."FK_Verwendungszweck",
        un_all."FK_Kontotyp",
        un_all.fk_buchungstag,
        un_all.fk_wertstellung,
        verw.verwendungszweck,
        kat."Kategorie"   kategorie,
        bucht.tag         bucht_tag,
        bucht.monat       bucht_monat,
        bucht.jahr        bucht_jahr,
        bucht.datum       bucht_datum,
        wertt.tag         wertt_tag,
        wertt.monat       wertt_monat,
        wertt.jahr        wertt_jahr,
        wertt.datum       wertt_datum,
        kto_typ."Kontotyp",
        un_all.fk_vorgang,
        un_all.wiederholung,
        un_all.nächste_zahlung,
        un_all.fk_buchung_steuer
    FROM
        un_all 
        LEFT JOIN "STD_Kontotyp" kto_typ ON kto_typ.id = un_all."FK_Kontotyp"
        LEFT JOIN t_arbeitstage bucht ON bucht.pk_arbeitstage = un_all.fk_buchungstag
        LEFT JOIN t_arbeitstage wertt ON wertt.pk_arbeitstage = un_all.fk_wertstellung
        LEFT JOIN t_konto_buch_kat kat ON kat.pk_konto_buch_kat = un_all."FK_Kategorie"
        LEFT JOIN t_verwendungszweck verw ON verw.pk_verwendungszweck = un_all."FK_Verwendungszweck"
;
--------------------------------------------------------
--  DDL for View V_KONTR_CNT_LEX_ZAHL
--------------------------------------------------------

  CREATE OR REPLACE FORCE VIEW "COMPANY"."V_KONTR_CNT_LEX_ZAHL" ("FK_MAIN_KEY", "CNT") AS 
  select fk_main_key, count(*) cnt
from t_lex
where storno = 0 and ok =1 and fk_main_key is not null
group by fk_Main_key
having count(*)>1
;
--------------------------------------------------------
--  DDL for View V_KONTR_CNT_LEX_ZAHL_bel
--------------------------------------------------------

  CREATE OR REPLACE FORCE VIEW "COMPANY"."V_KONTR_CNT_LEX_ZAHL_bel" ("FK_IMP_BA_BEL", "CNT") AS 
  select fk_imp_ba_bel, count(*) cnt
from t_lex
where storno = 0 and ok =1 and fk_imp_ba_bel is not null
group by fk_imp_ba_bel
having count(*)>1
;
--------------------------------------------------------
--  DDL for View V_KONTR_DUPL_BUCHUNGSTEXT
--------------------------------------------------------

  CREATE OR REPLACE FORCE VIEW "COMPANY"."V_KONTR_DUPL_BUCHUNGSTEXT" ("BUCHUNGSTEXT", "CNT", "LIS") AS 
  select buchungstext, count(*) cnt, listagg(sollkonto, ',') within group (order by pk_lex) lis
from t_lex 
where ok = 1 and storno = 0
group by buchungstext
having count(*) >1
;
--------------------------------------------------------
--  DDL for View V_KONTR_DUPL_DATUM_BETRAG
--------------------------------------------------------

  CREATE OR REPLACE FORCE VIEW "COMPANY"."V_KONTR_DUPL_DATUM_BETRAG" ("BELEGDATUM", "BUCHUNGSBETRAG", "CNT") AS 
  select belegdatum, buchungsbetrag, count(*) cnt
from t_lex 
where ok = 1 and storno = 0
group by belegdatum, buchungsbetrag
having count(*) >1
;
--------------------------------------------------------
--  DDL for View V_KONTR_OK_LEX
--------------------------------------------------------

  CREATE OR REPLACE FORCE VIEW "COMPANY"."V_KONTR_OK_LEX" ("BUCHT_JAHR", "CNT_JAHR", "CNT_LEX") AS 
  select bucht_jahr, count(*) cnt_jahr, sum(case when pk_lex is not null then 1 else 0 end) cnt_lex
from v_konten_zus ktozus
 left join (select * from t_lex where ok = 1 and storno = 0)  lex on ktozus.fk_main_key = lex.fk_main_key
group by bucht_jahr
;
--------------------------------------------------------
--  DDL for View V_KONTROLLE
--------------------------------------------------------

  CREATE OR REPLACE FORCE VIEW "COMPANY"."V_KONTROLLE" ("PK_KONTROLLE", "JAHR", "KONTO", "FINALISIERUNGSDATUM", "BELEGDATUM", "BUCHUNGSDATUM", "BUCHUNGSPERIODE", "BELEGNUMMERNKREIS", "BELEGNUMMER", "BUCHUNGSTEXT", "BUCHUNGSBETRAG", "SOLLKONTO", "HABENKONTO", "STEUERSCHLÜSSEL", "KOSTENSTELLE", "KOSTENTRÄGER", "BUCHUNGSBETRAG_EURO", "WÄHRUNG", "ZUSATZANGABEN", "OK", "STORNO", "PK_LEX", "BEMERKUNGEN", "DATUM_OK") AS 
  select "PK_KONTROLLE","JAHR","KONTO","FINALISIERUNGSDATUM","BELEGDATUM","BUCHUNGSDATUM","BUCHUNGSPERIODE","BELEGNUMMERNKREIS","BELEGNUMMER","BUCHUNGSTEXT","BUCHUNGSBETRAG","SOLLKONTO","HABENKONTO","STEUERSCHLÜSSEL","KOSTENSTELLE","KOSTENTRÄGER","BUCHUNGSBETRAG_EURO","WÄHRUNG","ZUSATZANGABEN","OK","STORNO","PK_LEX","BEMERKUNGEN","DATUM_OK"
from t_kontrolle kon
 left join t_lex on t_lex.sollkonto = kon.konto
;
--------------------------------------------------------
--  DDL for View V_KTO_STAND_GIR
--------------------------------------------------------

  CREATE OR REPLACE FORCE VIEW "COMPANY"."V_KTO_STAND_GIR" ("ID", "Betrag", "LFD_SUM") AS 
  select id, "Betrag", sum("Betrag") over (order by "Buchungstag", id) lfd_sum
from "KTO_Girokonto"
;
--------------------------------------------------------
--  DDL for View V_LEX_BUCH_CHECK
--------------------------------------------------------

  CREATE OR REPLACE FORCE VIEW "COMPANY"."V_LEX_BUCH_CHECK" ("Kontotyp", "Betrag", "BT1", "BT2", "FK_MAIN_KEY", "BELEGNUMMER", "PK_LEX") AS 
  select "Kontotyp", "Betrag", t_lex.Buchungstext bt1, ktozus.buchungstext bt2, t_lex.fk_main_key, t_lex.belegnummer, t_lex.pk_lex

from v_konten_zus ktozus
  left join t_lex  on ktozus.fk_buchung_steuer = t_lex.belegnummer
where (storno is null or storno = 0)
and ok=1 and "Kontotyp" <> 'Paypal'
union
select "Kontotyp", "Betrag", t_lex.Buchungstext bt1, ktozus.buchungstext bt2, t_lex.fk_main_key, t_lex.belegnummer, t_lex.pk_lex

from v_konten_zus ktozus
 right join t_lex  on ktozus.fk_buchung_steuer = t_lex.belegnummer
where (storno is null or storno = 0)
and ok=1 and "Kontotyp" <> 'Paypal'
;
--------------------------------------------------------
--  DDL for View V_LEX_BUCH_KTO
--------------------------------------------------------

  CREATE OR REPLACE FORCE VIEW "COMPANY"."V_LEX_BUCH_KTO" ("FK_MAIN_KEY", "BT", "KAT", "VER", "Betrag", "BTEXT", "Kontotyp", "BELEGDATUM", "BUCHUNGSDATUM", "BUCHUNGSPERIODE", "BELEGNUMMERNKREIS", "BELEGNUMMER", "BUCHUNGSTEXT", "BUCHUNGSBETRAG", "SOLLKONTO", "HABENKONTO", "STEUERSCHLE", "KOSTENSTELLE", "KOSTENTR", "BUCHUNGSBETRAG_EUR", "WRUNG", "ZUSATZANGABEN") AS 
  select
fk_main_key,
"Buchungstag" bt, 
Kategorie kat, 
Verwendungszweck ver,
"Betrag",Buchungstext btext,
"Kontotyp",
--
  "Buchungstag"Belegdatum,	
sysdate Buchungsdatum,
bucht_monat Buchungsperiode,
null Belegnummernkreis,
null Belegnummer,	
Buchungstext,
"Betrag" Buchungsbetrag,
null Sollkonto,	
case when "Kontotyp" = 'Girokonto' then 1700 
when "Kontotyp" = 'Kreditkarte' then 1710
else null
end Habenkonto,	 
null Steuerschle,
null Kostenstelle,
null  Kostentr,
"Betrag" Buchungsbetrag_EUR,
'EUR' Wrung	,
null Zusatzangaben
from v_konten_zus
where bucht_jahr  = 2017
and fk_buchung_steuer is null
and "Betrag" !=     0
;
--------------------------------------------------------
--  DDL for View V_LOCATION
--------------------------------------------------------

  CREATE OR REPLACE FORCE VIEW "COMPANY"."V_LOCATION" ("PK_LOCATION", "LOCATION", "FK_LOCATION_TYPE", "FK_ADRESSE", "CREATED_BY", "CREATED_AT", "MODIFIED_BY", "MODIFIED_AT", "LOCATION_TYPE", "STRASSE", "HSNR", "BESCHREIBUNG", "COMM", "POSTFACH", "PLZ", "ORT", "LAND", "ADR") AS 
  select 
    loc."PK_LOCATION",
    loc."LOCATION",
    loc."FK_LOCATION_TYPE",
    loc."FK_ADRESSE",
    loc."CREATED_BY",
    loc."CREATED_AT",
    loc."MODIFIED_BY",
    loc."MODIFIED_AT",
    loc_type.location_type,
    adr.strasse,
    adr.hsnr,
    adr.beschreibung,
    adr.comm,
    adr.postfach,

    plz_ort.plz,
    ort.ort,
    la.land,
    adr.strasse || ' ' || adr.hsnr || ', ' || plz_ort.plz || ' ' || ort.ort || ', ' || la.land adr
from t_location loc
  left join t_location_type  loc_type on loc.fk_location_type = loc_type.pk_location_type
  left join t_adresse adr on adr.pk_adresse = loc.fk_adresse
  left join t_plz_ort plz_ort on plz_ort.pk_plz_ort = adr.fk_plz_ort
  left join t_ort ort on ort.pk_ort  = plz_ort.fk_ort
  left join t_land la on la.pk_land = ort.fk_land
;
--------------------------------------------------------
--  DDL for View V_RATIO
--------------------------------------------------------

  CREATE OR REPLACE FORCE VIEW "COMPANY"."V_RATIO" ("RECHNUNGSDATUM", "FK_PROJEKT", "RECHNUNGSBETRAG_NETTO", "ANTEIL_UMSATZ", "SUM_UMSATZ", "SUM_WERT", "SUM_WERT2", "SUM_WERT1") AS 
  select 
rechnungsdatum, 
 fk_projekt, 
rechnungsbetrag_netto,
 RATIO_TO_REPORT(rechnungsbetrag_netto) over (partition by fk_projekt) * 100 as ANTEIL_UMSATZ
,  SUM(rechnungsbetrag_netto) over (partition by fk_projekt order by fk_projekt rows between unbounded preceding and current row) as SUM_UMSATZ
, sum(rechnungsbetrag_netto) over(order by fk_projekt) sum_wert
, sum(rechnungsbetrag_netto) over(order by rownum) sum_wert2
, sum(rechnungsbetrag_netto) over(order by rownum, fk_projekt) sum_wert1
from t_rechnung
order by rechnungsdatum, fk_projekt
;
--------------------------------------------------------
--  DDL for View V_RENR
--------------------------------------------------------

  CREATE OR REPLACE FORCE VIEW "COMPANY"."V_RENR" ("TP", "JA", "LETZTE_NR", "NEUE_NR", "NEUE_RENR") AS 
  select tp, ja, letzte_nr, neue_nr, tp || '-' || neue_nr || '-MON-' || ja || '-VW=>PROJ' neue_renr
from (
select tp,  ja, max(nr) letzte_nr, max(nr) +1 neue_nr
from (select *
from (with stri as (select pk_rechnung, level lev, regexp_substr(rechnungsnummer,'[^-]+', 1, level) str from t_rechnung 
    connect by  regexp_substr(rechnungsnummer, '[^-]+', 1, level) is not null)
select lev, str, pk_rechnung
from stri
group by lev, str, pk_rechnung)
pivot (max(str) for (lev) in (1 as tp,2 as nr,3 as mon,4 as ja,5)))
group by tp, ja)
;
--------------------------------------------------------
--  DDL for View V_ROLLUP
--------------------------------------------------------

  CREATE OR REPLACE FORCE VIEW "COMPANY"."V_ROLLUP" ("RECHNUNGSDATUM", "SUM_RECH", "AVG_RECH", "MIN_RECH", "MAX_RECH") AS 
  select 
rechnungsdatum, sum(rechnungsbetrag_netto) sum_rech, avg(rechnungsbetrag_netto) avg_rech, min(rechnungsbetrag_netto) min_rech, max(rechnungsbetrag_netto) max_rech
from t_rechnung
group by rollup (rechnungsdatum)
order by 1
;
--------------------------------------------------------
--  DDL for View V_STEUER_GES
--------------------------------------------------------

  CREATE OR REPLACE FORCE VIEW "COMPANY"."V_STEUER_GES" ("SRT", "POS", "KATEGORIE", "BETRAG", "JAHR", "MONAT") AS 
  With zeitr as (select * from dual),

ein as (

        select 
            100 srt, 
            'Einnahmen' Pos,
            null Kategorie, 
            sum(rechnungsbetrag_brutto) Betrag, 
            to_char(zahlungseingang,'YYYY') jahr, 
            to_char(to_number(to_char(zahlungseingang,'MM'))) monat 
        from t_rechnung 
        where fk_rechnungstyp = 2 
        group by  
            to_char(zahlungseingang,'YYYY') , 
            to_char( to_number(to_char(zahlungseingang,'MM')))
    ),
ein_mwst as (
                select 
                    200 srt, 
                    'Einnahmen_MWST' Pos,
                    null Kategorie,
                    sum(mwst) betrag, 
                    to_char(zahlungseingang,'YYYY') jahr, 
                   to_char( to_number(to_char(zahlungseingang,'MM'))) monat
                from t_rechnung 
                where fk_rechnungstyp = 2 
                group by   
                  to_char(zahlungseingang,'YYYY') , 
                  to_char( to_number(to_char(zahlungseingang,'MM')))
            ),
ausg_mwst_bel as (
                select 
                  310 srt,
                  'AUSGABEN_MWST_BEL' pos, 
                  null kategorie , 
                  sum(mwst) betrag ,
                  to_char(jahr) jahr, 
                  to_char(monat) monat
                from t_beleg
                 left join t_arbeitstage on t_beleg.fk_arbeitstag = t_arbeitstage.pk_arbeitstage
                where  fk_einkommensteuerrelevant= 1 or fk_unternehmenssteuerrelevant = 1 or fk_vorsteuerrelevant =1
                 group by fk_belegart, jahr, monat

),
ausg_mwst_zahl as (
                    select 
                      320 srt,
                     'AUSGABEN_MWST_ZAHL' pos, 
                     t_konto_buch_kat."Kategorie"  kategorie,
                     sum("Betrag") betrag, 
                     to_char(jahr) jahr, 
                     to_char(monat) monat
                    from v_konten_zus
                     left join t_arbeitstage on v_konten_zus.fk_buchungstag = t_arbeitstage.pk_arbeitstage
                     left join t_konto_buch_kat on t_konto_buch_kat.pk_konto_buch_kat = v_konten_zus."FK_Kategorie"
                    where  v_konten_zus."FK_Kategorie" = 46                    
                    group by 
                     t_konto_buch_kat."Kategorie"  , 
                     jahr, 
                     monat

),
ausg_mwst_gut as (
                    select 
                      330 srt,
                      'AUSGABEN_MWST_GUT' pos, 
                      t_konto_buch_kat."Kategorie"  kategorie,
                      sum("Betrag") betrag, 
                      to_char(jahr) jahr, 
                      to_char(monat) monat
                    from v_konten_zus
                     left join t_arbeitstage on v_konten_zus.fk_buchungstag = t_arbeitstage.pk_arbeitstage
                     left join t_konto_buch_kat on t_konto_buch_kat.pk_konto_buch_kat = v_konten_zus."FK_Kategorie"
                    where  v_konten_zus."FK_Kategorie" = 47 
                    
                     group by 
                      t_konto_buch_kat."Kategorie",
                      jahr,
                      monat

),
ausg as (

            select 
             400 srt,
             'AUSGABEN' pos, 
             t_belegart.belegart kategorie, 
             sum(betrag_brutto) betrag , 
             to_char(jahr) jahr, 
             to_char(monat) monat
            from t_beleg
             left join t_arbeitstage on t_beleg.fk_arbeitstag = t_arbeitstage.pk_arbeitstage           
             left join t_belegart on t_beleg.fk_belegart = t_belegart.pk_belegart
            where 
              (fk_einkommensteuerrelevant= 1 or fk_unternehmenssteuerrelevant = 1 or fk_vorsteuerrelevant =1)
              and (fk_belegart not in (112,
                61,
                161)
                )
             group by 
               belegart, 
               jahr, 
               monat

),
vorst_anm as (
  select
   392 srt,
   'VORSTEUER_VORANMELDUNG' pos,
   null kategorie,
   sum(UMSATZSTVORAUSZLG_UEBERSCHUSS) betrag,
    to_char(MELDEMONAT,'YYYY') jahr, 
    to_char(to_number(to_char(MELDEMONAT,'MM'))) monat 
   
   from T_STEUER_VORANMLDG
   group by 
    to_char(MELDEMONAT,'YYYY') ,
    to_char(to_number(to_char(MELDEMONAT,'MM'))) 

),
vorst_anm_stpf_ums as (
  select
   210 srt,
   'STEUERPFLICHTIGE UMSÄTZE' pos,
   null kategorie,
   sum(STEUERPFL_UMSAETZE) betrag,
    to_char(MELDEMONAT,'YYYY') jahr, 
    to_char(to_number(to_char(MELDEMONAT,'MM'))) monat 
   
   from T_STEUER_VORANMLDG
   group by 
    to_char(MELDEMONAT,'YYYY') ,
    to_char(to_number(to_char(MELDEMONAT,'MM'))) 

),
vorst_anm_abz_betr as (
  select
   360 srt,
   'VORST ABZIEHBARE_BETRÄGE' pos,
   null kategorie,
   sum(ABZIEHBARE_VORSTEUERBETR) betrag,
    to_char(MELDEMONAT,'YYYY') jahr, 
    to_char(to_number(to_char(MELDEMONAT,'MM'))) monat 
   
   from T_STEUER_VORANMLDG
   group by 
    to_char(MELDEMONAT,'YYYY') ,
    to_char(to_number(to_char(MELDEMONAT,'MM'))) 

)

--=== Monatswerte ===
select 
SRT,
POS,
KATEGORIE,
BETRAG,
JAHR,
MONAT
from ein
union 
select 
SRT,
POS,
KATEGORIE,
BETRAG,
JAHR,
MONAT
from ein_mwst
union 
select 
SRT,
POS,
KATEGORIE,
BETRAG,
JAHR,
MONAT
from ausg_mwst_bel
union
select 
SRT,
POS,
KATEGORIE,
BETRAG,
JAHR,
MONAT
from ausg
union
select 
SRT,
POS,
KATEGORIE,
BETRAG,
JAHR,
MONAT
from ausg_mwst_zahl
union
select 
SRT,
POS,
KATEGORIE,
BETRAG,
JAHR,
MONAT
from ausg_mwst_gut
union
select
SRT,
POS,
KATEGORIE,
BETRAG,
JAHR,
MONAT

from vorst_anm
union
select
SRT,
POS,
KATEGORIE,
BETRAG,
JAHR,
MONAT
from vorst_anm_stpf_ums 
union
select
SRT,
POS,
KATEGORIE,
BETRAG,
JAHR,
MONAT
from vorst_anm_abz_betr
union
--=== Jahreswerte ===
select 
SRT,
POS,
KATEGORIE,
SUM(BETRAG) BETRAG,
JAHR,
'ALL' MONAT
from ein
group by
SRT,
POS,
KATEGORIE,
JAHR
union 
select 
SRT,
POS,
KATEGORIE,
SUM(BETRAG) BETRAG,
JAHR,
'ALL' MONAT
from ein_mwst
group by
SRT,
POS,
KATEGORIE,
JAHR
union 
select 
SRT,
POS,
KATEGORIE,
SUM(BETRAG) BETRAG,
JAHR,
'ALL' MONAT
from ausg_mwst_bel
group by
SRT,
POS,
KATEGORIE,
JAHR
union
select 
SRT,
POS,
KATEGORIE,
SUM(BETRAG) BETRAG,
JAHR,
'ALL' MONAT
from ausg
group by
SRT,
POS,
KATEGORIE,
JAHR
union
select 
SRT,
POS,
KATEGORIE,
SUM(BETRAG) BETRAG,
JAHR,
'ALL' MONAT
from ausg_mwst_zahl
group by
SRT,
POS,
KATEGORIE,
JAHR
union
select 
SRT,
POS,
KATEGORIE,
SUM(BETRAG) BETRAG,
JAHR,
'ALL' MONAT
from ausg_mwst_gut
group by
SRT,
POS,
KATEGORIE,
JAHR
union
select
SRT,
POS,
KATEGORIE,
sum(BETRAG) betrag,
JAHR,
'ALL' MONAT

from vorst_anm
group by
SRT,
POS,
KATEGORIE,
JAHR
union
select
SRT,
POS,
KATEGORIE,
sum(BETRAG) betrag,
JAHR,
'ALL' MONAT

from vorst_anm_stpf_ums
group by
SRT,
POS,
KATEGORIE,
JAHR
union
select
SRT,
POS,
KATEGORIE,
sum(BETRAG) betrag,
JAHR,
'ALL' MONAT

from vorst_anm_abz_betr
group by
SRT,
POS,
KATEGORIE,
JAHR
;
--------------------------------------------------------
--  DDL for View V_T_BELEG
--------------------------------------------------------

  CREATE OR REPLACE FORCE VIEW "COMPANY"."V_T_BELEG" ("CHILD", "PARENT", "BELEGART") AS 
  select 'B' || pk_belegart as child,
'A' || 0 parent,
belegart

from t_belegart
union
select 'C' ||  pk_beleg,
'B' || fk_belegart,
pk_beleg || ' ' || datum || ' ' || beleg
from t_beleg
;
--------------------------------------------------------
--  DDL for View V_T_BELEG_DAT
--------------------------------------------------------

  CREATE OR REPLACE FORCE VIEW "COMPANY"."V_T_BELEG_DAT" ("CHILD", "PARENT", "TXT", "SORT") AS 
  select 
  'B' || nvl(jahr,0) as child,
  'A' || 0 parent,
  'Jahr: ' || nvl(jahr,0) txt,
  'Jahr: ' || nvl(jahr,0) as sort
from t_arbeitstage
group by nvl(jahr,0)
--2. Ebene
union
select 
  'C-1' ||  nvl(jahr,0),
  'B' || nvl(jahr,0),
  'Jahr' || nvl(jahr,0),
  'A - Beleg ' || nvl(jahr,0) pk_beleg
from t_arbeitstage
union
select 
  'C-2' || nvl(jahr,0)  as child,
  'B'  || nvl(jahr,0)  parent,
  'Monate'  || nvl(jahr,0)   txt,
  'Jahr: '  || nvl(jahr,0)   as sort
from t_arbeitstage
--3. Ebene
union
select 
  'D' ||  tbel.pk_beleg,
  'C-1' || nvl(jahr,0),
  tbel.pk_beleg || ' ' || tbel.datum || ' ' || tbel.beleg,
  'A - Beleg ' || tbel.datum || belegart || pk_beleg
from t_beleg tbel
  left join t_arbeitstage tarb on tbel.pk_beleg = tarb.pk_arbeitstage
  left join t_belegart tbela on tbel.fk_belegart = tbela.pk_belegart
union
--monat
--1. Ebene
select 
  'D' ||  nvl(jahr,0) || nvl(monat,0) as child,
  'C-2' || nvl(jahr,0) parent,
  'Monat: ' || monat,
  'B - Monat ' ||  monat
from t_arbeitstage
union
--2. Ebene
select 
  'E-1' ||  nvl(jahr,0) || nvl(monat,0) as child,
  'D' ||  nvl(jahr,0) || nvl(monat,0) parent,
  'Monat ' ,
  'C - Monat ' ||  monat
from t_arbeitstage
union
select 
  'E-2' ||  nvl(jahr,0) || nvl(monat,0) || 0 as child,
  'D' ||  nvl(jahr,0) || nvl(monat,0) parent,
  'Arbeitstage ' ||  nvl(jahr,0) || nvl(monat,0) || 0 ,
  'C - Monat ' ||  monat
from t_arbeitstage
--2. Ebene

union
--3. Ebene
select 
  'F' ||  tbel.pk_beleg,
  'E-1' || nvl(jahr,0) || nvl(monat,0),
  tbel.pk_beleg || ' ' || tbel.datum || ' ' || tbel.beleg,
  'A - Beleg ' || tbel.datum || belegart || pk_beleg
from t_beleg tbel
  left join t_arbeitstage tarb on tbel.pk_beleg = tarb.pk_arbeitstage
  left join t_belegart tbela on tbel.fk_belegart = tbela.pk_belegart
union
--arbeitstag
--1. Ebene
select 
  'F' || nvl(jahr,0) || nvl(monat,0) || nvl(PK_arbeitstage,0) as child,
  'E-2' || nvl(jahr,0) || nvl(monat,0) || 0 parent,
  case when FK_Wochenende = 1 then 'WE' end || case when FK_Arbeitstag = 1 then 'WT'  when FK_Arbeitstag = 0 and fk_wochenende = 0 then 'FT' end || ': ' || 'Tag: ' || Datum || ' ' 
  || Feiertag  || nvl(jahr,0) || nvl(monat,0) || 0 || pk_arbeitstage tg,
  'Tag: ' || datum
from t_arbeitstage 
--2. Ebene
union
select 
  'G' ||  tbel.pk_beleg,
  'F' || nvl(jahr,0) || nvl(monat,0) || nvl(PK_arbeitstage,0),
  tbel.pk_beleg || ' ' || tbel.datum || ' ' || tbel.beleg,
  'A - Beleg ' || tbel.datum || belegart || pk_beleg || pk_arbeitstage
from t_beleg tbel
  left join t_arbeitstage tarb on tbel.fk_arbeitstag = tarb.pk_arbeitstage
  left join t_belegart tbela on tbel.fk_belegart = tbela.pk_belegart
;
--------------------------------------------------------
--  DDL for View V_ZAHLUNGSWIEDERHOLUNG
--------------------------------------------------------

  CREATE OR REPLACE FORCE VIEW "COMPANY"."V_ZAHLUNGSWIEDERHOLUNG" ("KAT", "BEZEICHNUNG", "BETRAG_GESAMT", "DATUM", "KENNZEICHEN", "WIEDERHOLUNG") AS 
  select 'KFZ Versicherung/Steuern' kat, bezeichnung, betrag_gesamt,datum, Kennzeichen,wiederholung 
        from imp_ba_kfz_versicherungen
        where wiederholung is not null and wiederholung <> 'einmalig'
        union
        select 'Krankenversicherung' , buchungstext, betrag, datum, null, wiederholung
        from imp_ba_krankenkasse
        where Buchungstext = 'Beitrag'
;
--------------------------------------------------------
--  DDL for Index PK_T_REL_BELEG_INVENTAR
--------------------------------------------------------

  CREATE UNIQUE INDEX "COMPANY"."PK_T_REL_BELEG_INVENTAR" ON "COMPANY"."T_REL_BELEG_INVENTAR" ("PK_REL_BEL_INV") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index IMP_BA_SOFTWARE_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "COMPANY"."IMP_BA_SOFTWARE_PK" ON "COMPANY"."IMP_BA_SOFTWARE" ("PK_IMP_BA_SOFTWARE") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USER01" ;
--------------------------------------------------------
--  DDL for Index KTO_Girokonto_INDEX1
--------------------------------------------------------

  CREATE UNIQUE INDEX "COMPANY"."KTO_Girokonto_INDEX1" ON "COMPANY"."KTO_Girokonto" ("FK_MAIN_KEY") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USER01" ;
--------------------------------------------------------
--  DDL for Index T_STROMABLESUNG_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "COMPANY"."T_STROMABLESUNG_PK" ON "COMPANY"."T_STROMABLESUNG" ("PK_STROMABLESUNG") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USER01" ;
--------------------------------------------------------
--  DDL for Index T_ABL_ORDNER_PAGE_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "COMPANY"."T_ABL_ORDNER_PAGE_PK" ON "COMPANY"."T_ABL_ORDNER_PAGE" ("PK_ABL_ORDNER_PAGE") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USER01" ;
--------------------------------------------------------
--  DDL for Index T_REL_FRAGE_LÖS_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "COMPANY"."T_REL_FRAGE_LÖS_PK" ON "COMPANY"."T_REL_FRAGE_LÖS" ("PK_FRAGE_LÖS") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USER01" ;
--------------------------------------------------------
--  DDL for Index PK_T_BELEGPOSITION
--------------------------------------------------------

  CREATE UNIQUE INDEX "COMPANY"."PK_T_BELEGPOSITION" ON "COMPANY"."T_BELEGPOSITION" ("PK_BELEGPOSITION") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index KTO_Tagesgeldkonto_INDEX2
--------------------------------------------------------

  CREATE INDEX "COMPANY"."KTO_Tagesgeldkonto_INDEX2" ON "COMPANY"."KTO_Tagesgeldkonto" ("Buchungstag") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USER01" ;
--------------------------------------------------------
--  DDL for Index T_TERMIN_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "COMPANY"."T_TERMIN_PK" ON "COMPANY"."T_TERMIN" ("PK_TERMIN") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index PK_T_MENGENEINHEIT
--------------------------------------------------------

  CREATE UNIQUE INDEX "COMPANY"."PK_T_MENGENEINHEIT" ON "COMPANY"."T_MENGENEINHEIT" ("PK_MENGENEINHEIT") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index T_KONTO_BUCH_KAT_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "COMPANY"."T_KONTO_BUCH_KAT_PK" ON "COMPANY"."T_KONTO_BUCH_KAT" ("PK_KONTO_BUCH_KAT") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USER01" ;
--------------------------------------------------------
--  DDL for Index PK_T_REL_BELEGPOS_ARTIKEL
--------------------------------------------------------

  CREATE UNIQUE INDEX "COMPANY"."PK_T_REL_BELEGPOS_ARTIKEL" ON "COMPANY"."T_REL_BELEGPOS_ARTIKEL" ("PK_REL_BELPOS_ARTIKEL") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index T_REL_KONT_BUCH_KONT_BUCH_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "COMPANY"."T_REL_KONT_BUCH_KONT_BUCH_PK" ON "COMPANY"."T_REL_KONT_BUCH_KONT_BUCH" ("PK_REL_KONT_BUCH_KONT_BUCH") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USER01" ;
--------------------------------------------------------
--  DDL for Index T_REL_GESCHÄFTSP_KUNR_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "COMPANY"."T_REL_GESCHÄFTSP_KUNR_PK" ON "COMPANY"."T_REL_GESCHAEFTSP_KUNR" ("PK_REL_GP_KUNR") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index T_REL_KONTAKTPERSON_ADRESS_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "COMPANY"."T_REL_KONTAKTPERSON_ADRESS_PK" ON "COMPANY"."T_REL_KONTAKTPERSON_ADRESSE" ("PK_REL_KONTP_ADR") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index T_KONTO_AUSZUG_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "COMPANY"."T_KONTO_AUSZUG_PK" ON "COMPANY"."T_KONTO_AUSZUG" ("PK_KONTO_AUSZUG") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USER01" ;
--------------------------------------------------------
--  DDL for Index T_BILD_BA_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "COMPANY"."T_BILD_BA_PK" ON "COMPANY"."T_BILD_BA" ("PK") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USER01" ;
--------------------------------------------------------
--  DDL for Index PK_T_HERSTELLER
--------------------------------------------------------

  CREATE UNIQUE INDEX "COMPANY"."PK_T_HERSTELLER" ON "COMPANY"."T_HERSTELLER" ("PK_HERSTELLER") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index T_REL_STEUER_SATZ_GÜLT_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "COMPANY"."T_REL_STEUER_SATZ_GÜLT_PK" ON "COMPANY"."T_REL_STEUER_SATZ_GÜLT" ("PK_REL_STEUER_SATZ_GÜLT") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USER01" ;
--------------------------------------------------------
--  DDL for Index IMP_BA_BUSSGELDER_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "COMPANY"."IMP_BA_BUSSGELDER_PK" ON "COMPANY"."IMP_BA_BUSSGELDER" ("PK_IMP_BA_BUSSGELDER") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USER01" ;
--------------------------------------------------------
--  DDL for Index PK_T_PRODUKT
--------------------------------------------------------

  CREATE UNIQUE INDEX "COMPANY"."PK_T_PRODUKT" ON "COMPANY"."T_PRODUKT" ("PK_PRODUKT") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index PK_T_ARBEITSTAGE
--------------------------------------------------------

  CREATE UNIQUE INDEX "COMPANY"."PK_T_ARBEITSTAGE" ON "COMPANY"."T_ARBEITSTAGE" ("PK_ARBEITSTAGE") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index PK_T_EINSENDEAUFGABENSTATUS
--------------------------------------------------------

  CREATE UNIQUE INDEX "COMPANY"."PK_T_EINSENDEAUFGABENSTATUS" ON "COMPANY"."T_EINSENDEAUFGABENSTATUS" ("PK_EINSENDEAUFG_STAT") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index DEMO_PRODUCT_INFO_UK
--------------------------------------------------------

  CREATE UNIQUE INDEX "COMPANY"."DEMO_PRODUCT_INFO_UK" ON "COMPANY"."DEMO_PRODUCT_INFO" ("PRODUCT_NAME") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USER01" ;
--------------------------------------------------------
--  DDL for Index KTO_Paypal_INDEX1
--------------------------------------------------------

  CREATE UNIQUE INDEX "COMPANY"."KTO_Paypal_INDEX1" ON "COMPANY"."KTO_Paypal" ("FK_MAIN_KEY") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USER01" ;
--------------------------------------------------------
--  DDL for Index T_VERBRAUCHSMATERIAL_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "COMPANY"."T_VERBRAUCHSMATERIAL_PK" ON "COMPANY"."T_VERBRAUCHSMATERIAL" ("PK_VERBRAUCHSMATERIAL") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index T_REL_KONTAKT_KONTAKTTYP_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "COMPANY"."T_REL_KONTAKT_KONTAKTTYP_PK" ON "COMPANY"."T_REL_KONTAKT_KONTAKTTYP" ("PK_REL_KON_KONT") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index PK_T_LOCATION
--------------------------------------------------------

  CREATE UNIQUE INDEX "COMPANY"."PK_T_LOCATION" ON "COMPANY"."T_LOCATION" ("PK_LOCATION") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index T_REL_LAGERORT_ARTIKEL_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "COMPANY"."T_REL_LAGERORT_ARTIKEL_PK" ON "COMPANY"."T_REL_LAGERORT_ARTIKEL" ("PK_REL_LAGO_ART") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index KTO_Girokonto_INDEX2
--------------------------------------------------------

  CREATE INDEX "COMPANY"."KTO_Girokonto_INDEX2" ON "COMPANY"."KTO_Girokonto" ("Buchungstag") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USER01" ;
--------------------------------------------------------
--  DDL for Index PK_T_ARTIKELBESTANDTEILE
--------------------------------------------------------

  CREATE UNIQUE INDEX "COMPANY"."PK_T_ARTIKELBESTANDTEILE" ON "COMPANY"."T_ARTIKELBESTANDTEILE" ("PK_ARTIKELBEST") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index T_STEUERNUMMER_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "COMPANY"."T_STEUERNUMMER_PK" ON "COMPANY"."T_STEUERNUMMER" ("PK_STEUERNUMMER") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USER01" ;
--------------------------------------------------------
--  DDL for Index DEMO_ORDER_ITEMS_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "COMPANY"."DEMO_ORDER_ITEMS_PK" ON "COMPANY"."DEMO_ORDER_ITEMS" ("ORDER_ITEM_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USER01" ;
--------------------------------------------------------
--  DDL for Index DEMO_PRODUCT_INFO_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "COMPANY"."DEMO_PRODUCT_INFO_PK" ON "COMPANY"."DEMO_PRODUCT_INFO" ("PRODUCT_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USER01" ;
--------------------------------------------------------
--  DDL for Index PK_T_RECHNUNG
--------------------------------------------------------

  CREATE UNIQUE INDEX "COMPANY"."PK_T_RECHNUNG" ON "COMPANY"."T_RECHNUNG" ("PK_RECHNUNG") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index CONTR_KATEGORIE_ZAHLUNG_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "COMPANY"."CONTR_KATEGORIE_ZAHLUNG_PK" ON "COMPANY"."CONTR_KATEGORIE_ZAHLUNG" ("PK_CONTR_KATEGORIE_ZAHLUNG") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USER01" ;
--------------------------------------------------------
--  DDL for Index T_REL_IMP_BEL_BEL_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "COMPANY"."T_REL_IMP_BEL_BEL_PK" ON "COMPANY"."T_REL_IMP_BEL_BEL" ("PK_REL_IMP_BEL_BEL") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USER01" ;
--------------------------------------------------------
--  DDL for Index PK_T_AUFGABE
--------------------------------------------------------

  CREATE UNIQUE INDEX "COMPANY"."PK_T_AUFGABE" ON "COMPANY"."T_AUFGABE" ("PK_AUFGABE") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index T_ABL_ORDNER_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "COMPANY"."T_ABL_ORDNER_PK" ON "COMPANY"."T_ABL_ORDNER" ("PK_ABL_ORDNER") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USER01" ;
--------------------------------------------------------
--  DDL for Index PK_T_QUELLE
--------------------------------------------------------

  CREATE UNIQUE INDEX "COMPANY"."PK_T_QUELLE" ON "COMPANY"."T_QUELLE" ("PK_QUELLE") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index KTO_Paypal_INDEX2
--------------------------------------------------------

  CREATE INDEX "COMPANY"."KTO_Paypal_INDEX2" ON "COMPANY"."KTO_Paypal" ("Datum") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USER01" ;
--------------------------------------------------------
--  DDL for Index DEMO_TAGS_SUM_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "COMPANY"."DEMO_TAGS_SUM_PK" ON "COMPANY"."DEMO_TAGS_SUM" ("TAG") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USER01" ;
--------------------------------------------------------
--  DDL for Index PK_T_ADRESSE
--------------------------------------------------------

  CREATE UNIQUE INDEX "COMPANY"."PK_T_ADRESSE" ON "COMPANY"."T_ADRESSE" ("PK_ADRESSE") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index KTO_Kreditkarte_INDEX1
--------------------------------------------------------

  CREATE UNIQUE INDEX "COMPANY"."KTO_Kreditkarte_INDEX1" ON "COMPANY"."KTO_Kreditkarte" ("FK_MAIN_KEY") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USER01" ;
--------------------------------------------------------
--  DDL for Index T_REL_INVENTAR_INVENTARTYP_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "COMPANY"."T_REL_INVENTAR_INVENTARTYP_PK" ON "COMPANY"."T_REL_INVENTAR_INVENTARTYP" ("PK_REL_INV_INVT") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index PK_T_BUCH
--------------------------------------------------------

  CREATE UNIQUE INDEX "COMPANY"."PK_T_BUCH" ON "COMPANY"."T_BUCH" ("BK_BUCH") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index PP_Vorgang_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "COMPANY"."PP_Vorgang_PK" ON "COMPANY"."PP_Vorgang" ("ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USER01" ;
--------------------------------------------------------
--  DDL for Index A3_Zus_Gruppierung_Ein_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "COMPANY"."A3_Zus_Gruppierung_Ein_PK" ON "COMPANY"."IMP_TEL_MOBILCOM_RECH_OV" ("PK_IMP_TEL_MOBILCOM_RECH_OV") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USER01" ;
--------------------------------------------------------
--  DDL for Index PK_T_LOCATION_TYPE
--------------------------------------------------------

  CREATE UNIQUE INDEX "COMPANY"."PK_T_LOCATION_TYPE" ON "COMPANY"."T_LOCATION_TYPE" ("PK_LOCATION_TYPE") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index T_BARGELD_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "COMPANY"."T_BARGELD_PK" ON "COMPANY"."T_BARGELD" ("PK_BARGELD") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USER01" ;
--------------------------------------------------------
--  DDL for Index T_REL_STEUER_MONAT_BEL_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "COMPANY"."T_REL_STEUER_MONAT_BEL_PK" ON "COMPANY"."T_REL_STEUER_MONAT_BEL" ("PK_REL_BEL_STEUER_MONAT") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USER01" ;
--------------------------------------------------------
--  DDL for Index T_REL_KONTO_AUSZUG_BILD_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "COMPANY"."T_REL_KONTO_AUSZUG_BILD_PK" ON "COMPANY"."T_REL_KONTO_AUSZUG_BILD" ("PK_KONTO_AUSZUG_BILD") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USER01" ;
--------------------------------------------------------
--  DDL for Index DL_IMP_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "COMPANY"."DL_IMP_PK" ON "COMPANY"."DL_IMP" ("ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USER01" ;
--------------------------------------------------------
--  DDL for Index IMP_BA_CARMIETE_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "COMPANY"."IMP_BA_CARMIETE_PK" ON "COMPANY"."IMP_BA_CARMIETE" ("PK_IMP_BA_CARMIETE") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USER01" ;
--------------------------------------------------------
--  DDL for Index T_KONTENPLAN_KONTEN_GRP_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "COMPANY"."T_KONTENPLAN_KONTEN_GRP_PK" ON "COMPANY"."T_KONTENPLAN_KONTEN_GRP" ("PK_KONTENPLAN_KONTEN_GRP") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USER01" ;
--------------------------------------------------------
--  DDL for Index T_COMP_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "COMPANY"."T_COMP_PK" ON "COMPANY"."T_COMP" ("PK_COMP") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index T_OFFENE_EINGANGSRECHNUNGE_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "COMPANY"."T_OFFENE_EINGANGSRECHNUNGE_PK" ON "COMPANY"."T_OFFENE_EINGANGSRECHNUNGEN" ("PK_OFFENE_RECHNUNGEN") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USER01" ;
--------------------------------------------------------
--  DDL for Index PK_T_BELEGART_GRP
--------------------------------------------------------

  CREATE UNIQUE INDEX "COMPANY"."PK_T_BELEGART_GRP" ON "COMPANY"."T_BELEGART_GRP" ("PK_BELEGART_GRP") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USER01" ;
--------------------------------------------------------
--  DDL for Index PK_T_FARBE
--------------------------------------------------------

  CREATE UNIQUE INDEX "COMPANY"."PK_T_FARBE" ON "COMPANY"."T_FARBE" ("PK_FARBE") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index KTO_Girokonto_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "COMPANY"."KTO_Girokonto_PK" ON "COMPANY"."KTO_Girokonto" ("ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USER01" ;
--------------------------------------------------------
--  DDL for Index PK_T_BANK
--------------------------------------------------------

  CREATE UNIQUE INDEX "COMPANY"."PK_T_BANK" ON "COMPANY"."T_BANK" ("PK_BANK") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index T_STEUER_VORANMLDG_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "COMPANY"."T_STEUER_VORANMLDG_PK" ON "COMPANY"."T_STEUER_VORANMLDG" ("PK_STEUER_VORANMLDG") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USER01" ;
--------------------------------------------------------
--  DDL for Index DEMO_ORDER_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "COMPANY"."DEMO_ORDER_PK" ON "COMPANY"."DEMO_ORDERS" ("ORDER_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USER01" ;
--------------------------------------------------------
--  DDL for Index T_BELEGSEL_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "COMPANY"."T_BELEGSEL_PK" ON "COMPANY"."T_BELEGSEL" ("PK_BELEGSEL") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USER01" ;
--------------------------------------------------------
--  DDL for Index PK_T_LAND
--------------------------------------------------------

  CREATE UNIQUE INDEX "COMPANY"."PK_T_LAND" ON "COMPANY"."T_LAND" ("PK_LAND") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index T_STEUER_KRANKENKASSE_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "COMPANY"."T_STEUER_KRANKENKASSE_PK" ON "COMPANY"."T_STEUER_KRANKENKASSE" ("PK_STEUER_KRANKENKASSE") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USER01" ;
--------------------------------------------------------
--  DDL for Index T_STD_GROUP_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "COMPANY"."T_STD_GROUP_PK" ON "COMPANY"."T_STD_GROUP" ("PK_STD_GROUP") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index T_STEUERSATZ_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "COMPANY"."T_STEUERSATZ_PK" ON "COMPANY"."T_STEUERSATZ" ("PK_STEUERSATZ") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index IMP_BA_OEFFENTL_TICKETS_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "COMPANY"."IMP_BA_OEFFENTL_TICKETS_PK" ON "COMPANY"."IMP_BA_OEFFENTL_TICKETS" ("PK_IMP_BA_OEFFENTL_TICKETS") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USER01" ;
--------------------------------------------------------
--  DDL for Index T_REL_STEUER_MONAT_RECH_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "COMPANY"."T_REL_STEUER_MONAT_RECH_PK" ON "COMPANY"."T_REL_STEUER_MONAT_RECH" ("PK_REL_STEUER_MONAT_RECH") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USER01" ;
--------------------------------------------------------
--  DDL for Index PK_T_INVENTARE
--------------------------------------------------------

  CREATE UNIQUE INDEX "COMPANY"."PK_T_INVENTARE" ON "COMPANY"."T_INVENTARE" ("PK_INVENTAR") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index T_REL_KONT_BUCH_LEX_BUCH_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "COMPANY"."T_REL_KONT_BUCH_LEX_BUCH_PK" ON "COMPANY"."T_REL_KONT_BUCH_LEX_BUCH" ("PK_REL_KONT_BUCH_LEX_BUCH") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USER01" ;
--------------------------------------------------------
--  DDL for Index PK_T_BESTELLUNG
--------------------------------------------------------

  CREATE UNIQUE INDEX "COMPANY"."PK_T_BESTELLUNG" ON "COMPANY"."T_BESTELLUNG" ("PK_BESTELLUNG") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index T_REL_GESCHAEFTSP_KONT_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "COMPANY"."T_REL_GESCHAEFTSP_KONT_PK" ON "COMPANY"."T_REL_GESCHAEFTSP_KONT" ("PK_REL_GP_KONT") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index PK_T_UMTAUSCHKURS
--------------------------------------------------------

  CREATE UNIQUE INDEX "COMPANY"."PK_T_UMTAUSCHKURS" ON "COMPANY"."T_UMTAUSCHKURS" ("PK_T_UMTAUSCHKURS") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index PK_T_BELEG
--------------------------------------------------------

  CREATE UNIQUE INDEX "COMPANY"."PK_T_BELEG" ON "COMPANY"."T_BELEG" ("PK_BELEG") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index PK_T_KONTAKTTYP
--------------------------------------------------------

  CREATE UNIQUE INDEX "COMPANY"."PK_T_KONTAKTTYP" ON "COMPANY"."T_KONTAKTTYP" ("PK_KONTAKTTYP") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index DEMO_CUSTOMERS_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "COMPANY"."DEMO_CUSTOMERS_PK" ON "COMPANY"."DEMO_CUSTOMERS" ("CUSTOMER_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USER01" ;
--------------------------------------------------------
--  DDL for Index PK_T_REL_BELEGART_GRP
--------------------------------------------------------

  CREATE UNIQUE INDEX "COMPANY"."PK_T_REL_BELEGART_GRP" ON "COMPANY"."T_REL_BELEGART_GRP" ("PK_REL_BELEGART_GRP") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USER01" ;
--------------------------------------------------------
--  DDL for Index PK_T_UMSATZART
--------------------------------------------------------

  CREATE UNIQUE INDEX "COMPANY"."PK_T_UMSATZART" ON "COMPANY"."T_UMSATZART" ("PK_UMSATZART") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USER01" ;
--------------------------------------------------------
--  DDL for Index T_STEUER_MONAT_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "COMPANY"."T_STEUER_MONAT_PK" ON "COMPANY"."T_STEUER_MONAT" ("PK_STEUER_MONAT") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USER01" ;
--------------------------------------------------------
--  DDL for Index T_STEUER_LOHN_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "COMPANY"."T_STEUER_LOHN_PK" ON "COMPANY"."T_STEUER_LOHN" ("PK_STEUER_LOHN") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USER01" ;
--------------------------------------------------------
--  DDL for Index T_REL_KONTO_AUSZUG_GIR_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "COMPANY"."T_REL_KONTO_AUSZUG_GIR_PK" ON "COMPANY"."T_REL_KONTO_AUSZUG_GIR" ("PK_REL_KONTO_AUSZUG_GIR") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USER01" ;
--------------------------------------------------------
--  DDL for Index T_KONTENPLAN_KONTEN_KAT_GR_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "COMPANY"."T_KONTENPLAN_KONTEN_KAT_GR_PK" ON "COMPANY"."T_KONTENPLAN_KONTEN_KAT_GRP" ("PK_KONTENPLAN_KONTEN_KAT_GRP") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USER01" ;
--------------------------------------------------------
--  DDL for Index PK_T_REL_BELEG_ARTIKEL
--------------------------------------------------------

  CREATE UNIQUE INDEX "COMPANY"."PK_T_REL_BELEG_ARTIKEL" ON "COMPANY"."T_REL_BELEG_ARTIKEL" ("PK_REL_BEL_ARTIKEL") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index T_STEUER_SATZ_LEX_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "COMPANY"."T_STEUER_SATZ_LEX_PK" ON "COMPANY"."T_STEUER_SATZ_LEX" ("PK_STEUER_SATZ_LEX") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USER01" ;
--------------------------------------------------------
--  DDL for Index T_KONTROLLE_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "COMPANY"."T_KONTROLLE_PK" ON "COMPANY"."T_KONTROLLE" ("PK_KONTROLLE") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USER01" ;
--------------------------------------------------------
--  DDL for Index INP_BELEGE_ALL_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "COMPANY"."INP_BELEGE_ALL_PK" ON "COMPANY"."INP_BELEGE_ALL" ("PK_INP_BELEGE_ALL") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USER01" ;
--------------------------------------------------------
--  DDL for Index PK_T_GESCHAEFTSPARTNERTYP
--------------------------------------------------------

  CREATE UNIQUE INDEX "COMPANY"."PK_T_GESCHAEFTSPARTNERTYP" ON "COMPANY"."T_GESCHAEFTSPARTNERTYP" ("PK_GESCHAEFTSPARTNERTYP") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index IMP_BA_KRANKENKASSE_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "COMPANY"."IMP_BA_KRANKENKASSE_PK" ON "COMPANY"."IMP_BA_KRANKENKASSE" ("PK_IMP_BA_KRANKENKASSE") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USER01" ;
--------------------------------------------------------
--  DDL for Index PK_T_PROJEKT_ART
--------------------------------------------------------

  CREATE UNIQUE INDEX "COMPANY"."PK_T_PROJEKT_ART" ON "COMPANY"."T_PROJEKT_ART" ("PK_PROJEKT_ART") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USER01" ;
--------------------------------------------------------
--  DDL for Index PK_T_PACKUNGSTYP
--------------------------------------------------------

  CREATE UNIQUE INDEX "COMPANY"."PK_T_PACKUNGSTYP" ON "COMPANY"."T_PACKUNGSTYP" ("PK_PACKKUNGSTYP") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index T_REL_BARGELD_BELEG_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "COMPANY"."T_REL_BARGELD_BELEG_PK" ON "COMPANY"."T_REL_BARGELD_BELEG" ("PK_REL_BARGELD") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USER01" ;
--------------------------------------------------------
--  DDL for Index PK_T_ARBEITSZEITEN
--------------------------------------------------------

  CREATE UNIQUE INDEX "COMPANY"."PK_T_ARBEITSZEITEN" ON "COMPANY"."T_ARBEITSZEITEN" ("PK_ARBEITSZEIT") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index T_REL_RECHNG_STUNDEN_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "COMPANY"."T_REL_RECHNG_STUNDEN_PK" ON "COMPANY"."T_REL_RECHNG_STUNDEN" ("PK_REL_RE_ST") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index PK_T_LAGERORT
--------------------------------------------------------

  CREATE UNIQUE INDEX "COMPANY"."PK_T_LAGERORT" ON "COMPANY"."T_LAGERORT" ("PK_LAGERORT") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index PK_T_ABSCHLUSSTYP
--------------------------------------------------------

  CREATE UNIQUE INDEX "COMPANY"."PK_T_ABSCHLUSSTYP" ON "COMPANY"."T_ABSCHLUSSTYP" ("PK_ABSCHLUSSTYP") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index PK_T_EINSENDEAUFGABE
--------------------------------------------------------

  CREATE UNIQUE INDEX "COMPANY"."PK_T_EINSENDEAUFGABE" ON "COMPANY"."T_EINSENDEAUFGABE" ("PK_EINSENDEAUFGABE") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index T_REL_INVENTAR_ARTIKEL_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "COMPANY"."T_REL_INVENTAR_ARTIKEL_PK" ON "COMPANY"."T_REL_INVENTAR_ARTIKEL" ("PK_REL_INV_ART") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index T_KONTENPLAN_KONTEN_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "COMPANY"."T_KONTENPLAN_KONTEN_PK" ON "COMPANY"."T_KONTENPLAN_KONTEN" ("PK_KONTENPLAN_KONTEN") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USER01" ;
--------------------------------------------------------
--  DDL for Index DEMO_CUST_NAME_IX
--------------------------------------------------------

  CREATE INDEX "COMPANY"."DEMO_CUST_NAME_IX" ON "COMPANY"."DEMO_CUSTOMERS" ("CUST_LAST_NAME", "CUST_FIRST_NAME") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USER01" ;
--------------------------------------------------------
--  DDL for Index IMP_BA_BEL_BUCH_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "COMPANY"."IMP_BA_BEL_BUCH_PK" ON "COMPANY"."IMP_BA_BEL_BUCH" ("IMP_BA_BEL_BUCH") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USER01" ;
--------------------------------------------------------
--  DDL for Index T_VERWENDUNGSZWECK_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "COMPANY"."T_VERWENDUNGSZWECK_PK" ON "COMPANY"."T_VERWENDUNGSZWECK" ("PK_VERWENDUNGSZWECK") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index T_REL_BEL_VERBRAUCHSMAT_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "COMPANY"."T_REL_BEL_VERBRAUCHSMAT_PK" ON "COMPANY"."T_REL_BEL_VERBRAUCHSMAT" ("PK_REL_BEL_VERBRAUCHSMAT") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index T_REL_ARTIKELTYP_ARTIKELTY_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "COMPANY"."T_REL_ARTIKELTYP_ARTIKELTY_PK" ON "COMPANY"."T_REL_ARTIKELTYP_ARTIKELTYP" ("PK_REL_ARTT_ARTT") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USER01" ;
--------------------------------------------------------
--  DDL for Index T_REL_PRODUKT_ENTNAHME_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "COMPANY"."T_REL_PRODUKT_ENTNAHME_PK" ON "COMPANY"."T_REL_PRODUKT_ENTNAHME" ("PK_REL_PROD_ENT") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index IMP_BA_TEXTILREINIGUNG_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "COMPANY"."IMP_BA_TEXTILREINIGUNG_PK" ON "COMPANY"."IMP_BA_TEXTILREINIGUNG" ("PK_IMP_BA_TEXTILREINIGUNG") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USER01" ;
--------------------------------------------------------
--  DDL for Index PK_T_FREMDWAEHRUNG
--------------------------------------------------------

  CREATE UNIQUE INDEX "COMPANY"."PK_T_FREMDWAEHRUNG" ON "COMPANY"."T_FREMDWAEHRUNG" ("PK_FREMDWAEHRUNG") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index T_VERBRAUCHSMAT_TYP_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "COMPANY"."T_VERBRAUCHSMAT_TYP_PK" ON "COMPANY"."T_VERBRAUCHSMAT_TYP" ("PK_VERBRAUCHSMAT_TYP") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index T_LEX_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "COMPANY"."T_LEX_PK" ON "COMPANY"."T_LEX" ("PK_LEX") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USER01" ;
--------------------------------------------------------
--  DDL for Index T_FRAGE_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "COMPANY"."T_FRAGE_PK" ON "COMPANY"."T_FRAGE" ("PK_FRAGE") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USER01" ;
--------------------------------------------------------
--  DDL for Index PK_T_REL_INVENTAR_ZAHLUNG
--------------------------------------------------------

  CREATE UNIQUE INDEX "COMPANY"."PK_T_REL_INVENTAR_ZAHLUNG" ON "COMPANY"."T_REL_INVENTAR_ZAHLUNG" ("PK_REL_INV_ZAHLUNG") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USER01" ;
--------------------------------------------------------
--  DDL for Index T_STD_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "COMPANY"."T_STD_PK" ON "COMPANY"."T_STD" ("PK_STD") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index PK_T_LEHRGANG
--------------------------------------------------------

  CREATE UNIQUE INDEX "COMPANY"."PK_T_LEHRGANG" ON "COMPANY"."T_LEHRGANG" ("PK_LEHRGANG") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index T_BEITRAG_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "COMPANY"."T_BEITRAG_PK" ON "COMPANY"."T_BEITRAG" ("PK_BEITRAG") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USER01" ;
--------------------------------------------------------
--  DDL for Index PK_T_REL_BELEG_LOCATION
--------------------------------------------------------

  CREATE UNIQUE INDEX "COMPANY"."PK_T_REL_BELEG_LOCATION" ON "COMPANY"."T_REL_BELEG_LOCATION" ("PK_REL_BEL_LOC") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index IMP_BA_ELEKTRONIK_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "COMPANY"."IMP_BA_ELEKTRONIK_PK" ON "COMPANY"."IMP_BA_ELEKTRONIK" ("PK_IMP_BA_ELEKTRONIK") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USER01" ;
--------------------------------------------------------
--  DDL for Index PK_T_ARTIKEL
--------------------------------------------------------

  CREATE UNIQUE INDEX "COMPANY"."PK_T_ARTIKEL" ON "COMPANY"."T_ARTIKEL" ("PK_ARTIKEL") 
  PCTFREE 10 INITRANS 2 MAXTRANS 167 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index IMP_BA_AUTOERSATZTEILE_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "COMPANY"."IMP_BA_AUTOERSATZTEILE_PK" ON "COMPANY"."IMP_BA_AUTOERSATZTEILE" ("PK_IMP_BA_AUTOERSATZTEILE") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USER01" ;
--------------------------------------------------------
--  DDL for Index T_REL_RECHNUNG_ZAHLUNG_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "COMPANY"."T_REL_RECHNUNG_ZAHLUNG_PK" ON "COMPANY"."T_REL_RECHNUNG_ZAHLUNG" ("PK_REL_RE_ZAHL") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USER01" ;
--------------------------------------------------------
--  DDL for Index IMP_BA_KFZ_VERSICHERUNGEN_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "COMPANY"."IMP_BA_KFZ_VERSICHERUNGEN_PK" ON "COMPANY"."IMP_BA_KFZ_VERSICHERUNGEN" ("PK_IMP_BA_KFZ_VERSICHERUNGEN") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USER01" ;
--------------------------------------------------------
--  DDL for Index T_REL_STEUER_LOHN_ZAHL_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "COMPANY"."T_REL_STEUER_LOHN_ZAHL_PK" ON "COMPANY"."T_REL_STEUER_LOHN_ZAHL" ("PK_REL_STEUER_LOHN_ZAHL") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USER01" ;
--------------------------------------------------------
--  DDL for Index KTO_Tagesgeldkonto_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "COMPANY"."KTO_Tagesgeldkonto_PK" ON "COMPANY"."KTO_Tagesgeldkonto" ("ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USER01" ;
--------------------------------------------------------
--  DDL for Index PK_T_REL_PROJ_ZAHLUNG
--------------------------------------------------------

  CREATE UNIQUE INDEX "COMPANY"."PK_T_REL_PROJ_ZAHLUNG" ON "COMPANY"."T_REL_PROJEKT_ZAHLUNG" ("PK_REL_PROJ_ZAHLUNG") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USER01" ;
--------------------------------------------------------
--  DDL for Index IMP_TEL_O2_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "COMPANY"."IMP_TEL_O2_PK" ON "COMPANY"."IMP_TEL_O2" ("PK_IMP_TEL_O2") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USER01" ;
--------------------------------------------------------
--  DDL for Index KTO_Kreditkarte_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "COMPANY"."KTO_Kreditkarte_PK" ON "COMPANY"."KTO_Kreditkarte" ("ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USER01" ;
--------------------------------------------------------
--  DDL for Index IMP_BA_HOTELRECHNUNGEN_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "COMPANY"."IMP_BA_HOTELRECHNUNGEN_PK" ON "COMPANY"."IMP_BA_HOTELRECHNUNGEN" ("PK_IMP_BA_HOTELRECHNUNGEN") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USER01" ;
--------------------------------------------------------
--  DDL for Index INP_BELEGE_POS_ALL_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "COMPANY"."INP_BELEGE_POS_ALL_PK" ON "COMPANY"."INP_BELEGE_POS_ALL" ("PK_INP_BELEGE_POS_ALL") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USER01" ;
--------------------------------------------------------
--  DDL for Index T_REL_RECHNUNG_BELEG_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "COMPANY"."T_REL_RECHNUNG_BELEG_PK" ON "COMPANY"."T_REL_RECHNUNG_BELEG" ("PK_REL_RE_BEL") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index KTO_Kreditkarte_INDEX2
--------------------------------------------------------

  CREATE INDEX "COMPANY"."KTO_Kreditkarte_INDEX2" ON "COMPANY"."KTO_Kreditkarte" ("Buchungstag") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USER01" ;
--------------------------------------------------------
--  DDL for Index DEMO_ORDER_ITEMS_UK
--------------------------------------------------------

  CREATE UNIQUE INDEX "COMPANY"."DEMO_ORDER_ITEMS_UK" ON "COMPANY"."DEMO_ORDER_ITEMS" ("ORDER_ID", "PRODUCT_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USER01" ;
--------------------------------------------------------
--  DDL for Index T_KONTOAUSZUG_BUCH_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "COMPANY"."T_KONTOAUSZUG_BUCH_PK" ON "COMPANY"."T_KONTO_BUCH" ("PK_KONTO_BUCH") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USER01" ;
--------------------------------------------------------
--  DDL for Index T_REL_BEL_KONT_ADR_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "COMPANY"."T_REL_BEL_KONT_ADR_PK" ON "COMPANY"."T_REL_BEL_KONT_ADR" ("PK_REL_BEL_KONT_ADR") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index PK_T_ARTIKELTYP
--------------------------------------------------------

  CREATE UNIQUE INDEX "COMPANY"."PK_T_ARTIKELTYP" ON "COMPANY"."T_ARTIKELTYP" ("PK_ARTIKELTYP") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index PK_T_PERSON
--------------------------------------------------------

  CREATE UNIQUE INDEX "COMPANY"."PK_T_PERSON" ON "COMPANY"."T_PERSON" ("PK_PERSON") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index T_REL_INV_VERBRAUCHSMAT_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "COMPANY"."T_REL_INV_VERBRAUCHSMAT_PK" ON "COMPANY"."T_REL_INV_VERBRAUCHSMAT" ("PK_REL_INV_VERBRAUCHSMAT") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index PK_T_BUENDELUNG
--------------------------------------------------------

  CREATE UNIQUE INDEX "COMPANY"."PK_T_BUENDELUNG" ON "COMPANY"."T_BUENDELUNG" ("PK_BUENDELUNG") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index IMP_BA_ALLG_BEL_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "COMPANY"."IMP_BA_ALLG_BEL_PK" ON "COMPANY"."IMP_BA_ALLG_BEL" ("PK_IMP_BA_ALLG_BEL") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USER01" ;
--------------------------------------------------------
--  DDL for Index T_STEUER_LOHNSTEUERKARTE_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "COMPANY"."T_STEUER_LOHNSTEUERKARTE_PK" ON "COMPANY"."T_STEUER_LOHNSTEUERKARTE" ("PK_STEUER_LOHNSTEUERKARTE") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USER01" ;
--------------------------------------------------------
--  DDL for Index PK_T_INVENTARTYP
--------------------------------------------------------

  CREATE UNIQUE INDEX "COMPANY"."PK_T_INVENTARTYP" ON "COMPANY"."T_INVENTARTYP" ("PK_INVENTARTYP") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index T_REL_LOCATION_ADRESSE_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "COMPANY"."T_REL_LOCATION_ADRESSE_PK" ON "COMPANY"."T_REL_LOCATION_ADRESSE" ("PK_REL_LOC_ADR") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index IMP_BA_TELEFONKARTEN_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "COMPANY"."IMP_BA_TELEFONKARTEN_PK" ON "COMPANY"."IMP_BA_TELEFONKARTEN" ("PK_IMP_BA_TELEFONKARTEN") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USER01" ;
--------------------------------------------------------
--  DDL for Index T_WAEHRUNG_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "COMPANY"."T_WAEHRUNG_PK" ON "COMPANY"."T_WAEHRUNG" ("PK_WAEHRUNG") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USER01" ;
--------------------------------------------------------
--  DDL for Index PK_T_PRUEFUNG
--------------------------------------------------------

  CREATE UNIQUE INDEX "COMPANY"."PK_T_PRUEFUNG" ON "COMPANY"."T_PRUEFUNG" ("PK_PRUEFUNG") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index T_REL_KONTENPLAN_KTO_KTO_K_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "COMPANY"."T_REL_KONTENPLAN_KTO_KTO_K_PK" ON "COMPANY"."T_REL_KONTENPLAN_KTO_KTO_KAT" ("PK_REL_KONTENPLAN_KTO_KTO_KAT") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USER01" ;
--------------------------------------------------------
--  DDL for Index T_STUNDENZETTEL_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "COMPANY"."T_STUNDENZETTEL_PK" ON "COMPANY"."T_STUNDENZETTEL" ("PK_STUNDENZETTEL") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index PK_T_BELEGART
--------------------------------------------------------

  CREATE UNIQUE INDEX "COMPANY"."PK_T_BELEGART" ON "COMPANY"."T_BELEGART" ("PK_BELEGART") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index PK_T_BANKKONTO
--------------------------------------------------------

  CREATE UNIQUE INDEX "COMPANY"."PK_T_BANKKONTO" ON "COMPANY"."T_BANKKONTO" ("PK_BANKKONTO") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index PK_T_ORT
--------------------------------------------------------

  CREATE UNIQUE INDEX "COMPANY"."PK_T_ORT" ON "COMPANY"."T_ORT" ("PK_ORT") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index PK_T_ARTIKELBESTANDTEILTYP
--------------------------------------------------------

  CREATE UNIQUE INDEX "COMPANY"."PK_T_ARTIKELBESTANDTEILTYP" ON "COMPANY"."T_ARTIKELBESTANDTEILTYP" ("PK_ARTIKELBESTTYP") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index PK_T_GESCHAEFTSPARTNER
--------------------------------------------------------

  CREATE UNIQUE INDEX "COMPANY"."PK_T_GESCHAEFTSPARTNER" ON "COMPANY"."T_GESCHAEFTSPARTNER" ("PK_GESCHAEFTSPARTNER") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index PK_T_REL_ARTIKEL_ARTIKELTYP
--------------------------------------------------------

  CREATE UNIQUE INDEX "COMPANY"."PK_T_REL_ARTIKEL_ARTIKELTYP" ON "COMPANY"."T_REL_ARTIKEL_ARTIKELTYP" ("PK_REL_ART_ARTT") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index PK_T_REL_BELEG_PRODUKT
--------------------------------------------------------

  CREATE UNIQUE INDEX "COMPANY"."PK_T_REL_BELEG_PRODUKT" ON "COMPANY"."T_REL_BELEG_PRODUKT" ("PK_REL_BEL_PROD") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index PK_T_FRMDW_UMTK
--------------------------------------------------------

  CREATE UNIQUE INDEX "COMPANY"."PK_T_FRMDW_UMTK" ON "COMPANY"."T_FRMDW_UMTK" ("PK_T_FRMDW_UMTK") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index PK_T_REL_PROJ_LOCATION
--------------------------------------------------------

  CREATE UNIQUE INDEX "COMPANY"."PK_T_REL_PROJ_LOCATION" ON "COMPANY"."T_REL_PROJEKT_LOCATION" ("PK_REL_PROJ_LOCATION") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USER01" ;
--------------------------------------------------------
--  DDL for Index KTO_Tagesgeldkonto_INDEX1
--------------------------------------------------------

  CREATE UNIQUE INDEX "COMPANY"."KTO_Tagesgeldkonto_INDEX1" ON "COMPANY"."KTO_Tagesgeldkonto" ("FK_MAIN_KEY") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USER01" ;
--------------------------------------------------------
--  DDL for Index T_REL_REZEPT_ARTIKEL_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "COMPANY"."T_REL_REZEPT_ARTIKEL_PK" ON "COMPANY"."T_REL_REZEPT_ARTIKEL" ("PK_REL_REZ_ART") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index IMP_BA_GRENZBELEGE_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "COMPANY"."IMP_BA_GRENZBELEGE_PK" ON "COMPANY"."IMP_BA_GRENZBELEGE" ("PK_IMP_BA_GRENZBELEGE") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USER01" ;
--------------------------------------------------------
--  DDL for Index IMP_TEL_MOBILCOM_RECH_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "COMPANY"."IMP_TEL_MOBILCOM_RECH_PK" ON "COMPANY"."IMP_TEL_MOBILCOM_RECH" ("PK_IMP_TEL_MOBILCOM_RECH") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USER01" ;
--------------------------------------------------------
--  DDL for Index KTO_Paypal_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "COMPANY"."KTO_Paypal_PK" ON "COMPANY"."KTO_Paypal" ("ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USER01" ;
--------------------------------------------------------
--  DDL for Index T_REL_STUNDENZETTEL_BELEG_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "COMPANY"."T_REL_STUNDENZETTEL_BELEG_PK" ON "COMPANY"."T_REL_STUNDENZETTEL_BELEG" ("PK_REL_STDZ_BEL") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index DEMO_ORD_CUSTOMER_IX
--------------------------------------------------------

  CREATE INDEX "COMPANY"."DEMO_ORD_CUSTOMER_IX" ON "COMPANY"."DEMO_ORDERS" ("CUSTOMER_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USER01" ;
--------------------------------------------------------
--  DDL for Index IMP_BA_TANKSTELLE_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "COMPANY"."IMP_BA_TANKSTELLE_PK" ON "COMPANY"."IMP_BA_TANKSTELLE" ("PK_IMP_BA_TANKSTELLE") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USER01" ;
--------------------------------------------------------
--  DDL for Index DEMO_TAGS_TYPE_SUM_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "COMPANY"."DEMO_TAGS_TYPE_SUM_PK" ON "COMPANY"."DEMO_TAGS_TYPE_SUM" ("TAG", "CONTENT_TYPE") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USER01" ;
--------------------------------------------------------
--  DDL for Index IMP_BA_PARKTICKETS_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "COMPANY"."IMP_BA_PARKTICKETS_PK" ON "COMPANY"."IMP_BA_PARKTICKETS" ("PK_IMP_BA_PARKTICKETS") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USER01" ;
--------------------------------------------------------
--  DDL for Index PK_T_PLZ_ORT
--------------------------------------------------------

  CREATE UNIQUE INDEX "COMPANY"."PK_T_PLZ_ORT" ON "COMPANY"."T_PLZ_ORT" ("PK_PLZ_ORT") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index DEMO_CUSTOMERS_UK
--------------------------------------------------------

  CREATE UNIQUE INDEX "COMPANY"."DEMO_CUSTOMERS_UK" ON "COMPANY"."DEMO_CUSTOMERS" ("CUST_FIRST_NAME", "CUST_LAST_NAME") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USER01" ;
--------------------------------------------------------
--  DDL for Index T_REL_KONT_BUCH_IMP_BEL_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "COMPANY"."T_REL_KONT_BUCH_IMP_BEL_PK" ON "COMPANY"."T_REL_KONT_BUCH_IMP_BEL" ("PK_REL_KONT_BUCH_IMP_BEL") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USER01" ;
--------------------------------------------------------
--  DDL for Index T_REL_RECHNUNG_STUNDENZETT_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "COMPANY"."T_REL_RECHNUNG_STUNDENZETT_PK" ON "COMPANY"."T_REL_RECHNUNG_STUNDENZETTEL" ("PK_REL_RE_STDZ") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index PK_T_KONTAKT
--------------------------------------------------------

  CREATE UNIQUE INDEX "COMPANY"."PK_T_KONTAKT" ON "COMPANY"."T_KONTAKT" ("PK_KONTAKT") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index PK_T_PROJEKT
--------------------------------------------------------

  CREATE UNIQUE INDEX "COMPANY"."PK_T_PROJEKT" ON "COMPANY"."T_PROJEKT" ("PK_PROJEKT") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index PK_T_ORGANISATIONSEINHEIT
--------------------------------------------------------

  CREATE UNIQUE INDEX "COMPANY"."PK_T_ORGANISATIONSEINHEIT" ON "COMPANY"."T_ORGANISATIONSEINHEIT" ("PK_ORGANISATIONSEINHEIT") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index T_REL_PRODUKT_ARTIKEL_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "COMPANY"."T_REL_PRODUKT_ARTIKEL_PK" ON "COMPANY"."T_REL_PRODUKT_ARTIKEL" ("PK_REL_PROD_ART") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index PK_T_RECHNUNGSTYP
--------------------------------------------------------

  CREATE UNIQUE INDEX "COMPANY"."PK_T_RECHNUNGSTYP" ON "COMPANY"."T_RECHNUNGSTYP" ("PK_RECHNUNGSTYP") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index PK_T_QUELLENTYP
--------------------------------------------------------

  CREATE UNIQUE INDEX "COMPANY"."PK_T_QUELLENTYP" ON "COMPANY"."T_QUELLENTYP" ("PK_QUELLENTYP") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Trigger bi_DL_IMP
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "COMPANY"."bi_DL_IMP" 
  before insert on "DL_IMP"              
  for each row 
begin  
  if :new."ID" is null then
    select "DL_IMP_SEQ".nextval into :new."ID" from sys.dual;
  end if;
end;

/
ALTER TRIGGER "COMPANY"."bi_DL_IMP" ENABLE;
--------------------------------------------------------
--  DDL for Trigger CONTR_KATEGORIE_ZAHLUNG_TRG
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "COMPANY"."CONTR_KATEGORIE_ZAHLUNG_TRG" 
BEFORE INSERT ON CONTR_KATEGORIE_ZAHLUNG 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    NULL;
  END COLUMN_SEQUENCES;
END;
/
ALTER TRIGGER "COMPANY"."CONTR_KATEGORIE_ZAHLUNG_TRG" ENABLE;
--------------------------------------------------------
--  DDL for Trigger CONTR_KATEGORIE_ZAHLUNG_TRG1
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "COMPANY"."CONTR_KATEGORIE_ZAHLUNG_TRG1" 
BEFORE INSERT ON CONTR_KATEGORIE_ZAHLUNG 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    IF INSERTING AND :NEW.PK_CONTR_KATEGORIE_ZAHLUNG IS NULL THEN
      SELECT CONTR_KATEGORIE_ZAHLUNG_SEQ.NEXTVAL INTO :NEW.PK_CONTR_KATEGORIE_ZAHLUNG FROM SYS.DUAL;
    END IF;
  END COLUMN_SEQUENCES;
END;
/
ALTER TRIGGER "COMPANY"."CONTR_KATEGORIE_ZAHLUNG_TRG1" ENABLE;
--------------------------------------------------------
--  DDL for Trigger DEMO_CUSTOMERS_BD
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "COMPANY"."DEMO_CUSTOMERS_BD" 
    before delete on demo_customers
    for each row
begin
    sample_pkg.demo_tag_sync(
        p_new_tags      => null,
        p_old_tags      => :old.tags,
        p_content_type  => 'CUSTOMER',
        p_content_id    => :old.customer_id );
end;

/
ALTER TRIGGER "COMPANY"."DEMO_CUSTOMERS_BD" ENABLE;
--------------------------------------------------------
--  DDL for Trigger DEMO_CUSTOMERS_BIU
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "COMPANY"."DEMO_CUSTOMERS_BIU" 
  before insert or update ON demo_customers FOR EACH ROW
DECLARE
  cust_id number;
BEGIN
  if inserting then  
    if :new.customer_id is null then
      select demo_cust_seq.nextval
        into cust_id
        from dual;
      :new.customer_id := cust_id;
    end if;
    if :new.tags is not null then
          :new.tags := sample_pkg.demo_tags_cleaner(:new.tags);
    end if;
  end if;
  sample_pkg.demo_tag_sync(
     p_new_tags      => :new.tags,
     p_old_tags      => :old.tags,
     p_content_type  => 'CUSTOMER',
     p_content_id    => :new.customer_id );
END;

/
ALTER TRIGGER "COMPANY"."DEMO_CUSTOMERS_BIU" ENABLE;
--------------------------------------------------------
--  DDL for Trigger DEMO_ORDER_ITEMS_AIUD_TOTAL
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "COMPANY"."DEMO_ORDER_ITEMS_AIUD_TOTAL" 
  after insert or update or delete on demo_order_items
begin
  -- Update the Order Total when any order item is changed
  update demo_orders set order_total =
  (select sum(unit_price*quantity) from demo_order_items
    where demo_order_items.order_id = demo_orders.order_id);
end;

/
ALTER TRIGGER "COMPANY"."DEMO_ORDER_ITEMS_AIUD_TOTAL" ENABLE;
--------------------------------------------------------
--  DDL for Trigger DEMO_ORDER_ITEMS_BI
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "COMPANY"."DEMO_ORDER_ITEMS_BI" 
  BEFORE insert on "DEMO_ORDER_ITEMS" for each row
declare
  order_item_id number;
begin
  if :new.order_item_id is null then
    select demo_order_items_seq.nextval 
      into order_item_id 
      from dual;
    :new.order_item_id := order_item_id;
  end if;
end;

/
ALTER TRIGGER "COMPANY"."DEMO_ORDER_ITEMS_BI" ENABLE;
--------------------------------------------------------
--  DDL for Trigger DEMO_ORDER_ITEMS_BIU_GET_PRICE
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "COMPANY"."DEMO_ORDER_ITEMS_BIU_GET_PRICE" 
  before insert or update on demo_order_items for each row
declare
  l_list_price number;
begin
  if :new.unit_price is null then
    -- First, we need to get the current list price of the order line item
    select list_price
    into l_list_price
    from demo_product_info
    where product_id = :new.product_id;
    -- Once we have the correct price, we will update the order line with the correct price
    :new.unit_price := l_list_price;
  end if;
end;

/
ALTER TRIGGER "COMPANY"."DEMO_ORDER_ITEMS_BIU_GET_PRICE" ENABLE;
--------------------------------------------------------
--  DDL for Trigger DEMO_ORDERS_BD
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "COMPANY"."DEMO_ORDERS_BD" 
    before delete on demo_orders
    for each row
begin
    sample_pkg.demo_tag_sync(
        p_new_tags      => null,
        p_old_tags      => :old.tags,
        p_content_type  => 'ORDER',
        p_content_id    => :old.order_id );
end;

/
ALTER TRIGGER "COMPANY"."DEMO_ORDERS_BD" ENABLE;
--------------------------------------------------------
--  DDL for Trigger DEMO_ORDERS_BIU
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "COMPANY"."DEMO_ORDERS_BIU" 
  before insert or update ON demo_orders FOR EACH ROW
DECLARE
  order_id number;
BEGIN
  if inserting then  
    if :new.order_id is null then
      select demo_ord_seq.nextval
        INTO order_id
        FROM dual;
      :new.order_id := order_id;
    end if;
    if :new.tags is not null then
       :new.tags := sample_pkg.demo_tags_cleaner(:new.tags);
    end if;
  end if;
  
  sample_pkg.demo_tag_sync(
    p_new_tags      => :new.tags,
    p_old_tags      => :old.tags,
    p_content_type  => 'ORDER',
    p_content_id    => :new.order_id );
END;

/
ALTER TRIGGER "COMPANY"."DEMO_ORDERS_BIU" ENABLE;
--------------------------------------------------------
--  DDL for Trigger DEMO_PRODUCT_INFO_BD
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "COMPANY"."DEMO_PRODUCT_INFO_BD" 
    before delete on demo_product_info
    for each row
begin
    sample_pkg.demo_tag_sync(
        p_new_tags      => null,
        p_old_tags      => :old.tags,
        p_content_type  => 'PRODUCT',
        p_content_id    => :old.product_id );
end;

/
ALTER TRIGGER "COMPANY"."DEMO_PRODUCT_INFO_BD" ENABLE;
--------------------------------------------------------
--  DDL for Trigger DEMO_PRODUCT_INFO_BIU
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "COMPANY"."DEMO_PRODUCT_INFO_BIU" 
  before insert or update ON demo_product_info FOR EACH ROW
DECLARE
  prod_id number;
BEGIN
  if inserting then  
    if :new.product_id is null then
      select demo_prod_seq.nextval
        into prod_id
        from dual;
      :new.product_id := prod_id;
    end if;
    if :new.tags is not null then
          :new.tags := sample_pkg.demo_tags_cleaner(:new.tags);
    end if;
  end if;
  sample_pkg.demo_tag_sync(
    p_new_tags      => :new.tags,
    p_old_tags      => :old.tags,
    p_content_type  => 'PRODUCT',
    p_content_id    => :new.product_id );
END;

/
ALTER TRIGGER "COMPANY"."DEMO_PRODUCT_INFO_BIU" ENABLE;
--------------------------------------------------------
--  DDL for Trigger DEMO_TAGS_BIU
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "COMPANY"."DEMO_TAGS_BIU" 
   before insert or update on demo_tags
   for each row
   begin
      if inserting then
         if :NEW.ID is null then
           select to_number(sys_guid(),'XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX')
           into :new.id
           from dual;
         end if;
         :NEW.CREATED := localtimestamp;
         :NEW.CREATED_BY := nvl(v('APP_USER'),USER);
      end if;
      if updating then
         :NEW.UPDATED := localtimestamp;
         :NEW.UPDATED_BY := nvl(v('APP_USER'),USER);
      end if;
end;

/
ALTER TRIGGER "COMPANY"."DEMO_TAGS_BIU" ENABLE;
--------------------------------------------------------
--  DDL for Trigger DEPT_TRG1
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "COMPANY"."DEPT_TRG1" 
              before insert on dept
              for each row
              begin
                  if :new.deptno is null then
                      select dept_seq.nextval into :new.deptno from sys.dual;
                 end if;
              end;
/
ALTER TRIGGER "COMPANY"."DEPT_TRG1" ENABLE;
--------------------------------------------------------
--  DDL for Trigger EMP_TRG1
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "COMPANY"."EMP_TRG1" 
              before insert on emp
              for each row
              begin
                  if :new.empno is null then
                      select emp_seq.nextval into :new.empno from sys.dual;
                 end if;
              end;
/
ALTER TRIGGER "COMPANY"."EMP_TRG1" ENABLE;
--------------------------------------------------------
--  DDL for Trigger IMP_BA_ALLG_BEL_TRG
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "COMPANY"."IMP_BA_ALLG_BEL_TRG" 
BEFORE INSERT ON IMP_BA_ALLG_BEL 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    NULL;
  END COLUMN_SEQUENCES;
END;
/
ALTER TRIGGER "COMPANY"."IMP_BA_ALLG_BEL_TRG" ENABLE;
--------------------------------------------------------
--  DDL for Trigger IMP_BA_ALLG_BEL_TRG1
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "COMPANY"."IMP_BA_ALLG_BEL_TRG1" 
BEFORE INSERT ON IMP_BA_ALLG_BEL 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    NULL;
  END COLUMN_SEQUENCES;
END;
/
ALTER TRIGGER "COMPANY"."IMP_BA_ALLG_BEL_TRG1" ENABLE;
--------------------------------------------------------
--  DDL for Trigger IMP_BA_ALLG_BEL_TRG2
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "COMPANY"."IMP_BA_ALLG_BEL_TRG2" 
BEFORE INSERT ON IMP_BA_ALLG_BEL 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    NULL;
  END COLUMN_SEQUENCES;
END;
/
ALTER TRIGGER "COMPANY"."IMP_BA_ALLG_BEL_TRG2" ENABLE;
--------------------------------------------------------
--  DDL for Trigger IMP_BA_ALLG_BEL_TRG3
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "COMPANY"."IMP_BA_ALLG_BEL_TRG3" 
BEFORE INSERT ON IMP_BA_ALLG_BEL 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    NULL;
  END COLUMN_SEQUENCES;
END;
/
ALTER TRIGGER "COMPANY"."IMP_BA_ALLG_BEL_TRG3" ENABLE;
--------------------------------------------------------
--  DDL for Trigger IMP_BA_ALLG_BEL_TRG4
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "COMPANY"."IMP_BA_ALLG_BEL_TRG4" 
BEFORE INSERT ON IMP_BA_ALLG_BEL 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    NULL;
  END COLUMN_SEQUENCES;
END;
/
ALTER TRIGGER "COMPANY"."IMP_BA_ALLG_BEL_TRG4" ENABLE;
--------------------------------------------------------
--  DDL for Trigger IMP_BA_ALLG_BEL_TRG5
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "COMPANY"."IMP_BA_ALLG_BEL_TRG5" 
BEFORE INSERT ON IMP_BA_ALLG_BEL 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    NULL;
  END COLUMN_SEQUENCES;
END;
/
ALTER TRIGGER "COMPANY"."IMP_BA_ALLG_BEL_TRG5" ENABLE;
--------------------------------------------------------
--  DDL for Trigger IMP_BA_ALLG_BEL_TRG6
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "COMPANY"."IMP_BA_ALLG_BEL_TRG6" 
BEFORE INSERT ON IMP_BA_ALLG_BEL 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    NULL;
  END COLUMN_SEQUENCES;
END;
/
ALTER TRIGGER "COMPANY"."IMP_BA_ALLG_BEL_TRG6" ENABLE;
--------------------------------------------------------
--  DDL for Trigger IMP_BA_ALLG_BEL_TRG7
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "COMPANY"."IMP_BA_ALLG_BEL_TRG7" 
BEFORE INSERT ON IMP_BA_ALLG_BEL 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    NULL;
  END COLUMN_SEQUENCES;
END;
/
ALTER TRIGGER "COMPANY"."IMP_BA_ALLG_BEL_TRG7" ENABLE;
--------------------------------------------------------
--  DDL for Trigger IMP_BA_ALLG_BEL_TRG8
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "COMPANY"."IMP_BA_ALLG_BEL_TRG8" 
BEFORE INSERT ON IMP_BA_ALLG_BEL 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    IF INSERTING AND :NEW.FK_BELEG_ABLAGE IS NULL THEN
      SELECT IMP_BA_ALLG_BEL_SEQ.NEXTVAL INTO :NEW.FK_BELEG_ABLAGE FROM SYS.DUAL;
    END IF;
  END COLUMN_SEQUENCES;
END;
/
ALTER TRIGGER "COMPANY"."IMP_BA_ALLG_BEL_TRG8" ENABLE;
--------------------------------------------------------
--  DDL for Trigger IMP_BA_ALLG_BEL_TRG9
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "COMPANY"."IMP_BA_ALLG_BEL_TRG9" 
BEFORE INSERT ON IMP_BA_ALLG_BEL 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    IF INSERTING AND :NEW.PK_IMP_BA_ALLG_BEL IS NULL THEN
      SELECT IMP_BA_ALLG_BEL_SEQ.NEXTVAL INTO :NEW.PK_IMP_BA_ALLG_BEL FROM SYS.DUAL;
    END IF;
  END COLUMN_SEQUENCES;
END;
/
ALTER TRIGGER "COMPANY"."IMP_BA_ALLG_BEL_TRG9" ENABLE;
--------------------------------------------------------
--  DDL for Trigger IMP_BA_AUTOERSATZTEILE_TRG
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "COMPANY"."IMP_BA_AUTOERSATZTEILE_TRG" 
BEFORE INSERT ON IMP_BA_AUTOERSATZTEILE 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    NULL;
  END COLUMN_SEQUENCES;
END;
/
ALTER TRIGGER "COMPANY"."IMP_BA_AUTOERSATZTEILE_TRG" ENABLE;
--------------------------------------------------------
--  DDL for Trigger IMP_BA_AUTOERSATZTEILE_TRG1
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "COMPANY"."IMP_BA_AUTOERSATZTEILE_TRG1" 
BEFORE INSERT ON IMP_BA_AUTOERSATZTEILE 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    IF INSERTING AND :NEW.PK_IMP_BA_AUTOERSATZTEILE IS NULL THEN
      SELECT IMP_BA_AUTOERSATZTEILE_SEQ.NEXTVAL INTO :NEW.PK_IMP_BA_AUTOERSATZTEILE FROM SYS.DUAL;
    END IF;
  END COLUMN_SEQUENCES;
END;
/
ALTER TRIGGER "COMPANY"."IMP_BA_AUTOERSATZTEILE_TRG1" ENABLE;
--------------------------------------------------------
--  DDL for Trigger IMP_BA_BUSSGELDER_TRG
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "COMPANY"."IMP_BA_BUSSGELDER_TRG" 
BEFORE INSERT ON IMP_BA_BUSSGELDER 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    NULL;
  END COLUMN_SEQUENCES;
END;
/
ALTER TRIGGER "COMPANY"."IMP_BA_BUSSGELDER_TRG" ENABLE;
--------------------------------------------------------
--  DDL for Trigger IMP_BA_BUSSGELDER_TRG1
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "COMPANY"."IMP_BA_BUSSGELDER_TRG1" 
BEFORE INSERT ON IMP_BA_BUSSGELDER 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    IF INSERTING AND :NEW.PK_IMP_BA_BUSSGELDER IS NULL THEN
      SELECT IMP_BA_BUSSGELDER_SEQ.NEXTVAL INTO :NEW.PK_IMP_BA_BUSSGELDER FROM SYS.DUAL;
    END IF;
  END COLUMN_SEQUENCES;
END;
/
ALTER TRIGGER "COMPANY"."IMP_BA_BUSSGELDER_TRG1" ENABLE;
--------------------------------------------------------
--  DDL for Trigger IMP_BA_CARMIETE_TRG
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "COMPANY"."IMP_BA_CARMIETE_TRG" 
BEFORE INSERT ON IMP_BA_CARMIETE 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    NULL;
  END COLUMN_SEQUENCES;
END;
/
ALTER TRIGGER "COMPANY"."IMP_BA_CARMIETE_TRG" ENABLE;
--------------------------------------------------------
--  DDL for Trigger IMP_BA_ELEKTRONIK_TRG
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "COMPANY"."IMP_BA_ELEKTRONIK_TRG" 
BEFORE INSERT ON IMP_BA_ELEKTRONIK 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    NULL;
  END COLUMN_SEQUENCES;
END;
/
ALTER TRIGGER "COMPANY"."IMP_BA_ELEKTRONIK_TRG" ENABLE;
--------------------------------------------------------
--  DDL for Trigger IMP_BA_ELEKTRONIK_TRG1
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "COMPANY"."IMP_BA_ELEKTRONIK_TRG1" 
BEFORE INSERT ON IMP_BA_ELEKTRONIK 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    IF INSERTING AND :NEW.PK_IMP_BA_ELEKTRONIK IS NULL THEN
      SELECT IMP_BA_ELEKTRONIK_SEQ.NEXTVAL INTO :NEW.PK_IMP_BA_ELEKTRONIK FROM SYS.DUAL;
    END IF;
  END COLUMN_SEQUENCES;
END;
/
ALTER TRIGGER "COMPANY"."IMP_BA_ELEKTRONIK_TRG1" ENABLE;
--------------------------------------------------------
--  DDL for Trigger IMP_BA_GRENZBELEGE_TRG
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "COMPANY"."IMP_BA_GRENZBELEGE_TRG" 
BEFORE INSERT ON IMP_BA_GRENZBELEGE 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    IF INSERTING AND :NEW.PK_IMP_BA_GRENZBELEGE IS NULL THEN
      SELECT IMP_BA_GRENZBELEGE_SEQ.NEXTVAL INTO :NEW.PK_IMP_BA_GRENZBELEGE FROM SYS.DUAL;
    END IF;
  END COLUMN_SEQUENCES;
END;
/
ALTER TRIGGER "COMPANY"."IMP_BA_GRENZBELEGE_TRG" ENABLE;
--------------------------------------------------------
--  DDL for Trigger IMP_BA_HOTELRECHNUNGEN_TRG
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "COMPANY"."IMP_BA_HOTELRECHNUNGEN_TRG" 
BEFORE INSERT ON IMP_BA_HOTELRECHNUNGEN 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    NULL;
  END COLUMN_SEQUENCES;
END;
/
ALTER TRIGGER "COMPANY"."IMP_BA_HOTELRECHNUNGEN_TRG" ENABLE;
--------------------------------------------------------
--  DDL for Trigger IMP_BA_HOTELRECHNUNGEN_TRG1
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "COMPANY"."IMP_BA_HOTELRECHNUNGEN_TRG1" 
BEFORE INSERT ON IMP_BA_HOTELRECHNUNGEN 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    NULL;
  END COLUMN_SEQUENCES;
END;
/
ALTER TRIGGER "COMPANY"."IMP_BA_HOTELRECHNUNGEN_TRG1" ENABLE;
--------------------------------------------------------
--  DDL for Trigger IMP_BA_HOTELRECHNUNGEN_TRG2
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "COMPANY"."IMP_BA_HOTELRECHNUNGEN_TRG2" 
BEFORE INSERT ON IMP_BA_HOTELRECHNUNGEN 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    NULL;
  END COLUMN_SEQUENCES;
END;
/
ALTER TRIGGER "COMPANY"."IMP_BA_HOTELRECHNUNGEN_TRG2" ENABLE;
--------------------------------------------------------
--  DDL for Trigger IMP_BA_KRANKENKASSE_TRG
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "COMPANY"."IMP_BA_KRANKENKASSE_TRG" 
BEFORE INSERT ON IMP_BA_KRANKENKASSE 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    NULL;
  END COLUMN_SEQUENCES;
END;
/
ALTER TRIGGER "COMPANY"."IMP_BA_KRANKENKASSE_TRG" ENABLE;
--------------------------------------------------------
--  DDL for Trigger IMP_BA_KRANKENKASSE_TRG1
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "COMPANY"."IMP_BA_KRANKENKASSE_TRG1" 
BEFORE INSERT ON IMP_BA_KRANKENKASSE 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    NULL;
  END COLUMN_SEQUENCES;
END;
/
ALTER TRIGGER "COMPANY"."IMP_BA_KRANKENKASSE_TRG1" ENABLE;
--------------------------------------------------------
--  DDL for Trigger IMP_BA_KRANKENKASSE_TRG2
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "COMPANY"."IMP_BA_KRANKENKASSE_TRG2" 
BEFORE INSERT ON IMP_BA_KRANKENKASSE 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    NULL;
  END COLUMN_SEQUENCES;
END;
/
ALTER TRIGGER "COMPANY"."IMP_BA_KRANKENKASSE_TRG2" ENABLE;
--------------------------------------------------------
--  DDL for Trigger IMP_BA_KRANKENKASSE_TRG3
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "COMPANY"."IMP_BA_KRANKENKASSE_TRG3" 
BEFORE INSERT ON IMP_BA_KRANKENKASSE 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    NULL;
  END COLUMN_SEQUENCES;
END;
/
ALTER TRIGGER "COMPANY"."IMP_BA_KRANKENKASSE_TRG3" ENABLE;
--------------------------------------------------------
--  DDL for Trigger IMP_BA_OEFFENTL_TICKETS_TRG
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "COMPANY"."IMP_BA_OEFFENTL_TICKETS_TRG" 
BEFORE INSERT ON IMP_BA_OEFFENTL_TICKETS 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    NULL;
  END COLUMN_SEQUENCES;
END;
/
ALTER TRIGGER "COMPANY"."IMP_BA_OEFFENTL_TICKETS_TRG" ENABLE;
--------------------------------------------------------
--  DDL for Trigger IMP_BA_OEFFENTL_TICKETS_TRG1
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "COMPANY"."IMP_BA_OEFFENTL_TICKETS_TRG1" 
BEFORE INSERT ON IMP_BA_OEFFENTL_TICKETS 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    NULL;
  END COLUMN_SEQUENCES;
END;
/
ALTER TRIGGER "COMPANY"."IMP_BA_OEFFENTL_TICKETS_TRG1" ENABLE;
--------------------------------------------------------
--  DDL for Trigger IMP_BA_OEFFENTL_TICKETS_TRG2
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "COMPANY"."IMP_BA_OEFFENTL_TICKETS_TRG2" 
BEFORE INSERT ON IMP_BA_OEFFENTL_TICKETS 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    IF INSERTING AND :NEW.PK_IMP_BA_OEFFENTL_TICKETS IS NULL THEN
      SELECT IMP_BA_OEFFENTL_TICKETS_SEQ.NEXTVAL INTO :NEW.PK_IMP_BA_OEFFENTL_TICKETS FROM SYS.DUAL;
    END IF;
  END COLUMN_SEQUENCES;
END;
/
ALTER TRIGGER "COMPANY"."IMP_BA_OEFFENTL_TICKETS_TRG2" ENABLE;
--------------------------------------------------------
--  DDL for Trigger IMP_BA_PARKTICKETS_TRG
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "COMPANY"."IMP_BA_PARKTICKETS_TRG" 
BEFORE INSERT ON IMP_BA_PARKTICKETS 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    NULL;
  END COLUMN_SEQUENCES;
END;
/
ALTER TRIGGER "COMPANY"."IMP_BA_PARKTICKETS_TRG" ENABLE;
--------------------------------------------------------
--  DDL for Trigger IMP_BA_PARKTICKETS_TRG1
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "COMPANY"."IMP_BA_PARKTICKETS_TRG1" 
BEFORE INSERT ON IMP_BA_PARKTICKETS 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    NULL;
  END COLUMN_SEQUENCES;
END;
/
ALTER TRIGGER "COMPANY"."IMP_BA_PARKTICKETS_TRG1" ENABLE;
--------------------------------------------------------
--  DDL for Trigger IMP_BA_PARKTICKETS_TRG2
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "COMPANY"."IMP_BA_PARKTICKETS_TRG2" 
BEFORE INSERT ON IMP_BA_PARKTICKETS 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    IF INSERTING AND :NEW.PK_IMP_BA_PARKTICKETS IS NULL THEN
      SELECT IMP_BA_PARKTICKETS_SEQ.NEXTVAL INTO :NEW.PK_IMP_BA_PARKTICKETS FROM SYS.DUAL;
    END IF;
  END COLUMN_SEQUENCES;
END;
/
ALTER TRIGGER "COMPANY"."IMP_BA_PARKTICKETS_TRG2" ENABLE;
--------------------------------------------------------
--  DDL for Trigger IMP_BA_SOFTWARE_TRG
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "COMPANY"."IMP_BA_SOFTWARE_TRG" 
BEFORE INSERT ON IMP_BA_SOFTWARE 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    NULL;
  END COLUMN_SEQUENCES;
END;
/
ALTER TRIGGER "COMPANY"."IMP_BA_SOFTWARE_TRG" ENABLE;
--------------------------------------------------------
--  DDL for Trigger IMP_BA_SONSTIGE_BELEGE_TRG
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "COMPANY"."IMP_BA_SONSTIGE_BELEGE_TRG" 
BEFORE INSERT ON IMP_BA_SONSTIGE_BELEGE 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    IF INSERTING AND :NEW.PK_IMP_BA_SONSTIGE_BELEGE IS NULL THEN
      SELECT IMP_BA_SONSTIGE_BELEGE_SEQ.NEXTVAL INTO :NEW.PK_IMP_BA_SONSTIGE_BELEGE FROM SYS.DUAL;
    END IF;
  END COLUMN_SEQUENCES;
END;
/
ALTER TRIGGER "COMPANY"."IMP_BA_SONSTIGE_BELEGE_TRG" ENABLE;
--------------------------------------------------------
--  DDL for Trigger IMP_BA_TANKSTELLE_TRG
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "COMPANY"."IMP_BA_TANKSTELLE_TRG" 
BEFORE INSERT ON IMP_BA_TANKSTELLE 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    NULL;
  END COLUMN_SEQUENCES;
END;
/
ALTER TRIGGER "COMPANY"."IMP_BA_TANKSTELLE_TRG" ENABLE;
--------------------------------------------------------
--  DDL for Trigger IMP_BA_TANKSTELLE_TRG1
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "COMPANY"."IMP_BA_TANKSTELLE_TRG1" 
BEFORE INSERT ON IMP_BA_TANKSTELLE 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    NULL;
  END COLUMN_SEQUENCES;
END;
/
ALTER TRIGGER "COMPANY"."IMP_BA_TANKSTELLE_TRG1" ENABLE;
--------------------------------------------------------
--  DDL for Trigger IMP_BA_TANKSTELLE_TRG2
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "COMPANY"."IMP_BA_TANKSTELLE_TRG2" 
BEFORE INSERT ON IMP_BA_TANKSTELLE 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    NULL;
  END COLUMN_SEQUENCES;
END;
/
ALTER TRIGGER "COMPANY"."IMP_BA_TANKSTELLE_TRG2" ENABLE;
--------------------------------------------------------
--  DDL for Trigger IMP_BA_TANKSTELLE_TRG3
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "COMPANY"."IMP_BA_TANKSTELLE_TRG3" 
BEFORE INSERT ON IMP_BA_TANKSTELLE 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    IF INSERTING AND :NEW.PK_IMP_BA_TANKSTELLE IS NULL THEN
      SELECT IMP_BA_TANKSTELLE_SEQ.NEXTVAL INTO :NEW.PK_IMP_BA_TANKSTELLE FROM SYS.DUAL;
    END IF;
  END COLUMN_SEQUENCES;
END;
/
ALTER TRIGGER "COMPANY"."IMP_BA_TANKSTELLE_TRG3" ENABLE;
--------------------------------------------------------
--  DDL for Trigger IMP_BA_TELEFONKARTEN_TRG
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "COMPANY"."IMP_BA_TELEFONKARTEN_TRG" 
BEFORE INSERT ON IMP_BA_TELEFONKARTEN 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    NULL;
  END COLUMN_SEQUENCES;
END;
/
ALTER TRIGGER "COMPANY"."IMP_BA_TELEFONKARTEN_TRG" ENABLE;
--------------------------------------------------------
--  DDL for Trigger IMP_BA_TEXTILREINIGUNG_TRG
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "COMPANY"."IMP_BA_TEXTILREINIGUNG_TRG" 
BEFORE INSERT ON IMP_BA_TEXTILREINIGUNG 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    NULL;
  END COLUMN_SEQUENCES;
END;
/
ALTER TRIGGER "COMPANY"."IMP_BA_TEXTILREINIGUNG_TRG" ENABLE;
--------------------------------------------------------
--  DDL for Trigger IMP_BA_TEXTILREINIGUNG_TRG1
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "COMPANY"."IMP_BA_TEXTILREINIGUNG_TRG1" 
BEFORE INSERT ON IMP_BA_TEXTILREINIGUNG 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    IF INSERTING AND :NEW.PK_IMP_BA_TEXTILREINIGUNG IS NULL THEN
      SELECT IMP_BA_TEXTILREINIGUNG_SEQ.NEXTVAL INTO :NEW.PK_IMP_BA_TEXTILREINIGUNG FROM SYS.DUAL;
    END IF;
  END COLUMN_SEQUENCES;
END;
/
ALTER TRIGGER "COMPANY"."IMP_BA_TEXTILREINIGUNG_TRG1" ENABLE;
--------------------------------------------------------
--  DDL for Trigger IMP_TEL_MOBILCOM_RECH_TRG
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "COMPANY"."IMP_TEL_MOBILCOM_RECH_TRG" 
BEFORE INSERT ON IMP_TEL_MOBILCOM_RECH 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    NULL;
  END COLUMN_SEQUENCES;
END;
/
ALTER TRIGGER "COMPANY"."IMP_TEL_MOBILCOM_RECH_TRG" ENABLE;
--------------------------------------------------------
--  DDL for Trigger IMP_TEL_MOBILCOM_RECH_TRG1
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "COMPANY"."IMP_TEL_MOBILCOM_RECH_TRG1" 
BEFORE INSERT ON IMP_TEL_MOBILCOM_RECH 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    IF INSERTING AND :NEW.PK_IMP_TEL_MOBILCOM_RECH IS NULL THEN
      SELECT IMP_TEL_MOBILCOM_RECH_SEQ1.NEXTVAL INTO :NEW.PK_IMP_TEL_MOBILCOM_RECH FROM SYS.DUAL;
    END IF;
  END COLUMN_SEQUENCES;
END;
/
ALTER TRIGGER "COMPANY"."IMP_TEL_MOBILCOM_RECH_TRG1" ENABLE;
--------------------------------------------------------
--  DDL for Trigger IMP_TEL_O2_TRG
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "COMPANY"."IMP_TEL_O2_TRG" 
BEFORE INSERT ON IMP_TEL_O2 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    IF INSERTING AND :NEW.PK IS NULL THEN
      SELECT IMP_TEL_O2_SEQ.NEXTVAL INTO :NEW.PK FROM SYS.DUAL;
    END IF;
  END COLUMN_SEQUENCES;
END;
/
ALTER TRIGGER "COMPANY"."IMP_TEL_O2_TRG" ENABLE;
--------------------------------------------------------
--  DDL for Trigger INP_BELEGE_ALL_TRG
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "COMPANY"."INP_BELEGE_ALL_TRG" 
BEFORE INSERT ON INP_BELEGE_ALL 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    NULL;
  END COLUMN_SEQUENCES;
END;
/
ALTER TRIGGER "COMPANY"."INP_BELEGE_ALL_TRG" ENABLE;
--------------------------------------------------------
--  DDL for Trigger INP_BELEGE_ALL_TRG1
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "COMPANY"."INP_BELEGE_ALL_TRG1" 
BEFORE INSERT ON INP_BELEGE_ALL 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    NULL;
  END COLUMN_SEQUENCES;
END;
/
ALTER TRIGGER "COMPANY"."INP_BELEGE_ALL_TRG1" ENABLE;
--------------------------------------------------------
--  DDL for Trigger INP_BELEGE_ALL_TRG10
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "COMPANY"."INP_BELEGE_ALL_TRG10" 
BEFORE INSERT ON INP_BELEGE_ALL 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    NULL;
  END COLUMN_SEQUENCES;
END;
/
ALTER TRIGGER "COMPANY"."INP_BELEGE_ALL_TRG10" ENABLE;
--------------------------------------------------------
--  DDL for Trigger INP_BELEGE_ALL_TRG11
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "COMPANY"."INP_BELEGE_ALL_TRG11" 
BEFORE INSERT ON INP_BELEGE_ALL 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    NULL;
  END COLUMN_SEQUENCES;
END;
/
ALTER TRIGGER "COMPANY"."INP_BELEGE_ALL_TRG11" ENABLE;
--------------------------------------------------------
--  DDL for Trigger INP_BELEGE_ALL_TRG12
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "COMPANY"."INP_BELEGE_ALL_TRG12" 
BEFORE INSERT ON INP_BELEGE_ALL 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    NULL;
  END COLUMN_SEQUENCES;
END;
/
ALTER TRIGGER "COMPANY"."INP_BELEGE_ALL_TRG12" ENABLE;
--------------------------------------------------------
--  DDL for Trigger INP_BELEGE_ALL_TRG13
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "COMPANY"."INP_BELEGE_ALL_TRG13" 
BEFORE INSERT ON INP_BELEGE_ALL 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    NULL;
  END COLUMN_SEQUENCES;
END;
/
ALTER TRIGGER "COMPANY"."INP_BELEGE_ALL_TRG13" ENABLE;
--------------------------------------------------------
--  DDL for Trigger INP_BELEGE_ALL_TRG14
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "COMPANY"."INP_BELEGE_ALL_TRG14" 
BEFORE INSERT ON INP_BELEGE_ALL 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    NULL;
  END COLUMN_SEQUENCES;
END;
/
ALTER TRIGGER "COMPANY"."INP_BELEGE_ALL_TRG14" ENABLE;
--------------------------------------------------------
--  DDL for Trigger INP_BELEGE_ALL_TRG15
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "COMPANY"."INP_BELEGE_ALL_TRG15" 
BEFORE INSERT ON INP_BELEGE_ALL 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    NULL;
  END COLUMN_SEQUENCES;
END;
/
ALTER TRIGGER "COMPANY"."INP_BELEGE_ALL_TRG15" ENABLE;
--------------------------------------------------------
--  DDL for Trigger INP_BELEGE_ALL_TRG16
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "COMPANY"."INP_BELEGE_ALL_TRG16" 
BEFORE INSERT ON INP_BELEGE_ALL 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    IF INSERTING AND :NEW.PK_INP_BELEGE_ALL IS NULL THEN
      SELECT INP_BELEGE_ALL_SEQ.NEXTVAL INTO :NEW.PK_INP_BELEGE_ALL FROM SYS.DUAL;
    END IF;
  END COLUMN_SEQUENCES;
END;
/
ALTER TRIGGER "COMPANY"."INP_BELEGE_ALL_TRG16" ENABLE;
--------------------------------------------------------
--  DDL for Trigger INP_BELEGE_ALL_TRG2
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "COMPANY"."INP_BELEGE_ALL_TRG2" 
BEFORE INSERT ON INP_BELEGE_ALL 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    NULL;
  END COLUMN_SEQUENCES;
END;
/
ALTER TRIGGER "COMPANY"."INP_BELEGE_ALL_TRG2" ENABLE;
--------------------------------------------------------
--  DDL for Trigger INP_BELEGE_ALL_TRG3
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "COMPANY"."INP_BELEGE_ALL_TRG3" 
BEFORE INSERT ON INP_BELEGE_ALL 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    NULL;
  END COLUMN_SEQUENCES;
END;
/
ALTER TRIGGER "COMPANY"."INP_BELEGE_ALL_TRG3" ENABLE;
--------------------------------------------------------
--  DDL for Trigger INP_BELEGE_ALL_TRG4
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "COMPANY"."INP_BELEGE_ALL_TRG4" 
BEFORE INSERT ON INP_BELEGE_ALL 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    NULL;
  END COLUMN_SEQUENCES;
END;
/
ALTER TRIGGER "COMPANY"."INP_BELEGE_ALL_TRG4" ENABLE;
--------------------------------------------------------
--  DDL for Trigger INP_BELEGE_ALL_TRG5
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "COMPANY"."INP_BELEGE_ALL_TRG5" 
BEFORE INSERT ON INP_BELEGE_ALL 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    NULL;
  END COLUMN_SEQUENCES;
END;
/
ALTER TRIGGER "COMPANY"."INP_BELEGE_ALL_TRG5" ENABLE;
--------------------------------------------------------
--  DDL for Trigger INP_BELEGE_ALL_TRG6
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "COMPANY"."INP_BELEGE_ALL_TRG6" 
BEFORE INSERT ON INP_BELEGE_ALL 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    NULL;
  END COLUMN_SEQUENCES;
END;
/
ALTER TRIGGER "COMPANY"."INP_BELEGE_ALL_TRG6" ENABLE;
--------------------------------------------------------
--  DDL for Trigger INP_BELEGE_ALL_TRG7
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "COMPANY"."INP_BELEGE_ALL_TRG7" 
BEFORE INSERT ON INP_BELEGE_ALL 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    NULL;
  END COLUMN_SEQUENCES;
END;
/
ALTER TRIGGER "COMPANY"."INP_BELEGE_ALL_TRG7" ENABLE;
--------------------------------------------------------
--  DDL for Trigger INP_BELEGE_ALL_TRG8
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "COMPANY"."INP_BELEGE_ALL_TRG8" 
BEFORE INSERT ON INP_BELEGE_ALL 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    NULL;
  END COLUMN_SEQUENCES;
END;
/
ALTER TRIGGER "COMPANY"."INP_BELEGE_ALL_TRG8" ENABLE;
--------------------------------------------------------
--  DDL for Trigger INP_BELEGE_ALL_TRG9
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "COMPANY"."INP_BELEGE_ALL_TRG9" 
BEFORE INSERT ON INP_BELEGE_ALL 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    NULL;
  END COLUMN_SEQUENCES;
END;
/
ALTER TRIGGER "COMPANY"."INP_BELEGE_ALL_TRG9" ENABLE;
--------------------------------------------------------
--  DDL for Trigger INP_BELEGE_POS_ALL_TRG
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "COMPANY"."INP_BELEGE_POS_ALL_TRG" 
BEFORE INSERT ON INP_BELEGE_POS_ALL 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    IF INSERTING AND :NEW.PK_INP_BELEGE_POS_ALL IS NULL THEN
      SELECT INP_BELEGE_POS_ALL_SEQ.NEXTVAL INTO :NEW.PK_INP_BELEGE_POS_ALL FROM SYS.DUAL;
    END IF;
  END COLUMN_SEQUENCES;
END;
/
ALTER TRIGGER "COMPANY"."INP_BELEGE_POS_ALL_TRG" ENABLE;
--------------------------------------------------------
--  DDL for Trigger KTO_Girokonto_TRG
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "COMPANY"."KTO_Girokonto_TRG" 
BEFORE INSERT ON "KTO_Girokonto" 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    NULL;
  END COLUMN_SEQUENCES;
END;
/
ALTER TRIGGER "COMPANY"."KTO_Girokonto_TRG" ENABLE;
--------------------------------------------------------
--  DDL for Trigger KTO_Girokonto_TRG1
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "COMPANY"."KTO_Girokonto_TRG1" 
BEFORE INSERT ON "KTO_Girokonto" 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    NULL;
  END COLUMN_SEQUENCES;
END;
/
ALTER TRIGGER "COMPANY"."KTO_Girokonto_TRG1" ENABLE;
--------------------------------------------------------
--  DDL for Trigger KTO_Girokonto_TRG10
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "COMPANY"."KTO_Girokonto_TRG10" 
BEFORE INSERT ON "KTO_Girokonto" 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    IF INSERTING AND :NEW.ID IS NULL THEN
      SELECT "KTO_Girokonto_SEQ8".NEXTVAL INTO :NEW.ID FROM SYS.DUAL;
    END IF;
  END COLUMN_SEQUENCES;
END;
/
ALTER TRIGGER "COMPANY"."KTO_Girokonto_TRG10" ENABLE;
--------------------------------------------------------
--  DDL for Trigger KTO_Girokonto_TRG2
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "COMPANY"."KTO_Girokonto_TRG2" 
BEFORE INSERT ON "KTO_Girokonto" 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    NULL;
  END COLUMN_SEQUENCES;
END;
/
ALTER TRIGGER "COMPANY"."KTO_Girokonto_TRG2" ENABLE;
--------------------------------------------------------
--  DDL for Trigger KTO_Girokonto_TRG3
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "COMPANY"."KTO_Girokonto_TRG3" 
BEFORE INSERT ON "KTO_Girokonto" 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    NULL;
  END COLUMN_SEQUENCES;
END;
/
ALTER TRIGGER "COMPANY"."KTO_Girokonto_TRG3" ENABLE;
--------------------------------------------------------
--  DDL for Trigger KTO_Girokonto_TRG4
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "COMPANY"."KTO_Girokonto_TRG4" 
BEFORE INSERT ON "KTO_Girokonto" 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    NULL;
  END COLUMN_SEQUENCES;
END;
/
ALTER TRIGGER "COMPANY"."KTO_Girokonto_TRG4" ENABLE;
--------------------------------------------------------
--  DDL for Trigger KTO_Girokonto_TRG5
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "COMPANY"."KTO_Girokonto_TRG5" 
BEFORE INSERT ON "KTO_Girokonto" 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    NULL;
  END COLUMN_SEQUENCES;
END;
/
ALTER TRIGGER "COMPANY"."KTO_Girokonto_TRG5" ENABLE;
--------------------------------------------------------
--  DDL for Trigger KTO_Girokonto_TRG6
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "COMPANY"."KTO_Girokonto_TRG6" 
BEFORE INSERT ON "KTO_Girokonto" 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    NULL;
  END COLUMN_SEQUENCES;
END;
/
ALTER TRIGGER "COMPANY"."KTO_Girokonto_TRG6" ENABLE;
--------------------------------------------------------
--  DDL for Trigger KTO_Girokonto_TRG7
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "COMPANY"."KTO_Girokonto_TRG7" 
BEFORE INSERT ON "KTO_Girokonto" 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    NULL;
  END COLUMN_SEQUENCES;
END;
/
ALTER TRIGGER "COMPANY"."KTO_Girokonto_TRG7" ENABLE;
--------------------------------------------------------
--  DDL for Trigger KTO_Girokonto_TRG8
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "COMPANY"."KTO_Girokonto_TRG8" 
BEFORE INSERT ON "KTO_Girokonto" 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    NULL;
  END COLUMN_SEQUENCES;
END;
/
ALTER TRIGGER "COMPANY"."KTO_Girokonto_TRG8" ENABLE;
--------------------------------------------------------
--  DDL for Trigger KTO_Girokonto_TRG9
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "COMPANY"."KTO_Girokonto_TRG9" 
BEFORE INSERT ON "KTO_Girokonto" 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    IF INSERTING AND :NEW.SALDO IS NULL THEN
      SELECT "KTO_Girokonto_SEQ7".NEXTVAL INTO :NEW.SALDO FROM SYS.DUAL;
    END IF;
  END COLUMN_SEQUENCES;
END;
/
ALTER TRIGGER "COMPANY"."KTO_Girokonto_TRG9" ENABLE;
--------------------------------------------------------
--  DDL for Trigger KTO_Kreditkarte_TRG
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "COMPANY"."KTO_Kreditkarte_TRG" 
BEFORE INSERT ON "KTO_Kreditkarte" 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    NULL;
  END COLUMN_SEQUENCES;
END;
/
ALTER TRIGGER "COMPANY"."KTO_Kreditkarte_TRG" ENABLE;
--------------------------------------------------------
--  DDL for Trigger KTO_Kreditkarte_TRG_ARB
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "COMPANY"."KTO_Kreditkarte_TRG_ARB" 
BEFORE INSERT ON "KTO_Kreditkarte" 
FOR EACH ROW 
BEGIN
 merge into "KTO_Kreditkarte" t1
        using (
                    select 
                        pk_arbeitstage, 
                        id                
                    from (select * from "KTO_Kreditkarte" where "Buchungstag" is not null and fk_buchungstag is null) bel,
                      t_arbeitstage arb
                    where  
                    to_date(substr(bel."Buchungstag",1,10), 'DD/MM/YYYY')=   arb.datum 
                    --bel.fk_buchungstag is null
             ) t2 on (t1.id = t2.id)
            when matched then
            update set t1.fk_buchungstag= t2.pk_arbeitstage;
            commit;

        merge into "KTO_Kreditkarte" t1
        using (
                    select 
                        pk_arbeitstage, 
                        id                
                    from (select * from "KTO_Kreditkarte" where "Beleg" is not null and fk_beleg is null) bel,
                      t_arbeitstage arb
                    where  
                    to_date(substr(bel."Beleg",1,10), 'DD/MM/YYYY')=   arb.datum 
                    --bel.fk_buchungstag is null
             ) t2 on (t1.id = t2.id)
            when matched then
            update set t1.fk_beleg= t2.pk_arbeitstage;
            commit;
END;

/
ALTER TRIGGER "COMPANY"."KTO_Kreditkarte_TRG_ARB" DISABLE;
--------------------------------------------------------
--  DDL for Trigger KTO_Kreditkarte_TRG1
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "COMPANY"."KTO_Kreditkarte_TRG1" 
BEFORE INSERT ON "KTO_Kreditkarte" 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    NULL;
  END COLUMN_SEQUENCES;
END;
/
ALTER TRIGGER "COMPANY"."KTO_Kreditkarte_TRG1" ENABLE;
--------------------------------------------------------
--  DDL for Trigger KTO_Kreditkarte_TRG2
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "COMPANY"."KTO_Kreditkarte_TRG2" 
BEFORE INSERT ON "KTO_Kreditkarte" 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    NULL;
  END COLUMN_SEQUENCES;
END;
/
ALTER TRIGGER "COMPANY"."KTO_Kreditkarte_TRG2" ENABLE;
--------------------------------------------------------
--  DDL for Trigger KTO_Kreditkarte_TRG3
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "COMPANY"."KTO_Kreditkarte_TRG3" 
BEFORE INSERT ON "KTO_Kreditkarte" 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    NULL;
  END COLUMN_SEQUENCES;
END;
/
ALTER TRIGGER "COMPANY"."KTO_Kreditkarte_TRG3" ENABLE;
--------------------------------------------------------
--  DDL for Trigger KTO_Kreditkarte_TRG4
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "COMPANY"."KTO_Kreditkarte_TRG4" 
BEFORE INSERT ON "KTO_Kreditkarte" 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    IF INSERTING AND :NEW.ID IS NULL THEN
      SELECT "KTO_Kreditkarte_SEQ".NEXTVAL INTO :NEW.ID FROM SYS.DUAL;
    END IF;
  END COLUMN_SEQUENCES;
END;
/
ALTER TRIGGER "COMPANY"."KTO_Kreditkarte_TRG4" ENABLE;
--------------------------------------------------------
--  DDL for Trigger KTO_KREDITKARTE_TRIG
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "COMPANY"."KTO_KREDITKARTE_TRIG" 
BEFORE INSERT ON "KTO_Kreditkarte" 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    NULL;
  END COLUMN_SEQUENCES;
END;
/
ALTER TRIGGER "COMPANY"."KTO_KREDITKARTE_TRIG" ENABLE;
--------------------------------------------------------
--  DDL for Trigger KTO_Paypal_TRG
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "COMPANY"."KTO_Paypal_TRG" 
BEFORE INSERT ON "KTO_Paypal" 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    NULL;
  END COLUMN_SEQUENCES;
END;
/
ALTER TRIGGER "COMPANY"."KTO_Paypal_TRG" ENABLE;
--------------------------------------------------------
--  DDL for Trigger KTO_Paypal_TRG1
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "COMPANY"."KTO_Paypal_TRG1" 
BEFORE INSERT ON "KTO_Paypal" 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    NULL;
  END COLUMN_SEQUENCES;
END;
/
ALTER TRIGGER "COMPANY"."KTO_Paypal_TRG1" ENABLE;
--------------------------------------------------------
--  DDL for Trigger KTO_Paypal_TRG2
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "COMPANY"."KTO_Paypal_TRG2" 
BEFORE INSERT ON "KTO_Paypal" 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    NULL;
  END COLUMN_SEQUENCES;
END;
/
ALTER TRIGGER "COMPANY"."KTO_Paypal_TRG2" ENABLE;
--------------------------------------------------------
--  DDL for Trigger KTO_Paypal_TRG3
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "COMPANY"."KTO_Paypal_TRG3" 
BEFORE INSERT ON "KTO_Paypal" 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    NULL;
  END COLUMN_SEQUENCES;
END;
/
ALTER TRIGGER "COMPANY"."KTO_Paypal_TRG3" ENABLE;
--------------------------------------------------------
--  DDL for Trigger KTO_Tagesgeldkonto_TRG
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "COMPANY"."KTO_Tagesgeldkonto_TRG" 
BEFORE INSERT ON "KTO_Tagesgeldkonto" 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    NULL;
  END COLUMN_SEQUENCES;
END;
/
ALTER TRIGGER "COMPANY"."KTO_Tagesgeldkonto_TRG" ENABLE;
--------------------------------------------------------
--  DDL for Trigger KTO_Tagesgeldkonto_TRG1
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "COMPANY"."KTO_Tagesgeldkonto_TRG1" 
BEFORE INSERT ON "KTO_Tagesgeldkonto" 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    NULL;
  END COLUMN_SEQUENCES;
END;
/
ALTER TRIGGER "COMPANY"."KTO_Tagesgeldkonto_TRG1" ENABLE;
--------------------------------------------------------
--  DDL for Trigger KTO_Tagesgeldkonto_TRG2
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "COMPANY"."KTO_Tagesgeldkonto_TRG2" 
BEFORE INSERT ON "KTO_Tagesgeldkonto" 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    NULL;
  END COLUMN_SEQUENCES;
END;
/
ALTER TRIGGER "COMPANY"."KTO_Tagesgeldkonto_TRG2" ENABLE;
--------------------------------------------------------
--  DDL for Trigger PP_Vorgang_TRG
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "COMPANY"."PP_Vorgang_TRG" 
BEFORE INSERT ON "PP_Vorgang" 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    NULL;
  END COLUMN_SEQUENCES;
END;
/
ALTER TRIGGER "COMPANY"."PP_Vorgang_TRG" ENABLE;
--------------------------------------------------------
--  DDL for Trigger PP_Vorgang_TRG1
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "COMPANY"."PP_Vorgang_TRG1" 
BEFORE INSERT ON "PP_Vorgang" 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    IF INSERTING AND :NEW.ID IS NULL THEN
      SELECT "PP_Vorgang_SEQ1".NEXTVAL INTO :NEW.ID FROM SYS.DUAL;
    END IF;
  END COLUMN_SEQUENCES;
END;
/
ALTER TRIGGER "COMPANY"."PP_Vorgang_TRG1" ENABLE;
--------------------------------------------------------
--  DDL for Trigger T_ABL_ORDNER_PAGE_TRG
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "COMPANY"."T_ABL_ORDNER_PAGE_TRG" 
BEFORE INSERT ON T_ABL_ORDNER_PAGE 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    IF INSERTING AND :NEW.PK_ABLAGE_ORDNER_PAGE IS NULL THEN
      SELECT T_ABL_ORDNER_PAGE_SEQ.NEXTVAL INTO :NEW.PK_ABLAGE_ORDNER_PAGE FROM SYS.DUAL;
    END IF;
  END COLUMN_SEQUENCES;
END;
/
ALTER TRIGGER "COMPANY"."T_ABL_ORDNER_PAGE_TRG" ENABLE;
--------------------------------------------------------
--  DDL for Trigger T_ABL_ORDNER_PAGE_TRG1
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "COMPANY"."T_ABL_ORDNER_PAGE_TRG1" 
BEFORE INSERT ON T_ABL_ORDNER_PAGE 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    IF INSERTING AND :NEW.PK_ABL_ORDNER_PAGE IS NULL THEN
      SELECT T_ABL_ORDNER_PAGE_SEQ.NEXTVAL INTO :NEW.PK_ABL_ORDNER_PAGE FROM SYS.DUAL;
    END IF;
  END COLUMN_SEQUENCES;
END;
/
ALTER TRIGGER "COMPANY"."T_ABL_ORDNER_PAGE_TRG1" ENABLE;
--------------------------------------------------------
--  DDL for Trigger T_ABL_ORDNER_TRG
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "COMPANY"."T_ABL_ORDNER_TRG" 
BEFORE INSERT ON T_ABL_ORDNER 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    NULL;
  END COLUMN_SEQUENCES;
END;
/
ALTER TRIGGER "COMPANY"."T_ABL_ORDNER_TRG" ENABLE;
--------------------------------------------------------
--  DDL for Trigger T_ARBEITSTAGE_TRG
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "COMPANY"."T_ARBEITSTAGE_TRG" 
BEFORE INSERT ON T_ARBEITSTAGE 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    IF INSERTING AND :NEW.PK_ARBEITSTAGE IS NULL THEN
      SELECT T_ARBEITSTAGE_SEQ.NEXTVAL INTO :NEW.PK_ARBEITSTAGE FROM SYS.DUAL;
    END IF;
  END COLUMN_SEQUENCES;
END;
/
ALTER TRIGGER "COMPANY"."T_ARBEITSTAGE_TRG" ENABLE;
--------------------------------------------------------
--  DDL for Trigger T_BANKKONTO_TRG
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "COMPANY"."T_BANKKONTO_TRG" 
BEFORE INSERT ON T_BANKKONTO 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    NULL;
  END COLUMN_SEQUENCES;
END;
/
ALTER TRIGGER "COMPANY"."T_BANKKONTO_TRG" ENABLE;
--------------------------------------------------------
--  DDL for Trigger T_BEITRAG_TRG
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "COMPANY"."T_BEITRAG_TRG" 
BEFORE INSERT ON T_BEITRAG 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    NULL;
  END COLUMN_SEQUENCES;
END;
/
ALTER TRIGGER "COMPANY"."T_BEITRAG_TRG" ENABLE;
--------------------------------------------------------
--  DDL for Trigger T_BEITRAG_TRG1
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "COMPANY"."T_BEITRAG_TRG1" 
BEFORE INSERT ON T_BEITRAG 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    IF INSERTING AND :NEW.PK_BEITRAG IS NULL THEN
      SELECT T_BEITRAG_SEQ1.NEXTVAL INTO :NEW.PK_BEITRAG FROM SYS.DUAL;
    END IF;
  END COLUMN_SEQUENCES;
END;
/
ALTER TRIGGER "COMPANY"."T_BEITRAG_TRG1" ENABLE;
--------------------------------------------------------
--  DDL for Trigger T_BELEGART_GRP
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "COMPANY"."T_BELEGART_GRP" 
BEFORE INSERT ON T_BELEGART_GRP 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    NULL;
  END COLUMN_SEQUENCES;
END;
/
ALTER TRIGGER "COMPANY"."T_BELEGART_GRP" ENABLE;
--------------------------------------------------------
--  DDL for Trigger T_GESCHAEFTSPARTNER_TRG
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "COMPANY"."T_GESCHAEFTSPARTNER_TRG" 
BEFORE INSERT ON T_GESCHAEFTSPARTNER 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    IF INSERTING AND :NEW.PK_GESCHAEFTSPARTNER IS NULL THEN
      SELECT T_GESCHAEFTSPARTNER_SEQ.NEXTVAL INTO :NEW.PK_GESCHAEFTSPARTNER FROM SYS.DUAL;
    END IF;
  END COLUMN_SEQUENCES;
END;
/
ALTER TRIGGER "COMPANY"."T_GESCHAEFTSPARTNER_TRG" ENABLE;
--------------------------------------------------------
--  DDL for Trigger T_INVENTARE_TRG
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "COMPANY"."T_INVENTARE_TRG" 
BEFORE INSERT ON T_INVENTARE 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    NULL;
  END COLUMN_SEQUENCES;
END;
/
ALTER TRIGGER "COMPANY"."T_INVENTARE_TRG" ENABLE;
--------------------------------------------------------
--  DDL for Trigger T_INVENTARE_TRG1
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "COMPANY"."T_INVENTARE_TRG1" 
BEFORE INSERT ON T_INVENTARE 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    NULL;
  END COLUMN_SEQUENCES;
END;
/
ALTER TRIGGER "COMPANY"."T_INVENTARE_TRG1" ENABLE;
--------------------------------------------------------
--  DDL for Trigger T_INVENTARE_TRG2
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "COMPANY"."T_INVENTARE_TRG2" 
BEFORE INSERT ON T_INVENTARE 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    IF INSERTING AND :NEW.PK_INVENTAR IS NULL THEN
      SELECT T_INVENTARE_SEQ.NEXTVAL INTO :NEW.PK_INVENTAR FROM SYS.DUAL;
    END IF;
  END COLUMN_SEQUENCES;
END;
/
ALTER TRIGGER "COMPANY"."T_INVENTARE_TRG2" ENABLE;
--------------------------------------------------------
--  DDL for Trigger T_INVENTARTYP_TRG
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "COMPANY"."T_INVENTARTYP_TRG" 
BEFORE INSERT ON T_INVENTARTYP 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    IF INSERTING AND :NEW.PK_INVENTARTYP IS NULL THEN
      SELECT T_INVENTARTYP_SEQ.NEXTVAL INTO :NEW.PK_INVENTARTYP FROM SYS.DUAL;
    END IF;
  END COLUMN_SEQUENCES;
END;
/
ALTER TRIGGER "COMPANY"."T_INVENTARTYP_TRG" ENABLE;
--------------------------------------------------------
--  DDL for Trigger T_KONTENPLAN_KONTEN_GRP_TRG
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "COMPANY"."T_KONTENPLAN_KONTEN_GRP_TRG" 
BEFORE INSERT ON T_KONTENPLAN_KONTEN_GRP 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    IF INSERTING AND :NEW.PK_KONTENPLAN_KONTEN_GRP IS NULL THEN
      SELECT T_KONTENPLAN_KONTEN_GRP_SEQ.NEXTVAL INTO :NEW.PK_KONTENPLAN_KONTEN_GRP FROM SYS.DUAL;
    END IF;
  END COLUMN_SEQUENCES;
END;
/
ALTER TRIGGER "COMPANY"."T_KONTENPLAN_KONTEN_GRP_TRG" ENABLE;
--------------------------------------------------------
--  DDL for Trigger T_KONTENPLAN_KONTEN_KAT_GRP_T
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "COMPANY"."T_KONTENPLAN_KONTEN_KAT_GRP_T" 
BEFORE INSERT ON T_KONTENPLAN_KONTEN_KAT_GRP 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    IF INSERTING AND :NEW.PK_KONTENPLAN_KONTEN_KAT_GRP IS NULL THEN
      SELECT T_KONTENPLAN_KONTEN_KAT_GRP_S.NEXTVAL INTO :NEW.PK_KONTENPLAN_KONTEN_KAT_GRP FROM SYS.DUAL;
    END IF;
  END COLUMN_SEQUENCES;
END;
/
ALTER TRIGGER "COMPANY"."T_KONTENPLAN_KONTEN_KAT_GRP_T" ENABLE;
--------------------------------------------------------
--  DDL for Trigger T_KONTENPLAN_KONTEN_TRG
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "COMPANY"."T_KONTENPLAN_KONTEN_TRG" 
BEFORE INSERT ON T_KONTENPLAN_KONTEN 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    NULL;
  END COLUMN_SEQUENCES;
END;
/
ALTER TRIGGER "COMPANY"."T_KONTENPLAN_KONTEN_TRG" ENABLE;
--------------------------------------------------------
--  DDL for Trigger T_KONTENPLAN_KONTEN_TRG1
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "COMPANY"."T_KONTENPLAN_KONTEN_TRG1" 
BEFORE INSERT ON T_KONTENPLAN_KONTEN 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    NULL;
  END COLUMN_SEQUENCES;
END;
/
ALTER TRIGGER "COMPANY"."T_KONTENPLAN_KONTEN_TRG1" ENABLE;
--------------------------------------------------------
--  DDL for Trigger T_KONTENPLAN_KONTEN_TRG2
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "COMPANY"."T_KONTENPLAN_KONTEN_TRG2" 
BEFORE INSERT ON T_KONTENPLAN_KONTEN 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    NULL;
  END COLUMN_SEQUENCES;
END;
/
ALTER TRIGGER "COMPANY"."T_KONTENPLAN_KONTEN_TRG2" ENABLE;
--------------------------------------------------------
--  DDL for Trigger T_KONTENPLAN_KONTEN_TRG3
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "COMPANY"."T_KONTENPLAN_KONTEN_TRG3" 
BEFORE INSERT ON T_KONTENPLAN_KONTEN 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    IF INSERTING AND :NEW.PK_KONTENPLAN_KONTEN IS NULL THEN
      SELECT T_KONTENPLAN_KONTEN_SEQ.NEXTVAL INTO :NEW.PK_KONTENPLAN_KONTEN FROM SYS.DUAL;
    END IF;
  END COLUMN_SEQUENCES;
END;
/
ALTER TRIGGER "COMPANY"."T_KONTENPLAN_KONTEN_TRG3" ENABLE;
--------------------------------------------------------
--  DDL for Trigger T_KONTOAUSZUG_BUCH_TRG
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "COMPANY"."T_KONTOAUSZUG_BUCH_TRG" 
BEFORE INSERT ON T_KONTO_BUCH 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    NULL;
  END COLUMN_SEQUENCES;
END;
/
ALTER TRIGGER "COMPANY"."T_KONTOAUSZUG_BUCH_TRG" ENABLE;
--------------------------------------------------------
--  DDL for Trigger T_KONTO_AUSZUG_TRG
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "COMPANY"."T_KONTO_AUSZUG_TRG" 
BEFORE INSERT ON T_KONTO_AUSZUG 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    IF INSERTING AND :NEW.PK_KONTO_AUSZUG IS NULL THEN
      SELECT T_KONTO_AUSZUG_SEQ.NEXTVAL INTO :NEW.PK_KONTO_AUSZUG FROM SYS.DUAL;
    END IF;
  END COLUMN_SEQUENCES;
END;
/
ALTER TRIGGER "COMPANY"."T_KONTO_AUSZUG_TRG" ENABLE;
--------------------------------------------------------
--  DDL for Trigger T_KONTO_BUCH_KAT_TRG
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "COMPANY"."T_KONTO_BUCH_KAT_TRG" 
BEFORE INSERT ON T_KONTO_BUCH_KAT 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    IF INSERTING AND :NEW.PK_KONTO_BUCH_KAT IS NULL THEN
      SELECT T_KONTO_BUCH_KAT_SEQ.NEXTVAL INTO :NEW.PK_KONTO_BUCH_KAT FROM SYS.DUAL;
    END IF;
  END COLUMN_SEQUENCES;
END;
/
ALTER TRIGGER "COMPANY"."T_KONTO_BUCH_KAT_TRG" ENABLE;
--------------------------------------------------------
--  DDL for Trigger T_KONTO_BUCH_TRG
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "COMPANY"."T_KONTO_BUCH_TRG" 
BEFORE INSERT ON T_KONTO_BUCH 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    NULL;
  END COLUMN_SEQUENCES;
END;
/
ALTER TRIGGER "COMPANY"."T_KONTO_BUCH_TRG" ENABLE;
--------------------------------------------------------
--  DDL for Trigger T_KONTO_BUCH_TRG1
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "COMPANY"."T_KONTO_BUCH_TRG1" 
BEFORE INSERT ON T_KONTO_BUCH 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    NULL;
  END COLUMN_SEQUENCES;
END;
/
ALTER TRIGGER "COMPANY"."T_KONTO_BUCH_TRG1" ENABLE;
--------------------------------------------------------
--  DDL for Trigger T_KONTO_BUCH_TRG2
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "COMPANY"."T_KONTO_BUCH_TRG2" 
BEFORE INSERT ON T_KONTO_BUCH 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    NULL;
  END COLUMN_SEQUENCES;
END;
/
ALTER TRIGGER "COMPANY"."T_KONTO_BUCH_TRG2" ENABLE;
--------------------------------------------------------
--  DDL for Trigger T_KONTROLLE_TRG
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "COMPANY"."T_KONTROLLE_TRG" 
BEFORE INSERT ON T_KONTROLLE 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    IF INSERTING AND :NEW.PK_KONTROLLE IS NULL THEN
      SELECT T_KONTROLLE_SEQ.NEXTVAL INTO :NEW.PK_KONTROLLE FROM SYS.DUAL;
    END IF;
  END COLUMN_SEQUENCES;
END;
/
ALTER TRIGGER "COMPANY"."T_KONTROLLE_TRG" ENABLE;
--------------------------------------------------------
--  DDL for Trigger T_LAND_TRG
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "COMPANY"."T_LAND_TRG" 
BEFORE INSERT ON T_LAND 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    IF INSERTING AND :NEW.PK_LAND IS NULL THEN
      SELECT T_LAND_SEQ.NEXTVAL INTO :NEW.PK_LAND FROM SYS.DUAL;
    END IF;
  END COLUMN_SEQUENCES;
END;
/
ALTER TRIGGER "COMPANY"."T_LAND_TRG" ENABLE;
--------------------------------------------------------
--  DDL for Trigger T_LEX_TRG
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "COMPANY"."T_LEX_TRG" 
BEFORE INSERT ON T_LEX 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    NULL;
  END COLUMN_SEQUENCES;
END;
/
ALTER TRIGGER "COMPANY"."T_LEX_TRG" ENABLE;
--------------------------------------------------------
--  DDL for Trigger T_LEX_TRG1
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "COMPANY"."T_LEX_TRG1" 
BEFORE INSERT ON T_LEX 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    NULL;
  END COLUMN_SEQUENCES;
END;
/
ALTER TRIGGER "COMPANY"."T_LEX_TRG1" ENABLE;
--------------------------------------------------------
--  DDL for Trigger T_LEX_TRG2
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "COMPANY"."T_LEX_TRG2" 
BEFORE INSERT ON T_LEX 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    NULL;
  END COLUMN_SEQUENCES;
END;
/
ALTER TRIGGER "COMPANY"."T_LEX_TRG2" ENABLE;
--------------------------------------------------------
--  DDL for Trigger T_LEX_TRG3
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "COMPANY"."T_LEX_TRG3" 
BEFORE INSERT ON T_LEX 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    IF INSERTING AND :NEW.PK_LEX IS NULL THEN
      SELECT T_LEX_SEQ.NEXTVAL INTO :NEW.PK_LEX FROM SYS.DUAL;
    END IF;
  END COLUMN_SEQUENCES;
END;
/
ALTER TRIGGER "COMPANY"."T_LEX_TRG3" ENABLE;
--------------------------------------------------------
--  DDL for Trigger T_LOCATION_TYPE_TRG
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "COMPANY"."T_LOCATION_TYPE_TRG" 
BEFORE INSERT ON T_LOCATION_TYPE 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    IF INSERTING AND :NEW.PK_LOCATION_TYPE IS NULL THEN
      SELECT T_LOCATION_TYPE_SEQ.NEXTVAL INTO :NEW.PK_LOCATION_TYPE FROM SYS.DUAL;
    END IF;
  END COLUMN_SEQUENCES;
END;
/
ALTER TRIGGER "COMPANY"."T_LOCATION_TYPE_TRG" ENABLE;
--------------------------------------------------------
--  DDL for Trigger T_OFFENE_EINGANGSRECHNUNGEN_T
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "COMPANY"."T_OFFENE_EINGANGSRECHNUNGEN_T" 
BEFORE INSERT ON T_OFFENE_EINGANGSRECHNUNGEN 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    NULL;
  END COLUMN_SEQUENCES;
END;
/
ALTER TRIGGER "COMPANY"."T_OFFENE_EINGANGSRECHNUNGEN_T" ENABLE;
--------------------------------------------------------
--  DDL for Trigger T_PROJEKT_ART_TRG
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "COMPANY"."T_PROJEKT_ART_TRG" 
BEFORE INSERT ON T_PROJEKT_ART 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    IF INSERTING AND :NEW.PK_PROJEKT_ART IS NULL THEN
      SELECT T_PROJEKT_ART_SEQ.NEXTVAL INTO :NEW.PK_PROJEKT_ART FROM SYS.DUAL;
    END IF;
  END COLUMN_SEQUENCES;
END;
/
ALTER TRIGGER "COMPANY"."T_PROJEKT_ART_TRG" ENABLE;
--------------------------------------------------------
--  DDL for Trigger T_PROJEKT_TRG
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "COMPANY"."T_PROJEKT_TRG" 
BEFORE INSERT ON T_PROJEKT 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    NULL;
  END COLUMN_SEQUENCES;
END;
/
ALTER TRIGGER "COMPANY"."T_PROJEKT_TRG" ENABLE;
--------------------------------------------------------
--  DDL for Trigger T_PROJEKT_TRG1
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "COMPANY"."T_PROJEKT_TRG1" 
BEFORE INSERT ON T_PROJEKT 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    NULL;
  END COLUMN_SEQUENCES;
END;
/
ALTER TRIGGER "COMPANY"."T_PROJEKT_TRG1" ENABLE;
--------------------------------------------------------
--  DDL for Trigger T_PROJEKT_TRG2
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "COMPANY"."T_PROJEKT_TRG2" 
BEFORE INSERT ON T_PROJEKT 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    NULL;
  END COLUMN_SEQUENCES;
END;
/
ALTER TRIGGER "COMPANY"."T_PROJEKT_TRG2" ENABLE;
--------------------------------------------------------
--  DDL for Trigger T_PROJEKT_TRG3
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "COMPANY"."T_PROJEKT_TRG3" 
BEFORE INSERT ON T_PROJEKT 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    IF INSERTING AND :NEW.PK_PROJEKT IS NULL THEN
      SELECT T_PROJEKT_SEQ.NEXTVAL INTO :NEW.PK_PROJEKT FROM SYS.DUAL;
    END IF;
  END COLUMN_SEQUENCES;
END;
/
ALTER TRIGGER "COMPANY"."T_PROJEKT_TRG3" ENABLE;
--------------------------------------------------------
--  DDL for Trigger T_RECHNUNG_TRG
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "COMPANY"."T_RECHNUNG_TRG" 
BEFORE INSERT ON T_RECHNUNG 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    NULL;
  END COLUMN_SEQUENCES;
END;
/
ALTER TRIGGER "COMPANY"."T_RECHNUNG_TRG" ENABLE;
--------------------------------------------------------
--  DDL for Trigger T_RECHNUNG_TRG1
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "COMPANY"."T_RECHNUNG_TRG1" 
BEFORE INSERT ON T_RECHNUNG 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    NULL;
  END COLUMN_SEQUENCES;
END;
/
ALTER TRIGGER "COMPANY"."T_RECHNUNG_TRG1" ENABLE;
--------------------------------------------------------
--  DDL for Trigger T_RECHNUNG_TRG2
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "COMPANY"."T_RECHNUNG_TRG2" 
BEFORE INSERT ON T_RECHNUNG 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    IF INSERTING AND :NEW.PK_RECHNUNG IS NULL THEN
      SELECT T_RECHNUNG_SEQ.NEXTVAL INTO :NEW.PK_RECHNUNG FROM SYS.DUAL;
    END IF;
  END COLUMN_SEQUENCES;
END;
/
ALTER TRIGGER "COMPANY"."T_RECHNUNG_TRG2" ENABLE;
--------------------------------------------------------
--  DDL for Trigger T_REL_IMP_BEL_BEL_TRG
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "COMPANY"."T_REL_IMP_BEL_BEL_TRG" 
BEFORE INSERT ON T_REL_IMP_BEL_BEL 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    IF INSERTING AND :NEW.FK_VORGANG IS NULL THEN
      SELECT T_REL_IMP_BEL_BEL_SEQ_V.NEXTVAL INTO :NEW.FK_VORGANG FROM SYS.DUAL;
    END IF;
  END COLUMN_SEQUENCES;
END;
/
ALTER TRIGGER "COMPANY"."T_REL_IMP_BEL_BEL_TRG" ENABLE;
--------------------------------------------------------
--  DDL for Trigger T_REL_IMP_BEL_BEL_TRG1
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "COMPANY"."T_REL_IMP_BEL_BEL_TRG1" 
BEFORE INSERT ON T_REL_IMP_BEL_BEL 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    IF INSERTING AND :NEW.PK_REL_IMP_BEL_BEL IS NULL THEN
      SELECT T_REL_IMP_BEL_BEL_SEQ.NEXTVAL INTO :NEW.PK_REL_IMP_BEL_BEL FROM SYS.DUAL;
    END IF;
  END COLUMN_SEQUENCES;
END;
/
ALTER TRIGGER "COMPANY"."T_REL_IMP_BEL_BEL_TRG1" ENABLE;
--------------------------------------------------------
--  DDL for Trigger T_REL_INVENTAR_ZAHLUNG_TRG
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "COMPANY"."T_REL_INVENTAR_ZAHLUNG_TRG" 
BEFORE INSERT ON T_REL_INVENTAR_ZAHLUNG 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    NULL;
  END COLUMN_SEQUENCES;
END;
/
ALTER TRIGGER "COMPANY"."T_REL_INVENTAR_ZAHLUNG_TRG" ENABLE;
--------------------------------------------------------
--  DDL for Trigger T_REL_INVENTAR_ZAHLUNG_TRG1
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "COMPANY"."T_REL_INVENTAR_ZAHLUNG_TRG1" 
BEFORE INSERT ON T_REL_INVENTAR_ZAHLUNG 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    IF INSERTING AND :NEW.PK_REL_INV_ZAHLUNG IS NULL THEN
      SELECT T_REL_INVENTAR_ZAHLUNG_SEQ.NEXTVAL INTO :NEW.PK_REL_INV_ZAHLUNG FROM SYS.DUAL;
    END IF;
  END COLUMN_SEQUENCES;
END;
/
ALTER TRIGGER "COMPANY"."T_REL_INVENTAR_ZAHLUNG_TRG1" ENABLE;
--------------------------------------------------------
--  DDL for Trigger T_REL_KONT_BUCH_IMP_BEL_TRG
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "COMPANY"."T_REL_KONT_BUCH_IMP_BEL_TRG" 
BEFORE INSERT ON T_REL_KONT_BUCH_IMP_BEL 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    NULL;
  END COLUMN_SEQUENCES;
END;
/
ALTER TRIGGER "COMPANY"."T_REL_KONT_BUCH_IMP_BEL_TRG" ENABLE;
--------------------------------------------------------
--  DDL for Trigger T_REL_KONT_BUCH_IMP_BEL_TRG1
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "COMPANY"."T_REL_KONT_BUCH_IMP_BEL_TRG1" 
BEFORE INSERT ON T_REL_KONT_BUCH_IMP_BEL 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    NULL;
  END COLUMN_SEQUENCES;
END;
/
ALTER TRIGGER "COMPANY"."T_REL_KONT_BUCH_IMP_BEL_TRG1" ENABLE;
--------------------------------------------------------
--  DDL for Trigger T_REL_KONT_BUCH_IMP_BEL_TRG2
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "COMPANY"."T_REL_KONT_BUCH_IMP_BEL_TRG2" 
BEFORE INSERT ON T_REL_KONT_BUCH_IMP_BEL 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    NULL;
  END COLUMN_SEQUENCES;
END;
/
ALTER TRIGGER "COMPANY"."T_REL_KONT_BUCH_IMP_BEL_TRG2" ENABLE;
--------------------------------------------------------
--  DDL for Trigger T_REL_KONT_BUCH_KONT_BUCH_TRG
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "COMPANY"."T_REL_KONT_BUCH_KONT_BUCH_TRG" 
BEFORE INSERT ON T_REL_KONT_BUCH_KONT_BUCH 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    NULL;
  END COLUMN_SEQUENCES;
END;
/
ALTER TRIGGER "COMPANY"."T_REL_KONT_BUCH_KONT_BUCH_TRG" ENABLE;
--------------------------------------------------------
--  DDL for Trigger T_REL_KONT_BUCH_KONT_BUCH_TRG1
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "COMPANY"."T_REL_KONT_BUCH_KONT_BUCH_TRG1" 
BEFORE INSERT ON T_REL_KONT_BUCH_KONT_BUCH 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    IF INSERTING AND :NEW.PK_REL_KONT_BUCH_KONT_BUCH IS NULL THEN
      SELECT T_REL_KONT_BUCH_KONT_BUCH_SEQ1.NEXTVAL INTO :NEW.PK_REL_KONT_BUCH_KONT_BUCH FROM SYS.DUAL;
    END IF;
  END COLUMN_SEQUENCES;
END;
/
ALTER TRIGGER "COMPANY"."T_REL_KONT_BUCH_KONT_BUCH_TRG1" ENABLE;
--------------------------------------------------------
--  DDL for Trigger T_REL_KONT_BUCH_LEX_BUCH_TRG
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "COMPANY"."T_REL_KONT_BUCH_LEX_BUCH_TRG" 
BEFORE INSERT ON T_REL_KONT_BUCH_LEX_BUCH 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    IF INSERTING AND :NEW.PK_REL_KONT_BUCH_LEX_BUCH IS NULL THEN
      SELECT T_REL_KONT_BUCH_LEX_BUCH_SEQ.NEXTVAL INTO :NEW.PK_REL_KONT_BUCH_LEX_BUCH FROM SYS.DUAL;
    END IF;
  END COLUMN_SEQUENCES;
END;
/
ALTER TRIGGER "COMPANY"."T_REL_KONT_BUCH_LEX_BUCH_TRG" ENABLE;
--------------------------------------------------------
--  DDL for Trigger T_REL_KONTENPLAN_KTO_KTO_KAT_
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "COMPANY"."T_REL_KONTENPLAN_KTO_KTO_KAT_" 
BEFORE INSERT ON T_REL_KONTENPLAN_KTO_KTO_KAT 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    IF INSERTING AND :NEW.PK_REL_KONTENPLAN_KTO_KTO_KAT IS NULL THEN
      SELECT T_REL_KONTENPLAN_KTO_KTO_KAT_.NEXTVAL INTO :NEW.PK_REL_KONTENPLAN_KTO_KTO_KAT FROM SYS.DUAL;
    END IF;
  END COLUMN_SEQUENCES;
END;
/
ALTER TRIGGER "COMPANY"."T_REL_KONTENPLAN_KTO_KTO_KAT_" ENABLE;
--------------------------------------------------------
--  DDL for Trigger T_REL_KONTO_AUSZUG_GIR_TRG
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "COMPANY"."T_REL_KONTO_AUSZUG_GIR_TRG" 
BEFORE INSERT ON T_REL_KONTO_AUSZUG_GIR 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    NULL;
  END COLUMN_SEQUENCES;
END;
/
ALTER TRIGGER "COMPANY"."T_REL_KONTO_AUSZUG_GIR_TRG" ENABLE;
--------------------------------------------------------
--  DDL for Trigger T_REL_KONTO_AUSZUG_GIR_TRG1
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "COMPANY"."T_REL_KONTO_AUSZUG_GIR_TRG1" 
BEFORE INSERT ON T_REL_KONTO_AUSZUG_GIR 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    IF INSERTING AND :NEW.PK_REL_KONTO_AUSZUG_GIR IS NULL THEN
      SELECT T_REL_KONTO_AUSZUG_GIR_SEQ.NEXTVAL INTO :NEW.PK_REL_KONTO_AUSZUG_GIR FROM SYS.DUAL;
    END IF;
  END COLUMN_SEQUENCES;
END;
/
ALTER TRIGGER "COMPANY"."T_REL_KONTO_AUSZUG_GIR_TRG1" ENABLE;
--------------------------------------------------------
--  DDL for Trigger T_REL_PROJEKT_ZAHLUNG_TRG
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "COMPANY"."T_REL_PROJEKT_ZAHLUNG_TRG" 
BEFORE INSERT ON T_REL_PROJEKT_ZAHLUNG 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    IF INSERTING AND :NEW.PK_REL_PROJ_ZAHLUNG IS NULL THEN
      SELECT T_REL_PROJEKT_ZAHLUNG_SEQ.NEXTVAL INTO :NEW.PK_REL_PROJ_ZAHLUNG FROM SYS.DUAL;
    END IF;
  END COLUMN_SEQUENCES;
END;
/
ALTER TRIGGER "COMPANY"."T_REL_PROJEKT_ZAHLUNG_TRG" ENABLE;
--------------------------------------------------------
--  DDL for Trigger T_REL_RECHNUNG_ZAHLUNG_TRG
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "COMPANY"."T_REL_RECHNUNG_ZAHLUNG_TRG" 
BEFORE INSERT ON T_REL_RECHNUNG_ZAHLUNG 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    NULL;
  END COLUMN_SEQUENCES;
END;
/
ALTER TRIGGER "COMPANY"."T_REL_RECHNUNG_ZAHLUNG_TRG" ENABLE;
--------------------------------------------------------
--  DDL for Trigger T_REL_RECHNUNG_ZAHLUNG_TRG1
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "COMPANY"."T_REL_RECHNUNG_ZAHLUNG_TRG1" 
BEFORE INSERT ON T_REL_RECHNUNG_ZAHLUNG 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    IF INSERTING AND :NEW.PK_REL_RE_ZAHL IS NULL THEN
      SELECT T_REL_RECHNUNG_ZAHLUNG_SEQ.NEXTVAL INTO :NEW.PK_REL_RE_ZAHL FROM SYS.DUAL;
    END IF;
    IF INSERTING AND :NEW.BEMERKUNG IS NULL THEN
      SELECT T_REL_RECHNUNG_ZAHLUNG_SEQ1.NEXTVAL INTO :NEW.BEMERKUNG FROM SYS.DUAL;
    END IF;
  END COLUMN_SEQUENCES;
END;
/
ALTER TRIGGER "COMPANY"."T_REL_RECHNUNG_ZAHLUNG_TRG1" ENABLE;
--------------------------------------------------------
--  DDL for Trigger T_REL_STEUER_LOHN_ZAHL_TRG
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "COMPANY"."T_REL_STEUER_LOHN_ZAHL_TRG" 
BEFORE INSERT ON T_REL_STEUER_LOHN_ZAHL 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    NULL;
  END COLUMN_SEQUENCES;
END;
/
ALTER TRIGGER "COMPANY"."T_REL_STEUER_LOHN_ZAHL_TRG" ENABLE;
--------------------------------------------------------
--  DDL for Trigger T_REL_STEUER_LOHN_ZAHL_TRG1
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "COMPANY"."T_REL_STEUER_LOHN_ZAHL_TRG1" 
BEFORE INSERT ON T_REL_STEUER_LOHN_ZAHL 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    IF INSERTING AND :NEW.PK_REL_STEUER_LOHN_ZAHL IS NULL THEN
      SELECT T_REL_STEUER_LOHN_ZAHL_SEQ.NEXTVAL INTO :NEW.PK_REL_STEUER_LOHN_ZAHL FROM SYS.DUAL;
    END IF;
  END COLUMN_SEQUENCES;
END;
/
ALTER TRIGGER "COMPANY"."T_REL_STEUER_LOHN_ZAHL_TRG1" ENABLE;
--------------------------------------------------------
--  DDL for Trigger T_REL_STEUER_MONAT_BEL_TRG
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "COMPANY"."T_REL_STEUER_MONAT_BEL_TRG" 
BEFORE INSERT ON T_REL_STEUER_MONAT_BEL 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    IF INSERTING AND :NEW.PK_REL_BEL_STEUER_MONAT IS NULL THEN
      SELECT T_REL_STEUER_MONAT_BEL_SEQ.NEXTVAL INTO :NEW.PK_REL_BEL_STEUER_MONAT FROM SYS.DUAL;
    END IF;
  END COLUMN_SEQUENCES;
END;
/
ALTER TRIGGER "COMPANY"."T_REL_STEUER_MONAT_BEL_TRG" ENABLE;
--------------------------------------------------------
--  DDL for Trigger T_REL_STEUER_MONAT_RECH_TRG
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "COMPANY"."T_REL_STEUER_MONAT_RECH_TRG" 
BEFORE INSERT ON T_REL_STEUER_MONAT_RECH 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    IF INSERTING AND :NEW.PK_REL_STEUER_MONAT_RECH IS NULL THEN
      SELECT T_REL_STEUER_MONAT_RECH_SEQ.NEXTVAL INTO :NEW.PK_REL_STEUER_MONAT_RECH FROM SYS.DUAL;
    END IF;
  END COLUMN_SEQUENCES;
END;
/
ALTER TRIGGER "COMPANY"."T_REL_STEUER_MONAT_RECH_TRG" ENABLE;
--------------------------------------------------------
--  DDL for Trigger TRIG_T_ADRESSE
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "COMPANY"."TRIG_T_ADRESSE" 
BEFORE INSERT ON T_ADRESSE 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    IF INSERTING AND :NEW.PK_ADRESSE IS NULL THEN
      SELECT SEQ_ADRESSE.NEXTVAL INTO :NEW.PK_ADRESSE FROM SYS.DUAL;
    END IF;
  END COLUMN_SEQUENCES;
END;
/
ALTER TRIGGER "COMPANY"."TRIG_T_ADRESSE" ENABLE;
--------------------------------------------------------
--  DDL for Trigger TRIG_T_ARTIKELTYP
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "COMPANY"."TRIG_T_ARTIKELTYP" 
BEFORE INSERT ON T_ARTIKELTYP 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    IF INSERTING AND :NEW.PK_ARTIKELTYP IS NULL THEN
      SELECT SEQ_ARTIKELTYP.NEXTVAL INTO :NEW.PK_ARTIKELTYP FROM SYS.DUAL;
    END IF;
  END COLUMN_SEQUENCES;
END;
/
ALTER TRIGGER "COMPANY"."TRIG_T_ARTIKELTYP" ENABLE;
--------------------------------------------------------
--  DDL for Trigger TRIG_T_BELEG
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "COMPANY"."TRIG_T_BELEG" 
BEFORE INSERT ON T_BELEG 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    IF INSERTING AND :NEW.PK_BELEG IS NULL THEN
      SELECT SEQ_BELEG.NEXTVAL INTO :NEW.PK_BELEG FROM SYS.DUAL;
    END IF;
  END COLUMN_SEQUENCES;
END;
/
ALTER TRIGGER "COMPANY"."TRIG_T_BELEG" ENABLE;
--------------------------------------------------------
--  DDL for Trigger TRIG_T_BELEGART
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "COMPANY"."TRIG_T_BELEGART" 
BEFORE INSERT ON T_BELEGART 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    IF INSERTING AND :NEW.PK_BELEGART IS NULL THEN
      SELECT SEQ_BELEGART.NEXTVAL INTO :NEW.PK_BELEGART FROM SYS.DUAL;
    END IF;
  END COLUMN_SEQUENCES;
END;
/
ALTER TRIGGER "COMPANY"."TRIG_T_BELEGART" ENABLE;
--------------------------------------------------------
--  DDL for Trigger TRIG_T_BELEGART_GRP
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "COMPANY"."TRIG_T_BELEGART_GRP" 
BEFORE INSERT ON T_BELEGART_GRP 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    IF INSERTING AND :NEW.PK_BELEGART_GRP IS NULL THEN
      SELECT SEQ_BELEGART_GRP.NEXTVAL INTO :NEW.PK_BELEGART_GRP FROM SYS.DUAL;
    END IF;
  END COLUMN_SEQUENCES;
END;
/
ALTER TRIGGER "COMPANY"."TRIG_T_BELEGART_GRP" ENABLE;
--------------------------------------------------------
--  DDL for Trigger TRIG_T_BELEGPOSITION
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "COMPANY"."TRIG_T_BELEGPOSITION" 
BEFORE INSERT ON T_BELEGPOSITION 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    IF INSERTING AND :NEW.PK_BELEGPOSITION IS NULL THEN
      SELECT SEQ_BELEGPOSITION.NEXTVAL INTO :NEW.PK_BELEGPOSITION FROM SYS.DUAL;
    END IF;
  END COLUMN_SEQUENCES;
END;
/
ALTER TRIGGER "COMPANY"."TRIG_T_BELEGPOSITION" ENABLE;
--------------------------------------------------------
--  DDL for Trigger TRIG_T_BELEGSEL
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "COMPANY"."TRIG_T_BELEGSEL" 
BEFORE INSERT ON T_BELEGSEL 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    IF INSERTING AND :NEW.PK_BELEGSEL IS NULL THEN
      SELECT SEQ_BELEGSEL.NEXTVAL INTO :NEW.PK_BELEGSEL FROM SYS.DUAL;
    END IF;
  END COLUMN_SEQUENCES;
END;
/
ALTER TRIGGER "COMPANY"."TRIG_T_BELEGSEL" ENABLE;
--------------------------------------------------------
--  DDL for Trigger TRIG_T_FRAGE
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "COMPANY"."TRIG_T_FRAGE" 
BEFORE INSERT ON T_FRAGE 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    IF INSERTING AND :NEW.PK_FRAGE IS NULL THEN
      SELECT SEQ_FRAGE.NEXTVAL INTO :NEW.PK_FRAGE FROM SYS.DUAL;
    END IF;
  END COLUMN_SEQUENCES;
END;
/
ALTER TRIGGER "COMPANY"."TRIG_T_FRAGE" ENABLE;
--------------------------------------------------------
--  DDL for Trigger TRIG_T_LOCATION
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "COMPANY"."TRIG_T_LOCATION" 
BEFORE INSERT ON T_LOCATION 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    IF INSERTING AND :NEW.PK_LOCATION IS NULL THEN
      SELECT SEQ_LOCATION.NEXTVAL INTO :NEW.PK_LOCATION FROM SYS.DUAL;
    END IF;
  END COLUMN_SEQUENCES;
END;
/
ALTER TRIGGER "COMPANY"."TRIG_T_LOCATION" ENABLE;
--------------------------------------------------------
--  DDL for Trigger TRIG_T_ORT
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "COMPANY"."TRIG_T_ORT" 
BEFORE INSERT ON T_ORT 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    IF INSERTING AND :NEW.PK_ORT IS NULL THEN
      SELECT SEQ_ORT.NEXTVAL INTO :NEW.PK_ORT FROM SYS.DUAL;
    END IF;
  END COLUMN_SEQUENCES;
END;
/
ALTER TRIGGER "COMPANY"."TRIG_T_ORT" ENABLE;
--------------------------------------------------------
--  DDL for Trigger TRIG_T_PLZ_ORT
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "COMPANY"."TRIG_T_PLZ_ORT" 
BEFORE INSERT ON T_PLZ_ORT 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    IF INSERTING AND :NEW.PK_PLZ_ORT IS NULL THEN
      SELECT SEQ_PLZ_ORT.NEXTVAL INTO :NEW.PK_PLZ_ORT FROM SYS.DUAL;
    END IF;
  END COLUMN_SEQUENCES;
END;
/
ALTER TRIGGER "COMPANY"."TRIG_T_PLZ_ORT" ENABLE;
--------------------------------------------------------
--  DDL for Trigger TRIG_T_PROJEKT
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "COMPANY"."TRIG_T_PROJEKT" 
BEFORE INSERT ON T_PROJEKT 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    NULL;
  END COLUMN_SEQUENCES;
END;
/
ALTER TRIGGER "COMPANY"."TRIG_T_PROJEKT" ENABLE;
--------------------------------------------------------
--  DDL for Trigger TRIG_T_RECHNUNG
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "COMPANY"."TRIG_T_RECHNUNG" 
BEFORE INSERT ON T_RECHNUNG 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    NULL;
  END COLUMN_SEQUENCES;
END;
/
ALTER TRIGGER "COMPANY"."TRIG_T_RECHNUNG" ENABLE;
--------------------------------------------------------
--  DDL for Trigger TRIG_T_REL_ARTT_ARTT
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "COMPANY"."TRIG_T_REL_ARTT_ARTT" 
BEFORE INSERT ON T_REL_ARTIKELTYP_ARTIKELTYP 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    IF INSERTING AND :NEW.PK_REL_ARTT_ARTT IS NULL THEN
      SELECT SEQ_REL_ARTT_ARTT.NEXTVAL INTO :NEW.PK_REL_ARTT_ARTT FROM SYS.DUAL;
    END IF;
  END COLUMN_SEQUENCES;
END;
/
ALTER TRIGGER "COMPANY"."TRIG_T_REL_ARTT_ARTT" ENABLE;
--------------------------------------------------------
--  DDL for Trigger TRIG_T_REL_BELEG_LOCATION
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "COMPANY"."TRIG_T_REL_BELEG_LOCATION" 
BEFORE INSERT ON T_REL_BELEG_LOCATION 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    IF INSERTING AND :NEW.PK_REL_BEL_LOC IS NULL THEN
      SELECT SEQ_REL_BELEG_LOCATION.NEXTVAL INTO :NEW.PK_REL_BEL_LOC FROM SYS.DUAL;
    END IF;
  END COLUMN_SEQUENCES;
END;
/
ALTER TRIGGER "COMPANY"."TRIG_T_REL_BELEG_LOCATION" ENABLE;
--------------------------------------------------------
--  DDL for Trigger TRIG_T_REL_FRAGE_LÖS
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "COMPANY"."TRIG_T_REL_FRAGE_LÖS" 
BEFORE INSERT ON T_REL_FRAGE_LÖS 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    IF INSERTING AND :NEW.PK_FRAGE_LÖS IS NULL THEN
      SELECT SEQ_T_REL_FRAGE_LÖS.NEXTVAL INTO :NEW.PK_FRAGE_LÖS FROM SYS.DUAL;
    END IF;
  END COLUMN_SEQUENCES;
END;
/
ALTER TRIGGER "COMPANY"."TRIG_T_REL_FRAGE_LÖS" ENABLE;
--------------------------------------------------------
--  DDL for Trigger TRIG_T_REL_RECHNUNG_BELEG
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "COMPANY"."TRIG_T_REL_RECHNUNG_BELEG" 
BEFORE INSERT ON T_REL_RECHNUNG_BELEG 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    IF INSERTING AND :NEW.PK_REL_RE_BEL IS NULL THEN
      SELECT SEQ_REL_RECHNUNG_BELEG.NEXTVAL INTO :NEW.PK_REL_RE_BEL FROM SYS.DUAL;
    END IF;
  END COLUMN_SEQUENCES;
END;
/
ALTER TRIGGER "COMPANY"."TRIG_T_REL_RECHNUNG_BELEG" ENABLE;
--------------------------------------------------------
--  DDL for Trigger TRIG_T_REL_RECHNUNG_STUNDENZE
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "COMPANY"."TRIG_T_REL_RECHNUNG_STUNDENZE" 
BEFORE INSERT ON T_REL_RECHNUNG_STUNDENZETTEL 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    NULL;
  END COLUMN_SEQUENCES;
END;
/
ALTER TRIGGER "COMPANY"."TRIG_T_REL_RECHNUNG_STUNDENZE" ENABLE;
--------------------------------------------------------
--  DDL for Trigger TRIG_T_REL_RECHNUNG_STUNDENZE1
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "COMPANY"."TRIG_T_REL_RECHNUNG_STUNDENZE1" 
BEFORE INSERT ON T_REL_RECHNUNG_STUNDENZETTEL 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    IF INSERTING AND :NEW.PK_REL_RE_STDZ IS NULL THEN
      SELECT T_REL_RECHNUNG_STUNDENZETTEL_1.NEXTVAL INTO :NEW.PK_REL_RE_STDZ FROM SYS.DUAL;
    END IF;
  END COLUMN_SEQUENCES;
END;
/
ALTER TRIGGER "COMPANY"."TRIG_T_REL_RECHNUNG_STUNDENZE1" ENABLE;
--------------------------------------------------------
--  DDL for Trigger TRIG_T_REL_STUNDENZETTEL_BELEG
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "COMPANY"."TRIG_T_REL_STUNDENZETTEL_BELEG" 
BEFORE INSERT ON T_REL_STUNDENZETTEL_BELEG 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    IF INSERTING AND :NEW.PK_REL_STDZ_BEL IS NULL THEN
      SELECT SEQ_REL_STUNDENZETTEL_BELEG.NEXTVAL INTO :NEW.PK_REL_STDZ_BEL FROM SYS.DUAL;
    END IF;
  END COLUMN_SEQUENCES;
END;
/
ALTER TRIGGER "COMPANY"."TRIG_T_REL_STUNDENZETTEL_BELEG" ENABLE;
--------------------------------------------------------
--  DDL for Trigger TRIG_T_STUNDENZETTEL
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "COMPANY"."TRIG_T_STUNDENZETTEL" 
BEFORE INSERT ON T_STUNDENZETTEL 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    IF INSERTING AND :NEW.PK_STUNDENZETTEL IS NULL THEN
      SELECT SEQ_T_STUNDENZETTEL.NEXTVAL INTO :NEW.PK_STUNDENZETTEL FROM SYS.DUAL;
    END IF;
  END COLUMN_SEQUENCES;
END;
/
ALTER TRIGGER "COMPANY"."TRIG_T_STUNDENZETTEL" ENABLE;
--------------------------------------------------------
--  DDL for Trigger TRIG_T_UMSATZART
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "COMPANY"."TRIG_T_UMSATZART" 
BEFORE INSERT ON T_UMSATZART 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    IF INSERTING AND :NEW.PK_UMSATZART IS NULL THEN
      SELECT SEQ_UMSATZART.NEXTVAL INTO :NEW.PK_UMSATZART FROM SYS.DUAL;
    END IF;
  END COLUMN_SEQUENCES;
END;
/
ALTER TRIGGER "COMPANY"."TRIG_T_UMSATZART" ENABLE;
--------------------------------------------------------
--  DDL for Trigger T_STD_GROUP_TRG
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "COMPANY"."T_STD_GROUP_TRG" 
BEFORE INSERT ON T_STD_GROUP 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    IF INSERTING AND :NEW.PK_STD_GROUP IS NULL THEN
      SELECT T_STD_GROUP_SEQ.NEXTVAL INTO :NEW.PK_STD_GROUP FROM SYS.DUAL;
    END IF;
  END COLUMN_SEQUENCES;
END;
/
ALTER TRIGGER "COMPANY"."T_STD_GROUP_TRG" ENABLE;
--------------------------------------------------------
--  DDL for Trigger T_STD_TRG
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "COMPANY"."T_STD_TRG" 
BEFORE INSERT ON T_STD 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    IF INSERTING AND :NEW.PK_STD IS NULL THEN
      SELECT T_STD_SEQ.NEXTVAL INTO :NEW.PK_STD FROM SYS.DUAL;
    END IF;
  END COLUMN_SEQUENCES;
END;
/
ALTER TRIGGER "COMPANY"."T_STD_TRG" ENABLE;
--------------------------------------------------------
--  DDL for Trigger T_STEUER_KRANKENKASSE_TRG
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "COMPANY"."T_STEUER_KRANKENKASSE_TRG" 
BEFORE INSERT ON T_STEUER_KRANKENKASSE 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    IF INSERTING AND :NEW.PK_STEUER_KRANKENKASSE IS NULL THEN
      SELECT T_STEUER_KRANKENKASSE_SEQ.NEXTVAL INTO :NEW.PK_STEUER_KRANKENKASSE FROM SYS.DUAL;
    END IF;
  END COLUMN_SEQUENCES;
END;
/
ALTER TRIGGER "COMPANY"."T_STEUER_KRANKENKASSE_TRG" ENABLE;
--------------------------------------------------------
--  DDL for Trigger T_STEUER_LOHNSTEUERKARTE_TRG
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "COMPANY"."T_STEUER_LOHNSTEUERKARTE_TRG" 
BEFORE INSERT ON T_STEUER_LOHNSTEUERKARTE 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    NULL;
  END COLUMN_SEQUENCES;
END;
/
ALTER TRIGGER "COMPANY"."T_STEUER_LOHNSTEUERKARTE_TRG" ENABLE;
--------------------------------------------------------
--  DDL for Trigger T_STEUER_LOHNSTEUERKARTE_TRG1
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "COMPANY"."T_STEUER_LOHNSTEUERKARTE_TRG1" 
BEFORE INSERT ON T_STEUER_LOHNSTEUERKARTE 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    NULL;
  END COLUMN_SEQUENCES;
END;
/
ALTER TRIGGER "COMPANY"."T_STEUER_LOHNSTEUERKARTE_TRG1" ENABLE;
--------------------------------------------------------
--  DDL for Trigger T_STEUER_LOHNSTEUERKARTE_TRG2
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "COMPANY"."T_STEUER_LOHNSTEUERKARTE_TRG2" 
BEFORE INSERT ON T_STEUER_LOHNSTEUERKARTE 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    IF INSERTING AND :NEW.PK_STEUER_LOHNSTEUERKARTE IS NULL THEN
      SELECT T_STEUER_LOHNSTEUERKARTE_SEQ.NEXTVAL INTO :NEW.PK_STEUER_LOHNSTEUERKARTE FROM SYS.DUAL;
    END IF;
  END COLUMN_SEQUENCES;
END;
/
ALTER TRIGGER "COMPANY"."T_STEUER_LOHNSTEUERKARTE_TRG2" ENABLE;
--------------------------------------------------------
--  DDL for Trigger T_STEUER_LOHN_TRG
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "COMPANY"."T_STEUER_LOHN_TRG" 
BEFORE INSERT ON T_STEUER_LOHN 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    IF INSERTING AND :NEW.PK_STEUER_LOHN IS NULL THEN
      SELECT T_STEUER_LOHN_SEQ.NEXTVAL INTO :NEW.PK_STEUER_LOHN FROM SYS.DUAL;
    END IF;
  END COLUMN_SEQUENCES;
END;
/
ALTER TRIGGER "COMPANY"."T_STEUER_LOHN_TRG" ENABLE;
--------------------------------------------------------
--  DDL for Trigger T_STEUER_MONAT_TRG
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "COMPANY"."T_STEUER_MONAT_TRG" 
BEFORE INSERT ON T_STEUER_MONAT 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    IF INSERTING AND :NEW.PK_STEUER_MONAT IS NULL THEN
      SELECT T_STEUER_MONAT_SEQ.NEXTVAL INTO :NEW.PK_STEUER_MONAT FROM SYS.DUAL;
    END IF;
  END COLUMN_SEQUENCES;
END;
/
ALTER TRIGGER "COMPANY"."T_STEUER_MONAT_TRG" ENABLE;
--------------------------------------------------------
--  DDL for Trigger T_STEUERNUMMER_TRG
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "COMPANY"."T_STEUERNUMMER_TRG" 
BEFORE INSERT ON T_STEUERNUMMER 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    NULL;
  END COLUMN_SEQUENCES;
END;
/
ALTER TRIGGER "COMPANY"."T_STEUERNUMMER_TRG" ENABLE;
--------------------------------------------------------
--  DDL for Trigger T_STEUERSATZ_TRG
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "COMPANY"."T_STEUERSATZ_TRG" 
BEFORE INSERT ON T_STEUERSATZ 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    IF INSERTING AND :NEW.PK_STEUERSATZ IS NULL THEN
      SELECT T_STEUERSATZ_SEQ.NEXTVAL INTO :NEW.PK_STEUERSATZ FROM SYS.DUAL;
    END IF;
  END COLUMN_SEQUENCES;
END;
/
ALTER TRIGGER "COMPANY"."T_STEUERSATZ_TRG" ENABLE;
--------------------------------------------------------
--  DDL for Trigger T_STEUER_VORANMLDG_TRG
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "COMPANY"."T_STEUER_VORANMLDG_TRG" 
BEFORE INSERT ON T_STEUER_VORANMLDG 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    IF INSERTING AND :NEW.PK_STEUER_VORANMLDG IS NULL THEN
      SELECT T_STEUER_VORANMLDG_SEQ.NEXTVAL INTO :NEW.PK_STEUER_VORANMLDG FROM SYS.DUAL;
    END IF;
  END COLUMN_SEQUENCES;
END;
/
ALTER TRIGGER "COMPANY"."T_STEUER_VORANMLDG_TRG" ENABLE;
--------------------------------------------------------
--  DDL for Trigger T_STROMABLESUNG_TRG
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "COMPANY"."T_STROMABLESUNG_TRG" 
BEFORE INSERT ON T_STROMABLESUNG 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    NULL;
  END COLUMN_SEQUENCES;
END;
/
ALTER TRIGGER "COMPANY"."T_STROMABLESUNG_TRG" ENABLE;
--------------------------------------------------------
--  DDL for Trigger T_WAEHRUNG_TRG
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "COMPANY"."T_WAEHRUNG_TRG" 
BEFORE INSERT ON T_WAEHRUNG 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    NULL;
  END COLUMN_SEQUENCES;
END;
/
ALTER TRIGGER "COMPANY"."T_WAEHRUNG_TRG" ENABLE;
--------------------------------------------------------
--  DDL for Trigger T_WAEHRUNG_TRG1
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "COMPANY"."T_WAEHRUNG_TRG1" 
BEFORE INSERT ON T_WAEHRUNG 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    IF INSERTING AND :NEW.PK_WAEHRUNG IS NULL THEN
      SELECT T_WAEHRUNG_SEQ.NEXTVAL INTO :NEW.PK_WAEHRUNG FROM SYS.DUAL;
    END IF;
  END COLUMN_SEQUENCES;
END;
/
ALTER TRIGGER "COMPANY"."T_WAEHRUNG_TRG1" ENABLE;
--------------------------------------------------------
--  DDL for Procedure PR_INP_BEL
--------------------------------------------------------
set define off;

  CREATE OR REPLACE PROCEDURE "COMPANY"."PR_INP_BEL" as
INSERT INTO inp_belege_all (

    fk_lex_buchung,
    fk_kategorie,
    fk_arbeitstag,
    fk_buchung,
    fk_zahlungsart,
    fk_verwendungszweck,
    fk_inventar,
    fk_projekt,
    belegnummer,
    bezeichnung,
    fk_land,
    fk_city,
    bel_datum,
    von,
    bis,
    netto_betrag,
    fk_steuersatz,
    mwst_betrag,
    brutto_betrag,
    fk_waehrung,
    steuernummer,
    fk_umrechnungskurs,
    comm_rest_beleg,
    comm_tel_beleg,
    comm_produkte,
    "COMM_BEGRÜNDUNG",
    comm_sonstiges,
    beleg,
    zahlungsbeleg,
    liter,
    "ZAPFSÄULE",
    fk_location,
    "PERSÖNLICH_VOR_ORT",
    beleg_uhrzeit,
    von_uhrzeit,
    bis_uhrzeit,
    fk_von_arbeitstag,
    fk_bis_arbeitstag,
    comm_adresse,
    tankstellen_nr,
    brutto_betrag_incl_trinkg,
    comm_parkticket,
    frmdw_netto_betrag,
    fk_frmdw,
    fk_frmdw_mwst_satz,
    frmdw_mwst_betrag,
    frmdw_brutto_betrag,
    frmdw_brutto_incl_trinkg,
    mwst_betrag_eur,
    brutto_betrag_eur,
    brutto_incl_trinkg_eur,
    netto_betrag_eur,
    preis_pro_menge,
    mengeneinheit,
    la_datum,
    fk_la_konto,
    fk_la_wdh,
    fk_status,
    comm_vergehen,
    verg_behoerde,
    cnt_punkte,
    fk_beleg_ablage
)   
select 
    fk_lex_buchung,
    fk_kategorie,
    fk_arbeitstag,
    fk_buchung,
    fk_zahlungsart,
    fk_verwendungszweck,
    fk_inventar,
    fk_projekt,
    belegnummer,
    bezeichnung,
    fk_land,
    fk_city,
    bel_datum,
    von,
    bis,
    netto_betrag,
    fk_steuersatz,
    mwst_betrag,
    brutto_betrag,
    fk_waehrung,
    steuernummer,
    fk_umrechnungskurs,
    comm_rest_beleg,
    comm_tel_beleg,
    comm_produkte,
    "COMM_BEGRÜNDUNG",
    comm_sonstiges,
    beleg,
    zahlungsbeleg,
    liter,
    "ZAPFSÄULE",
    fk_location,
    "PERSÖNLICH_VOR_ORT",
    beleg_uhrzeit,
    von_uhrzeit,
    bis_uhrzeit,
    fk_von_arbeitstag,
    fk_bis_arbeitstag,
    comm_adresse,
    tankstellen_nr,
    brutto_betrag_incl_trinkg,
    comm_parkticket,
    frmdw_netto_betrag,
    fk_frmdw,
    fk_frmdw_mwst_satz,
    frmdw_mwst_betrag,
    frmdw_brutto_betrag,
    frmdw_brutto_incl_trinkg,
    mwst_betrag_eur,
    brutto_betrag_eur,
    brutto_incl_trinkg_eur,
    netto_betrag_eur,
    preis_pro_menge,
    mengeneinheit,
    la_datum,
    fk_la_konto,
    fk_la_wdh,
    fk_status,
    comm_vergehen,
    verg_behoerde,
    cnt_punkte,
    fk_beleg_ablage
    from  inp_belege_all
    where pk_inp_belege_all = :PK_beleg;
    commit;
    end;

/
--------------------------------------------------------
--  DDL for Procedure PR_INP_BEL_POS1
--------------------------------------------------------
set define off;

  CREATE OR REPLACE PROCEDURE "COMPANY"."PR_INP_BEL_POS1" as
begin
INSERT INTO inp_belege_pos_all (

    fk_beleg,
    fk_lex_buchung,
    fk_kategorie,
    fk_arbeitstag,
    fk_buchung,
    fk_zahlungsart,
    fk_verwendungszweck,
    fk_inventar,
    fk_projekt,
    belegnummer,
    bezeichnung,
    fk_land,
    fk_city,
    bel_datum,
    von,
    bis,
    netto_betrag,
    steuersatz,
    mwst,
    brutto_betrag,
    fk_waehrung,
    steuernummer,
    umrechnungskurs,
    comm_rest_beleg,
    comm_tel_beleg,
    comm_produkte,
    "COMM_BEGRÜNDUNG",
    comm_sonstiges,
    beleg,
    zahlungsbeleg,
    liter,
    "ZAPFSÄULE"
) 
select 
    :fk_beleg,
    fk_lex_buchung,
    fk_kategorie,
    fk_arbeitstag,
    fk_buchung,
    fk_zahlungsart,
    fk_verwendungszweck,
    fk_inventar,
    fk_projekt,
    belegnummer,
    bezeichnung,
    fk_land,
    fk_city,
    bel_datum,
    von,
    bis,
    netto_betrag,
    steuersatz,
    mwst,
    brutto_betrag,
    fk_waehrung,
    steuernummer,
    umrechnungskurs,
    comm_rest_beleg,
    comm_tel_beleg,
    comm_produkte,
    "COMM_BEGRÜNDUNG",
    comm_sonstiges,
    beleg,
    zahlungsbeleg,
    liter,
    "ZAPFSÄULE"
from   inp_belege_pos_all
where pk_inp_belege_pos_all = :Pk_inp_bel;
commit;
end;

/
--------------------------------------------------------
--  DDL for Procedure P_SET_NAECHSTE_ZAHLUNG
--------------------------------------------------------
set define off;

  CREATE OR REPLACE PROCEDURE "COMPANY"."P_SET_NAECHSTE_ZAHLUNG" (p_fk_main_key number, p_kontotyp number) as
  v_kontotyp number;
  v_fk_main_key number;
  v_date varchar2(30 char);
begin
 v_kontotyp := p_kontotyp;
 v_fk_main_key := p_fk_main_key;

 execute immediate 'alter session set nls_date_format = ''DD.MM.YYYY HH24:MI:SS''';

/*
 select case 
        when wiederholung = '"monatlich"' 
         then to_date(substr("Buchungstag",1,2) ||'.'||  
           case when to_char(substr("Buchungstag",4,2)+1)>12 
             then 
                 case when length(to_char(substr("Buchungstag",4,2)+1-12))= 1 
                    then '0' || to_char(substr("Buchungstag",4,2)+1-12) 
                    else  to_char(substr("Buchungstag",4,2)+1-12) 
                 end  
             else 
               case when length(to_char(substr("Buchungstag",4,2)+1)) = 1
                then '0' || to_char(substr("Buchungstag",4,2)+1)
                else to_char(substr("Buchungstag",4,2)+1)
               end
            end ||'.'|| 
              case when to_char(substr("Buchungstag",4,2)+1)>12 
                then to_char(substr("Buchungstag",7,4)+1)  
                else to_char(substr("Buchungstag",7,4)) 
              end
    ,'DD.MM.YYYY') 
    when wiederholung = '"jährlich"'  
     then to_date(substr("Buchungstag",1,2) ||'.'|| substr("Buchungstag",4,2)  ||'.'|| to_char(substr("Buchungstag",7,4)+1),'DD.MM.YYYY') 
   end 
   into v_date from "KTO_Girokonto" where fk_main_key = v_fk_main_key;

    insert into test (column1, column2,column3) values (v_fk_main_key, v_kontotyp, v_date);
  commit;
  */

      if v_kontotyp = '1' then
       update "KTO_Girokonto"  set nächste_Zahlung = 
                                   case when wiederholung = '"monatlich"' 
                                            then to_date(substr("Buchungstag",1,2) ||'.'||  
                                                                                            case when to_char(substr("Buchungstag",4,2)+1)>12 
                                                                                                    then 
                                                                                                       case when length(to_char(substr("Buchungstag",4,2)+1-12))=1 
                                                                                                              then '0' || to_char(substr("Buchungstag",4,2)+1-12) 
                                                                                                              else to_char(substr("Buchungstag",4,2)+1-12) 
                                                                                                       end 
                                                                                                    else 
                                                                                                      case when length(to_char(substr("Buchungstag",4,2)+1))=1
                                                                                                             then '0' ||  to_char(substr("Buchungstag",4,2)+1) 
                                                                                                             else  to_char(substr("Buchungstag",4,2)+1) 
                                                                                                      end
                                                                                            end 
                                                                                   ||'.'||  
                                                                                            case when to_char(substr("Buchungstag",4,2)+1)>12 
                                                                                                    then to_char(substr("Buchungstag",7,4)+1)  
                                                                                                    else to_char(substr("Buchungstag",7,4)) 
                                                                                            end
                                                ,'DD.MM.YYYY') 
                                        when wiederholung = '"vierteljährlich"' 
                                            then to_date(substr("Buchungstag",1,2) ||'.'||  
                                                                                            case when to_char(substr("Buchungstag",4,2)+3)>12 
                                                                                                    then 
                                                                                                       case when length(to_char(substr("Buchungstag",4,2)+3-12))=1 
                                                                                                              then '0' || to_char(substr("Buchungstag",4,2)+3-12) 
                                                                                                              else to_char(substr("Buchungstag",4,2)+3-12) 
                                                                                                       end 
                                                                                                    else 
                                                                                                      case when length(to_char(substr("Buchungstag",4,2)+3))=1
                                                                                                             then '0' ||  to_char(substr("Buchungstag",4,2)+3) 
                                                                                                             else  to_char(substr("Buchungstag",4,2)+3) 
                                                                                                      end
                                                                                            end 
                                                                                   ||'.'||  
                                                                                            case when to_char(substr("Buchungstag",4,2)+3)>12 
                                                                                                    then to_char(substr("Buchungstag",7,4)+1)  
                                                                                                    else to_char(substr("Buchungstag",7,4)) 
                                                                                            end
                                                ,'DD.MM.YYYY')    
                                        when wiederholung = '"halbjährlich"' 
                                            then to_date(substr("Buchungstag",1,2) ||'.'||  
                                                                                            case when to_char(substr("Buchungstag",4,2)+6)>12 
                                                                                                    then 
                                                                                                       case when length(to_char(substr("Buchungstag",4,2)+6-12))=1 
                                                                                                              then '0' || to_char(substr("Buchungstag",4,2)+6-12) 
                                                                                                              else to_char(substr("Buchungstag",4,2)+6-12) 
                                                                                                       end 
                                                                                                    else 
                                                                                                      case when length(to_char(substr("Buchungstag",4,2)+6))=1
                                                                                                             then '0' ||  to_char(substr("Buchungstag",4,2)+6) 
                                                                                                             else  to_char(substr("Buchungstag",4,2)+6) 
                                                                                                      end
                                                                                            end 
                                                                                   ||'.'||  
                                                                                            case when to_char(substr("Buchungstag",4,2)+6)>12 
                                                                                                    then to_char(substr("Buchungstag",7,4)+1)  
                                                                                                    else to_char(substr("Buchungstag",7,4)) 
                                                                                            end
                                                ,'DD.MM.YYYY')
                                        when wiederholung = '"jährlich"'  
                                            then to_date(substr("Buchungstag",1,2) ||'.'|| substr("Buchungstag",4,2)  ||'.'|| to_char(substr("Buchungstag",7,4)+1),'DD.MM.YYYY') 
                                        when wiederholung = 'einmalig' then "Buchungstag"
                                    end 
       where  fk_main_key = v_fk_main_key;
       commit;
      end if;



      if v_kontotyp = 2 then
       update "KTO_Kreditkarte"  
            set Nächste_Zahlung = 
                case when wiederholung = '"monatlich"' then to_date(substr("Buchungstag",1,2) ||'.'|| to_char(substr("Buchungstag",4,2)+1) ||'.'|| substr("Buchungstag",7,4),'DD.MM.YYYY') 
                     when wiederholung = '"jährlich"'  then to_date(substr("Buchungstag",1,2) ||'.'|| substr("Buchungstag",4,2)  ||'.'|| to_char(substr("Buchungstag",7,4)+1),'DD.MM.YYYY') 
                     when wiederholung = 'einmalig' then "Buchungstag"
                end 
       where  fk_main_key = v_fk_main_key;
       commit;
      end if;

      if v_kontotyp = 3 then
       update "KTO_Paypal"  set nächste_Zahlung =case when wiederholung = '"monatlich"' then to_date(substr("Datum",1,2) ||'.'|| to_char(substr("Datum",4,2)+1) ||'.'|| substr("Datum",7,4),'DD.MM.YYYY') 
when wiederholung = '"jährlich"'  then to_date(substr("Datum",1,2) ||'.'|| substr("Datum",4,2)  ||'.'|| to_char(substr("Datum",7,4)+1),'DD.MM.YYYY') 
end where  fk_main_key = v_fk_main_key;
       commit;
      end if;



      if v_kontotyp = 4 then
       update "KTO_Tagesgeldkonto"  set nächste_Zahlung =case when wiederholung = '"monatlich"' then to_date(substr("Buchungstag",1,2) ||'.'|| to_char(substr("Buchungstag",4,2)+1) ||'.'|| substr("Buchungstag",7,4),'DD.MM.YYYY') 
when wiederholung = '"jährlich"'  then to_date(substr("Buchungstag",1,2) ||'.'|| substr("Buchungstag",4,2)  ||'.'|| to_char(substr("Buchungstag",7,4)+1),'DD.MM.YYYY') 
end where  fk_main_key = v_fk_main_key;
       commit;
      end if;
end;

/
--------------------------------------------------------
--  DDL for Procedure T_BANK_BELEG_PK
--------------------------------------------------------
set define off;

  CREATE OR REPLACE PROCEDURE "COMPANY"."T_BANK_BELEG_PK" as
begin
insert into t_beleg
(
--buchungstag,
--datum,
fk_umsatzart,
beleg,
betrag_brutto,
frmdw_betrag_brutto,

fk_belegart,
fk_verwendungszweck,
--fk_arbeitstag,
fk_belegwaehrung,
fk_fremdwaehrung,

fk_konto,
--kumulierter_betrag_neg,
--einzelbetrag_neg,
--endbetrag,
--startbetrag,
fk_imp_bel_nr,
fk_imp_no,
fk_arbeitstag,
fk_bankbeleg
)
select 
--to_date(tb.buchungstag,'MM/DD/YYYY HH24:MI:SS'),
--to_date(tb.wertstellung,'MM/DD/YYYY HH24:MI:SS'),
tu.pk_umsatzart,
tb.BUCHUNGSTEXT,
to_number(tb.BETRAG),

to_number(tb.BETRAG),
21,
2,
--ta.pk_arbeitstage,
tf1.pk_fremdwaehrung,
tf2.pk_fremdwaehrung,
3,
--to_number(tb.kumulierter_betrag_negativ),
--to_number(tb.einzelbetrag_negiert),
--to_number(tb.endbetrag),
--to_number(tb.startbetrag),
rownum rnr,
1,
pk_arbeitstage,
1
from (select * from t_imp_bank6 ) tb
 --left join t_arbeitstage ta on to_date(tb.buchungstag,'MM/DD/YYYY HH24:MI:SS')= to_date(ta.datum,'DD.MM.YYYY HH24:MI:SS')
 left join t_fremdwaehrung tf1 on tf1.fremdwaehrung = tb.waehrung
 left join t_fremdwaehrung tf2 on tf2.fremdwaehrung = tb.waehrung
 left join t_umsatzart tu on tu.umsatzart = tb.umsatzart
 left join t_arbeitstage tarb on (nvl(tb.buchungstag,'01.01.2017')) = to_char(trunc(tarb.datum),'DD.MM.YYYY');
 commit;


 end;

/
--------------------------------------------------------
--  DDL for Package PKG_BELEG
--------------------------------------------------------

  CREATE OR REPLACE PACKAGE "COMPANY"."PKG_BELEG" AS 

  /* TODO enter package declarations (types, exceptions, methods etc) here */ 
  

  
  --Vorsteuer
  procedure p_add_vorst_bel(p_pk_main_beleg_new number, p_fk_vorsteuerrelevant number, p_monat number);
  
  procedure p_calc_beleg(p_pk_beleg number, p_delete_flag number ); -- Vorsteuer berechnen
  
  --Arbeitstag setzen
  procedure p_upd_beleg_dat;
  
  --Belegart
  procedure p_chg_belegart;
  
  --Stundenzettel referenzieren
  procedure p_beleg_add_stundenzettel(p_fk_stundenzettel number, p_fk_belegart number, p_monat varchar2);
  
  --Kopie erstellen
  procedure p_cop_beleg  (p_pk_beleg number);
  
  --Vorlagenbelege erstellen
  procedure p_cre_temp_beleg (p_pk_belegart number);
  
  --aus Zahlungsvorgängen Belege erstellen
        procedure p_create_beleg_from_giro(p_fk_belegart number, p_fk_verwendungszweck number, p_fk_vorsteuerrelevant number);
  
        procedure p_create_beleg_from_kredit(p_fk_belegart number, p_fk_verwendungszweck number, p_fk_vorsteuerrelevant number) ;


END PKG_BELEG;

/
--------------------------------------------------------
--  DDL for Package PKG_IMP_BA
--------------------------------------------------------

  CREATE OR REPLACE PACKAGE "COMPANY"."PKG_IMP_BA" AS 

  /* TODO enter package declarations (types, exceptions, methods etc) here */ 

END PKG_IMP_BA;

/
--------------------------------------------------------
--  DDL for Package PKG_IMP_GIR
--------------------------------------------------------

  CREATE OR REPLACE PACKAGE "COMPANY"."PKG_IMP_GIR" AS 

  /* TODO enter package declarations (types, exceptions, methods etc) here */ 
   procedure p_imp_new_gir (p_buchungsdatum date);
   
   procedure p_imp_new_gir1(p_buchungsdatum date);
   
   procedure p_add_arbeitstage ;
   
   procedure p_rem_rel_kontoauszug(p_pk_kontoauszug number);
   
    procedure p_set_buchungstext;
    
     procedure p_set_fk_main_key ;

END PKG_IMP_GIR;

/
--------------------------------------------------------
--  DDL for Package PKG_IMP_KRED
--------------------------------------------------------

  CREATE OR REPLACE PACKAGE "COMPANY"."PKG_IMP_KRED" AS 

  /* TODO enter package declarations (types, exceptions, methods etc) here */ 
   procedure p_create_new_kred(p_buchungstag date);
   
   procedure p_add_arbeitstag;
   
   procedure p_add_konto_relation(p_fk_main_key1 number, p_fk_main_key2 number, p_jahr number, p_monat number, p_tag number);

  procedure p_upd_fk_main_key;
  
END PKG_IMP_KRED;

/
--------------------------------------------------------
--  DDL for Package PKG_IMP_PAYPAL
--------------------------------------------------------

  CREATE OR REPLACE PACKAGE "COMPANY"."PKG_IMP_PAYPAL" AS 

  /* TODO enter package declarations (types, exceptions, methods etc) here */ 

END PKG_IMP_PAYPAL;

/
--------------------------------------------------------
--  DDL for Package PKG_IMP_TEL
--------------------------------------------------------

  CREATE OR REPLACE PACKAGE "COMPANY"."PKG_IMP_TEL" AS 

  /* TODO enter package declarations (types, exceptions, methods etc) here */ 
 
END PKG_IMP_TEL;

/
--------------------------------------------------------
--  DDL for Package PKG_LEX
--------------------------------------------------------

  CREATE OR REPLACE PACKAGE "COMPANY"."PKG_LEX" AS 

  /* TODO enter package declarations (types, exceptions, methods etc) here */ 


END PKG_LEX;

/
--------------------------------------------------------
--  DDL for Package PKG_RECHNUNG
--------------------------------------------------------

  CREATE OR REPLACE PACKAGE "COMPANY"."PKG_RECHNUNG" AS 

  /* TODO enter package declarations (types, exceptions, methods etc) here */ 
   PROCEDURE   p_create_eingangsrechnung(p_fk_verwendungszweck number);
   
END PKG_RECHNUNG;

/
--------------------------------------------------------
--  DDL for Package PKG_SERVICES
--------------------------------------------------------

  CREATE OR REPLACE PACKAGE "COMPANY"."PKG_SERVICES" AS 

  /* TODO enter package declarations (types, exceptions, methods etc) here */ 

END PKG_SERVICES;

/
--------------------------------------------------------
--  DDL for Package SAMPLE_DATA_PKG
--------------------------------------------------------

  CREATE OR REPLACE PACKAGE "COMPANY"."SAMPLE_DATA_PKG" as
  function varchar2_to_blob(p_varchar2_tab in dbms_sql.varchar2_table) return blob;
  procedure delete_data;
  procedure insert_data;
end sample_data_pkg;

/
--------------------------------------------------------
--  DDL for Package SAMPLE_PKG
--------------------------------------------------------

  CREATE OR REPLACE PACKAGE "COMPANY"."SAMPLE_PKG" is
    --
    -- Error Handling function
    --
    function demo_error_handling (
        p_error in apex_error.t_error )
        return apex_error.t_error_result;
    
    --
    -- Tag Cleaner function
    --
    function demo_tags_cleaner (
        p_tags  in varchar2,
        p_case  in varchar2 default 'U') 
        return varchar2;
    
    --
    -- Tag Synchronisation Procedure
    --
    procedure demo_tag_sync (
        p_new_tags          in varchar2,
        p_old_tags          in varchar2,
        p_content_type      in varchar2,
        p_content_id        in number );
end sample_pkg;

/
--------------------------------------------------------
--  DDL for Package Body PKG_BELEG
--------------------------------------------------------

  CREATE OR REPLACE PACKAGE BODY "COMPANY"."PKG_BELEG" AS


    
    procedure p_add_vorst_bel(p_pk_main_beleg_new number, p_fk_vorsteuerrelevant number, p_monat number) as
    begin
        merge into t_beleg t1
        using (
                select tbel.*, p_pk_main_beleg_new  as fk_main_beleg_new  -- pk_main_beleg_new: 4864 
                from t_BELEG tbel
                 left join t_ARBEITSTAGe tarb on tbel.fk_arbeitstag = tarb.pk_arbeitstage
                where fk_vorsteuerrelevant = p_fk_vorsteuerrelevant --p_fk_vorsteuerrelevant: 1
                and monat = p_monat  --p_monat: 6
        )
        t2 on (t1.pk_beleg = t2.pk_beleg)
        when matched then
         update set t1.fk_main_beleg = t2.fk_main_beleg_new;
        commit;
    end p_add_vorst_bel;

    procedure p_calc_beleg(p_pk_beleg number, p_delete_flag number ) as
    
     v_delete_flag number := 0;
     
    begin
    
    
        if p_delete_flag is not null then
          v_delete_flag := p_delete_flag;
        end if;
    
        
        update t_beleg set betrag_netto =round( betrag_brutto*100/119,2) where fk_main_beleg = p_pk_beleg;
        commit;
        
        update t_beleg set mwst =round( betrag_brutto*19/119,2) where fk_main_beleg = p_pk_beleg;
        commit;
        
        update t_beleg set betrag_netto = -1*betrag_netto, mwst = -1*mwst , betrag_brutto =-1*betrag_brutto where betrag_brutto >0;
        commit;
        
        if v_delete_flag = 1 then
            delete from t_beleg where pk_beleg =p_pk_beleg;
            commit;
        end if;
    end p_calc_beleg;
    
    procedure p_chg_belegart as
     /* 
        Zuordnung der Belege zur Belegart über vorgegebene Stringinhalte (teilautomatisiert)
         --falls noch keine Belegart angegeben wurde
         --unter Verwendung der Tabelle "T_Match"
     */
     
    begin
    
        merge into t_beleg t1
         using (
        
                select pk_beleg, fk_key fk_belegart
                from t_beleg tb
                 join t_match tm on upper(tb.beleg) like upper(krit)
                where fk_belegart is null
            ) t2 on (t1.pk_beleg = t2.pk_beleg)
        when matched then 
         update set t1.fk_belegart = t2.fk_belegart;
        commit;
    
    end p_chg_belegart;
    
    procedure p_upd_beleg_dat as

    begin
    
            /*Arbeitstage für Belege ergänzen*/
            merge into t_beleg t1
            using (
                        select tbel.pk_beleg, tarb.datum dat1, tbel.datum dat2, tbel.fk_arbeitstag, tarb.pk_arbeitstage
                        from t_beleg tbel
                          join t_arbeitstage tarb on to_char(trunc(tarb.datum),'DD.MM.YYYY') = to_char(trunc(tbel.datum),'DD.MM.YYYY')                
                        where tbel.fk_arbeitstag is null --kein Arbeitstag gesetzt
            ) t2 on (t1.pk_beleg = t2.pk_beleg)
            when matched then 
             update set t1.fk_arbeitstag = t2.pk_arbeitstage;
            commit;
    
    end p_upd_beleg_dat;
    
    procedure p_beleg_add_stundenzettel(p_fk_stundenzettel number, p_fk_belegart number, p_monat varchar2) as
    begin
        insert into t_rel_stundenzettel_beleg (fk_stundenzettel, fk_beleg)
        select p_fk_stundenzettel, pk_beleg from t_beleg where fk_belegart = p_fk_belegart and substr(datum,4,2) =p_monat; --monat:  '07'
        commit;
    end p_beleg_add_stundenzettel;

    procedure p_cop_beleg  (p_pk_beleg number) as
    
    begin
        
        INSERT INTO t_beleg (
        
            fk_steuersatz,
            fk_belegart,
            fk_verwendungszweck,
            fk_arbeitstag,
            fk_projekt,
            fk_lehrgang,
            fk_einkauf,
            beleg,
            betrag_brutto,
            datum,
            von,
            bis,
            az_o_pause,
            az_m_pause,
            anwesenheitszeit,
            parkzeit,
            az_manuell_gepflegt,
            kommentar,
            betrag_netto,
            fk_imp_bel_nr,
            fk_imp_no,
            ext_renr,
            ext_auftragsnr,
            ext_lieferscheinnr,
            ext_leistungsdatum,
            ext_rechnungsdatum,
            ext_auftragsdatum,
            fk_offen,
            fk_vorsteuerrelevant,
            fk_vorsteuerpflege,
            fk_rechnungserstellung,
            fk_rechnung_erstellt,
            fk_bankbeleg,
            created_by,
            created_at,
            modified_by,
            modified_at,
            mwst,
            fk_lieferart,
            fk_einkommensteuerrelevant,
            fk_unternehmenssteuerrelevant,
            fk_bestellnr,
            fk_bestelltyp,
            fk_abrechnungszeitraum,
            fk_fremdwaehrung,
            frmdw_betrag_netto,
            frmdw_stsatz,
            frmdw_mwst,
            frmdw_betrag_brutto,
            ---
            buchungstag,
            fk_konto,
            kumulierter_Betrag_neg,
            kumulierter_betrag,
            endbetrag,
            startbetrag,
            betrag_neg,
            fk_belegwaehrung,
            fk_umsatzart,
            einzelbetrag_neg,
            fk_main_beleg,
            fk_bel_fehlend
        ) SELECT
        
            fk_steuersatz,
            fk_belegart,
            fk_verwendungszweck,
            fk_arbeitstag,
            fk_projekt,
            fk_lehrgang,
            fk_einkauf,
            beleg,
            betrag_brutto,
            datum,
            von,
            bis,
            az_o_pause,
            az_m_pause,
            anwesenheitszeit,
            parkzeit,
            az_manuell_gepflegt,
            kommentar,
            betrag_netto,
            fk_imp_bel_nr,
            fk_imp_no,
            ext_renr,
            ext_auftragsnr,
            ext_lieferscheinnr,
            ext_leistungsdatum,
            ext_rechnungsdatum,
            ext_auftragsdatum,
            fk_offen,
            fk_vorsteuerrelevant,
            fk_vorsteuerpflege,
            fk_rechnungserstellung,
            fk_rechnung_erstellt,
            fk_bankbeleg,
            created_by,
            created_at,
            modified_by,
            modified_at,
            mwst,
            fk_lieferart,
            fk_einkommensteuerrelevant,
            fk_unternehmenssteuerrelevant,
            fk_bestellnr,
            fk_bestelltyp,
            fk_abrechnungszeitraum,
            fk_fremdwaehrung,
            frmdw_betrag_netto,
            frmdw_stsatz,
            frmdw_mwst,
            frmdw_betrag_brutto,
            ---
            buchungstag,
            fk_konto,
            kumulierter_Betrag_neg,
            kumulierter_betrag,
            endbetrag,
            startbetrag,
            betrag_neg,
            fk_belegwaehrung,
            fk_umsatzart,
            einzelbetrag_neg,
            fk_main_beleg,
            fk_bel_fehlend
        FROM
            t_beleg
        where pk_beleg = p_PK_BELEG;
     commit;
     
    end p_cop_beleg;
    

    
    procedure p_cre_temp_beleg (p_pk_belegart number) as
        /*
          für jede Belegart einen Vorlagenbeleg erstellen (teilautomatisiert)
          --mit den wesentlichen Einträgen für diese Belegart aus der Kopie eines bestehenden Beleges der Belegart
          --anschließende Änderungen an der Vorlage vornehmen (anpassen an Gebrauch)
          --aus der Vorlage können weitere Vorlagen über die Belegkopie erstellt werden
        */
    begin
        
        
        insert into t_TEMP_BELEG 
            SELECT PK_BELEG,
            FK_STEUERSATZ,
            FK_BELEGART,
            FK_VERWENDUNGSZWECK,
            FK_ARBEITSTAG,
            FK_PROJEKT,
            FK_LEHRGANG,
            FK_EINKAUF,
            BELEG,
            BETRAG_BRUTTO,
            DATUM,
            VON,
            BIS,
            AZ_O_PAUSE,
            AZ_M_PAUSE,
            ANWESENHEITSZEIT,
            PARKZEIT,
            AZ_MANUELL_GEPFLEGT,
            KOMMENTAR,
            BETRAG_NETTO,
            FK_IMP_BEL_NR,
            FK_IMP_NO,
            EXT_RENR,
            EXT_AUFTRAGSNR,
            EXT_LIEFERSCHEINNR,
            EXT_LEISTUNGSDATUM,
            EXT_RECHNUNGSDATUM,
            EXT_AUFTRAGSDATUM,
            FK_OFFEN,
            FK_VORSTEUERRELEVANT,
            FK_VORSTEUERPFLEGE,
            FK_RECHNUNGSERSTELLUNG,
            FK_RECHNUNG_ERSTELLT,
            FK_BANKBELEG,
            CREATED_BY,
            CREATED_AT,
            MODIFIED_BY,
            MODIFIED_AT,
            MWST,
            FK_LIEFERART,
            FK_EINKOMMENSTEUERRELEVANT,
            FK_UNTERNEHMENSSTEUERRELEVANT,
            FK_BESTELLNR,
            FK_BESTELLTYP,
            FK_ABRECHNUNGSZEITRAUM,
            FK_FREMDWAEHRUNG,
            FRMDW_BETRAG_NETTO,
            FRMDW_STSATZ,
            FRMDW_MWST,
            FRMDW_BETRAG_BRUTTO,
            BUCHUNGSTAG,
            FK_KONTO,
            KUMULIERTER_BETRAG_NEG,
            KUMULIERTER_BETRAG,
            ENDBETRAG,
            STARTBETRAG,
            BETRAG_NEG,
            FK_BELEGWAEHRUNG,
            FK_UMSATZART,
            EINZELBETRAG_NEG 
        from t_beleg 
        where pk_beleg in (
                                select max(pk_beleg) pk_beleg 
                                from t_beleg 
                                where fk_belegart = p_pk_belegart or p_pk_belegart is null
                                group by fk_belegart
                           );
        commit;
        
     END p_cre_temp_beleg ;
     
    PROCEDURE  p_create_beleg_from_giro(p_fk_belegart number, p_fk_verwendungszweck number, p_fk_vorsteuerrelevant number) as 

    begin
    
        merge into t_beleg t1
         using (
                    select 
                        null as pk_beleg,
                        gir."Buchungstag" datum,
                        gir."Wertstellung" beleg,
                        gir."Betrag" betrag,
                        gir."Buchungstext" || ' ' || "Kategorie" comm,
                    --    gir."Betrag Ursprung" frmdw_betrag_brutto,
                        ta.pk_arbeitstage fk_arbeitstag,
                        tf1.pk_fremdwaehrung fk_belegwaehrung,
                     --   tf2.pk_fremdwaehrung fk_fremdwaehrung,
                        gir.fk_konto fk_konto
                    from "KTO_Girokonto" gir
                        left join t_arbeitstage ta on gir."Buchungstag"= ta.datum
                        left join t_fremdwaehrung tf1 on tf1.fremdwaehrung = gir."Währung"
                      --  left join t_fremdwaehrung tf2 on tf2.fremdwaehrung = gir."Währung Ursprung"
        
         ) t2 on (t1.pk_beleg = t2.pk_beleg)
         when not matched then
        insert ( 
                  t1.datum,
                  t1.beleg,
                  t1.betrag_brutto,
                  t1.Kommentar,
                  t1.created_by,
                  t1.created_at,
                  t1.modified_by,
                  t1.modified_at,
                  --
                  t1.fK_belegart,
                  t1.fk_bankbeleg,
                  t1.fk_verwendungszweck,
                  t1.fk_vorsteuerrelevant,
                  --
               -- t1.frmdw_betrag_brutto,
                  t1.fk_belegwaehrung,
               --   t1.fk_fremdwaehrung,
                  t1.fk_arbeitstag,
                  t1.fk_konto
          )
          values (
        
                  t2.datum,
                  t2.beleg,
                  t2.betrag,
                  t2.comm,
                  user,
                  sysdate,
                  user,
                  sysdate,
                  --
                  p_fk_belegart, --21,
                  1, --Bankbeleg
                  p_fk_verwendungszweck, --2, --geschäftlich / privat / verschieden
                  p_fk_vorsteuerrelevant, --0
                  --
                 -- t2.frmdw_betrag_brutto,
                  t2.fk_belegwaehrung,
                 -- t2.fk_fremdwaehrung,
                  t2.fk_arbeitstag,
                  t2.fk_konto
        
        
          );
        commit;
    end p_create_beleg_from_giro;
     
    procedure p_create_beleg_from_kredit(p_fk_belegart number, p_fk_verwendungszweck number, p_fk_vorsteuerrelevant number) as 
    
      /*aus Kreditkartenzahlungsvorgängen Belege erstellen */
      
    begin
        merge into t_beleg t1
         using (
                select 
                    null as pk_beleg,  --neuer Beleg
                    kred."Beleg"  ,
                    kred."Buchungstag" as datum,
                    kred."Unternehmen" as beleg,
                    kred."Betrag" betrag,
                    kred."Kategorie" ,
                    kred."Beleg"  || ' ' || "Kategorie" as comm ,
                    kred."Betrag Ursprung" frmdw_betrag_brutto,
                    ta.pk_arbeitstage fk_arbeitstag,
                    tf1.pk_fremdwaehrung fk_belegwaehrung,
                    tf2.pk_fremdwaehrung fk_fremdwaehrung,
                    kred.fk_konto fk_konto
                from "KTO_Kreditkarte" kred
                 left join t_arbeitstage ta on kred."Buchungstag"= ta.datum
                 left join t_fremdwaehrung tf1 on tf1.fremdwaehrung = kred."Währung"
                 left join t_fremdwaehrung tf2 on tf2.fremdwaehrung = kred."Währung Ursprung"
        
         ) t2 on (t1.pk_beleg = t2.pk_beleg)
         when not matched then
        insert ( 
                  t1.datum,
                  t1.beleg,
                  t1.betrag_brutto,
                  t1.Kommentar,
                  t1.created_by,
                  t1.created_at,
                  t1.modified_by,
                  t1.modified_at,
                  --
                  t1.fK_belegart,
                  t1.fk_bankbeleg,
                  t1.fk_verwendungszweck,
                  t1.fk_vorsteuerrelevant,
                  --
                  t1.frmdw_betrag_brutto,
                  t1.fk_belegwaehrung,
                  t1.fk_fremdwaehrung,
                  t1.fk_arbeitstag,
                  t1.fk_konto
          )
        values (
                
                  t2.datum,
                  t2.beleg,
                  t2.betrag,
                  t2.comm,
                  user,
                  sysdate,
                  user,
                  sysdate,
                  ---
                  p_fk_belegart, --21,
                  1, --Bankbeleg
                  p_fk_verwendungszweck, --2, --geschäftlich / privat / verschieden
                  p_fk_vorsteuerrelevant, --0
                  --
                  --
                  t2.frmdw_betrag_brutto,
                  t2.fk_belegwaehrung,
                  t2.fk_fremdwaehrung,
                  t2.fk_arbeitstag,
                  t2.fk_konto
        
          );
        commit;
    end p_create_beleg_from_kredit;
    
    procedure p_add_allg_bel_wert as
    
    
    begin
    
        update imp_ba_allg_bel set wert = to_number(nvl(substr(Betrag,1,instr(Betrag,' ')), betrag)) where wert is null;
        commit;
    end p_add_allg_bel_wert;
    
    procedure p_split_datum_bel as
    
    begin
    
      update imp_ba_allg_bel set datum = substr(datum,1,instr(datum, ' ')) , uhrzeit = substr(datum,instr(datum, ' ')+1,length(datum)-instr(datum, ' ')) where instr(datum,' ') >0;
      commit;
    end p_split_datum_bel;
    
    procedure p_allg_bel_add_arb as
    
    begin
    
         merge into IMP_BA_allg_bel t1
        using (
                    select 
                        pk_arbeitstage, 
                        pk_imp_ba_allg_bel              
                    from (select * from IMP_BA_allg_bel where Datum is not null and fk_arbeitstag is null) bel,
                      t_arbeitstage arb
                    where  
                    to_date(substr(bel.datum,1,10), 'DD/MM/YYYY')=   arb.datum 
                    --bel.fk_buchungstag is null
             ) t2 on (t1.pk_imp_ba_allg_bel= t2.pk_imp_ba_allg_bel)
            when matched then
            update set t1.fk_arbeitstag= t2.pk_arbeitstage;
            commit;
    end p_allg_bel_add_arb;
END PKG_BELEG;

/
--------------------------------------------------------
--  DDL for Package Body PKG_IMP_BA
--------------------------------------------------------

  CREATE OR REPLACE PACKAGE BODY "COMPANY"."PKG_IMP_BA" AS

 procedure p_imp_ba_tank_add_arb as
 
 begin
 
        merge into IMP_BA_TANKSTELLE t1
        using (
                    select 
                        pk_arbeitstage, 
                        pk_imp_ba_tankstelle              
                    from (select * from IMP_BA_TANKSTELLE where Datum is not null and fk_arbeitstag is null) bel,
                      t_arbeitstage arb
                    where  
                    to_date(substr(bel.datum,1,10), 'DD/MM/YYYY')=   arb.datum 
                    --bel.fk_buchungstag is null
             ) t2 on (t1.pk_imp_ba_tankstelle= t2.pk_imp_ba_tankstelle)
            when matched then
            update set t1.fk_arbeitstag= t2.pk_arbeitstage;
            commit;
            
            merge into imp_ba_allg_bel t1
 using ( select bild
         from imp_ba_elektronik
         where pk_imp_ba_elektronik = 23
         ) t2 on (t1.pk_imp_ba_allg_bel=821)
when matched then 
update set t1.bild = t2.bild;
commit;
 merge into t_inventare t1
 using ( select bild
         from imp_ba_software
         where pk_imp_ba_software = 1
         ) t2 on (t1.pk_inventar=14)
when matched then 
update set t1.bild = t2.bild;
commit;
update imp_ba_bussgelder set fk_inventar = 17  where kennzeichen = 'M-RO 2947';
  commit;

update imp_ba_bussgelder set fk_inventar = 5  where kennzeichen = 'M-ZO 523';
  commit;

update imp_ba_bussgelder set fk_inventar = 16  where kennzeichen = 'M-R 7408';
  commit;
  
  merge into imp_ba_tankstelle t1
using (
select pk_imp_ba_tankstelle, min(pk_projekt) pk_projekt
from t_projekt pr
 join imp_ba_tankstelle tk on tk.datum between pr.von and pr.bis
 group by pk_imp_ba_tankstelle
 ) t2 on (t1.pk_imp_ba_tankstelle = t2.pk_imp_ba_tankstelle)
 when matched then 
 update set t1.fk_projekt = t2.pk_projekt;
 commit;
 
 merge into imp_ba_hotelrechnungen t1
using (
select pk_imp_ba_hotelrechnungen, min(pk_projekt) pk_projekt
from t_projekt pr
 join imp_ba_hotelrechnungen tk on case when length(tk.datum) = 8  then to_date(tk.datum, 'MM/DD/YYYY')
 --when length(tk.datum) = 20 then to_date(tk.datum, 'DD.MM.YYYY HH24:MI:SS')
 end between pr.von and pr.bis
 where length(tk.datum) = 8
 and instr(tk.datum,'/')>0
 group by pk_imp_ba_hotelrechnungen
 ) t2 on (t1.pk_imp_ba_hotelrechnungen = t2.pk_imp_ba_hotelrechnungen)
 when matched then 
 update set t1.fk_projekt = t2.pk_projekt;
 commit;
 
 select datum, length(datum) from imp_ba_hotelrechnungen  where length(datum) = 20;

merge into imp_ba_hotelrechnungen t1
using (
select pk_imp_ba_hotelrechnungen, min(pk_projekt) pk_projekt
from t_projekt pr
 join imp_ba_hotelrechnungen tk on case when length(tk.datum) = 9  then to_date(tk.datum, 'MM/DD/YYYY')
 when length(tk.datum) = 19 then to_date(tk.datum, 'MM/DD/YYYY HH24:MI:SS')
 end between pr.von and pr.bis
 where length(tk.datum) = 9
 and instr(tk.datum,'/')>0
 group by pk_imp_ba_hotelrechnungen
 ) t2 on (t1.pk_imp_ba_hotelrechnungen = t2.pk_imp_ba_hotelrechnungen)
 when matched then 
 update set t1.fk_projekt = t2.pk_projekt;
 commit;
 
 select datum, length(datum) from imp_ba_hotelrechnungen  where length(datum) = 20;


 end p_imp_ba_tank_add_arb;
 
 
 procedure p_set_fk_imp_ba_bel as
 
 begin
 
         update   IMP_BA_ALLG_BEL set fk_imp_ba_bel = "COMPANY"."IMP_BA_BEL_SEQ".nextval where fk_imp_ba_bel is null ;
        commit;
        
        update  IMP_BA_AUTOERSATZTEILE set fk_imp_ba_bel = "COMPANY"."IMP_BA_BEL_SEQ".nextval where fk_imp_ba_bel is null ;
        commit;
        
        
        update   IMP_BA_BUSSGELDER set fk_imp_ba_bel = "COMPANY"."IMP_BA_BEL_SEQ".nextval where fk_imp_ba_bel is null ;
        commit;
        
        update    IMP_BA_CARMIETE set fk_imp_ba_bel = "COMPANY"."IMP_BA_BEL_SEQ".nextval where fk_imp_ba_bel is null ;
        commit;
        
        
        update   IMP_BA_COWORKING set fk_imp_ba_bel = "COMPANY"."IMP_BA_BEL_SEQ".nextval where fk_imp_ba_bel is null ;
        commit;
        
        update   IMP_BA_ELEKTRONIK set fk_imp_ba_bel = "COMPANY"."IMP_BA_BEL_SEQ".nextval where fk_imp_ba_bel is null ;
        commit;
        
        update   IMP_BA_GRENZBELEGE set fk_imp_ba_bel = "COMPANY"."IMP_BA_BEL_SEQ".nextval where fk_imp_ba_bel is null ;
        commit;
        
        update   IMP_BA_HEIZUNGSABRECHNUNG set fk_imp_ba_bel = "COMPANY"."IMP_BA_BEL_SEQ".nextval where fk_imp_ba_bel is null ;
        commit;
        
        update    IMP_BA_HOTELRECHNUNGEN set fk_imp_ba_bel = "COMPANY"."IMP_BA_BEL_SEQ".nextval where fk_imp_ba_bel is null ;
        commit;
        
        update     IMP_BA_KFZ_VERSICHERUNGEN set fk_imp_ba_bel = "COMPANY"."IMP_BA_BEL_SEQ".nextval where fk_imp_ba_bel is null ;
        commit;
        
        update     IMP_BA_KRANKENKASSE set fk_imp_ba_bel = "COMPANY"."IMP_BA_BEL_SEQ".nextval where fk_imp_ba_bel is null ;
        commit;
        
        update      IMP_BA_OEFFENTL_TICKETS set fk_imp_ba_bel = "COMPANY"."IMP_BA_BEL_SEQ".nextval where fk_imp_ba_bel is null ;
        commit;
        
        update      IMP_BA_PARKTICKETS set fk_imp_ba_bel = "COMPANY"."IMP_BA_BEL_SEQ".nextval where fk_imp_ba_bel is null ;
        commit;
        
        update       IMP_BA_SONSTIGE_BELEGE set fk_imp_ba_bel = "COMPANY"."IMP_BA_BEL_SEQ".nextval where fk_imp_ba_bel is null ;
        commit;
        
        update       IMP_BA_STEUER set fk_imp_ba_bel = "COMPANY"."IMP_BA_BEL_SEQ".nextval where fk_imp_ba_bel is null ;
        commit;
        
        update        IMP_BA_TANKSTELLE set fk_imp_ba_bel = "COMPANY"."IMP_BA_BEL_SEQ".nextval where fk_imp_ba_bel is null ;
        commit;
        
        update        IMP_BA_Textilreinigung set fk_imp_ba_bel = "COMPANY"."IMP_BA_BEL_SEQ".nextval where fk_imp_ba_bel is null ;
        commit;

        
        update    IMP_TEL_MOBILCOM_RECH_OV set fk_imp_tel_bel = "COMPANY"."IMP_BA_BEL_SEQ".nextval where fk_imp_tel_bel is null ;
        commit;
        
        update    IMP_TEL_O2 set fk_imp_tel_bel = "COMPANY"."IMP_BA_BEL_SEQ".nextval where fk_imp_tel_bel is null ;
        commit;
        
        update    IMP_TEL_VODAFONE set fk_imp_tel_bel = "COMPANY"."IMP_BA_BEL_SEQ".nextval where fk_imp_tel_bel is null ;
        commit;
        
        merge into imp_ba_hotelrechnungen t1
using (
select pk_imp_ba_hotelrechnungen, min(pk_projekt) pk_projekt
from t_projekt pr
 join imp_ba_hotelrechnungen tk on case when length(tk.datum) = 9  then to_date(tk.datum, 'MM/DD/YYYY')
 when length(tk.datum) = 19 then to_date(tk.datum, 'MM/DD/YYYY HH24:MI:SS')
 end between pr.von and pr.bis
 where length(tk.datum) = 9
 and instr(tk.datum,'/')>0
 group by pk_imp_ba_hotelrechnungen
 ) t2 on (t1.pk_imp_ba_hotelrechnungen = t2.pk_imp_ba_hotelrechnungen)
 when matched then 
 update set t1.fk_projekt = t2.pk_projekt;
 commit;
 
 select datum, length(datum) from imp_ba_hotelrechnungen  where length(datum) = 20;
    end p_set_fk_imp_ba_bel;
    
    procedure p_check_fk_imp_ba_bel as
     v_cnt number;
    begin
        select  count(*)
        into v_cnt
        from v_imp_bel_zus
        group by fk_imp_ba_bel
        having count(*)> 1;
    
    end  p_check_fk_imp_ba_bel;

END PKG_IMP_BA;

/
--------------------------------------------------------
--  DDL for Package Body PKG_IMP_GIR
--------------------------------------------------------

  CREATE OR REPLACE PACKAGE BODY "COMPANY"."PKG_IMP_GIR" AS

 procedure p_imp_new_gir (p_buchungsdatum date) as
 
 begin
 
     insert into "KTO_Girokonto"
        (
            "Buchungstag",
            "Wertstellung",
            "Umsatzart",
            "Buchungstext",
            "Betrag",
            "Währung",
            "Auftraggeberkonto",
            "Bankleitzahl Auftraggeberkonto",
            "IBAN Auftraggeberkonto",
            "Kategorie"
        
        )
        select 
            to_date(BUCHUNGSTAG,'MM/DD/YYYY'),
            to_date(WERTSTELLUNG,'MM/DD/YYYY'),
            UMSATZART,
            BUCHUNGSTEXT,
            BETRAG,
            WÄHRUNG,
            AUFTRAGGEBERKONTO,
            BANKLEITZAHL_AUFTRAGGEBERKONTO,
            IBAN_AUFTRAGGEBERKONTO,
            KATEGORIE
        from IMP_KTO_GIR
        where to_date(Buchungstag,'MM/DD/YYYY') > p_buchungsdatum; --to_date('11/28/2018','MM/DD/YYYY');
        commit;
     
 
 
 end p_imp_new_gir;
 
 procedure p_imp_new_gir1(p_buchungsdatum date) as
 
 begin
 
   insert into "KTO_Girokonto"
        (
            "Buchungstag",
            "Wertstellung",
            "Umsatzart",
            "Buchungstext",
            "Betrag",
            "Währung",
            "Auftraggeberkonto",
            "Bankleitzahl Auftraggeberkonto",
            "IBAN Auftraggeberkonto",
            "Kategorie"
        
        )
        select 
            to_date(BUCHUNGSTAG,'DD.MM.YYYY'),
            to_date(WERTSTELLUNG,'DD.MM.YYYY'),
            UMSATZART,
            BUCHUNGSTEXT,
            BETRAG,
            WÄHRUNG,
            AUFTRAGGEBERKONTO,
            BANKLEITZAHL_AUFTRAGGEBERKONTO,
            IBAN_AUFTRAGGEBERKONTO,
            KATEGORIE
        from IMP_KTO_GIR;
        
        commit;
 
 
 end  p_imp_new_gir1;
 
 procedure p_add_arbeitstage as
 
 begin
 
  merge into "KTO_Girokonto" t1
  using (
        select pk_arbeitstage, 
        id
        
        from (select * from "KTO_Girokonto" where "Buchungstag" is not null and fk_buchungstag is null) bel,
          t_arbeitstage arb
        where  to_date(substr(bel."Buchungstag",1,10), 'DD/MM/YYYY')= arb.datum 
         ) t2 on (t1.id = t2.id)
        when matched then
        update set t1.fk_buchungstag= t2.pk_arbeitstage;
        commit;
 
  merge into "KTO_Girokonto" t1
  using (
          select pk_arbeitstage, 
           id
        
          from (select * from "KTO_Girokonto" where "Wertstellung" is not null and fk_wertstellung is null) bel,
          t_arbeitstage arb
          where  to_date(substr(bel."Wertstellung",1,10), 'DD/MM/YYYY')= arb.datum 
         ) t2 on (t1.id = t2.id)
        when matched then
        update set t1.fk_wertstellung= t2.pk_arbeitstage;
        commit;
        
          insert into "KTO_Girokonto"
        (id,
            "Buchungstag",
            "Wertstellung",
            "Umsatzart",
            "Buchungstext",
           "Betrag",
            "Währung",
            "Auftraggeberkonto",
            "Bankleitzahl Auftraggeberkonto",
            "IBAN Auftraggeberkonto",
            "Kategorie",
            empfänger,
           saldo
        
        )
        select 
        "KTO_Girokonto_SE8".nextval,
       to_date( BUCHUNGSdatum,'DD.MM.YYYY HH24:MI:SS'),
       to_date( WERTSTELLUNG,'DD.MM.YYYY HH24:MI:SS'),
            UMSATZART,
           BUCHUNGSDETAILS,
        replace(substr( BETRAG,1, instr(betrag, '')-1),'.',''),
            'EUR' WaeHRUNG,
            null AUFTRAGGEBERKONTO,
            null BANKLEITZAHL,
            null IBAN,
            null KATEGORIE,
            EMPFÄnger,
           replace( substr(saldo,1, instr(saldo, '')-1),'.','')
        
            from t_imp_bank_2105;
-- where Buchungstag< to_date('05.02.2019','DD.MM.YYYY HH24:MI:SS');
        commit;
 end p_add_arbeitstage;
 
 procedure p_add_rel_kontoauszug as
 
 begin
 
 merge into t_rel_konto_auszug_gir t1
     using (
            select distinct kto_aus.pk_konto_auszug, gir.id, gir.fk_main_key
            from "KTO_Girokonto" gir
              join t_arbeitstage arb on gir.fk_buchungstag = arb.pk_arbeitstage
              join t_konto_auszug kto_aus on kto_aus.fk_monat = arb.monat and kto_aus.fk_jahr = arb.jahr
           -- where "Buchungstag" between to_date('22.12.2018','DD.MM.YYYY') and to_date('22.01.2019','DD.MM.YYYY')
          ) t2 on (t1.FK_KONTO_AUSZUG = t2.pk_konto_auszug and t1.FK_GIROKONTO = t2.id)
    when not matched then
    insert 
    (
        t1.FK_KONTO_AUSZUG,
        t1.fk_girokonto 
    )        
    values 
    (
        t2.pk_Konto_auszug,
        t2.fk_main_key
    );
    commit;
        
 end p_add_rel_kontoauszug;
 
 procedure p_rem_rel_kontoauszug(p_pk_kontoauszug number) as
 
 begin
 
    delete from t_rel_konto_auszug_gir where fk_konto_auszug in (p_pk_kontoauszug);
    commit; 
 
 end; 
 
 procedure p_set_buchungstext as
 
 begin
 
   update "KTO_Girokonto" set Buchungstext = "Buchungstext" where buchungstext is null;
   commit;
  
end p_set_buchungstext;
 
 procedure p_set_fk_main_key as
 
 begin
        update "KTO_Girokonto" set FK_MAIN_KEY = KTO_KONTO_SEQ.nextval where fk_main_key is null;
        commit;
 end p_set_fk_main_key;

END PKG_IMP_GIR;

/
--------------------------------------------------------
--  DDL for Package Body PKG_IMP_KRED
--------------------------------------------------------

  CREATE OR REPLACE PACKAGE BODY "COMPANY"."PKG_IMP_KRED" AS

    procedure p_create_new_kred(p_buchungstag date) as
    
    begin
         insert into "KTO_Kreditkarte"
            (
                "Buchungstag",
                "Beleg",
                "Unternehmen",
                "Betrag",
                "Währung",
                "Betrag Ursprung",
                "Währung Ursprung",
                "Belastete Kreditkarte",
                "Kategorie"
            )
            select 
                BUCHUNGSTAG,
                BELEG,
                UNTERNEHMEN,
                BETRAG,
                WÄHRUNG,
                BETRAG_URSPRUNG,
                WÄHRUNG_URSPRUNG,
                BELASTETE_KREDITKARTE,
                KATEGORIE
            from imp_kto_kred
       -- where BUCHUNGSTAG >= p_buchungstag; --to_date('30.11.2018','DD.MM.YYYY') ;
       
       
    commit;
    
   merge into "KTO_Kreditkarte" t1
    using (
    select distinct  kred1.id,
                BUCHUNGSTAG,
                BELEG,
                UNTERNEHMEN,
                BETRAG,
                WÄHRUNG,
                BETRAG_URSPRUNG,
                WÄHRUNG_URSPRUNG,
                BELASTETE_KREDITKARTE,
                KATEGORIE
               
            from imp_kto_kred kred
             join "KTO_Kreditkarte" kred1 on kred1."Buchungstag" = kred.buchungstag and kred1."Beleg" = kred.beleg and kred1."Unternehmen" = kred.unternehmen and kred1."Betrag Ursprung" = kred.Betrag_Ursprung
            ) t2 on (t1.id = t2.id)
    when matched then 
     update set t1."Betrag" = t2.BETRAG;
    commit;
    
    end p_create_new_kred;
    
    procedure p_add_arbeitstag as
     /*Arbeitstage zuordnen, wenn das bis dahin noch nicht passiert ist*/
    begin
        merge into "KTO_Kreditkarte" t1
        using (
                    select 
                        pk_arbeitstage, 
                        id                
                    from (select * from "KTO_Kreditkarte" where "Buchungstag" is not null and fk_buchungstag is null) bel,
                      t_arbeitstage arb
                    where  
                    to_date(substr(bel."Buchungstag",1,10), 'DD/MM/YYYY')=   arb.datum 
                    --bel.fk_buchungstag is null
             ) t2 on (t1.id = t2.id)
            when matched then
            update set t1.fk_buchungstag= t2.pk_arbeitstage;
            commit;
            
        merge into "KTO_Kreditkarte" t1
        using (
                    select 
                        pk_arbeitstage, 
                        id                
                    from (select * from "KTO_Kreditkarte" where "Beleg" is not null and fk_beleg is null) bel,
                      t_arbeitstage arb
                    where  
                    to_date(substr(bel."Beleg",1,10), 'DD/MM/YYYY')=   arb.datum 
                    --bel.fk_buchungstag is null
             ) t2 on (t1.id = t2.id)
            when matched then
            update set t1.fk_beleg= t2.pk_arbeitstage;
            commit;
    end  p_add_arbeitstag;
    
    procedure p_add_konto_relation(p_fk_main_key1 number, p_fk_main_key2 number, p_jahr number, p_monat number, p_tag number)  as
    
    begin
    
        insert into t_rel_kont_buch_kont_buch
            (fk_konto_buch1,
            fk_konto_buch2)
        select 
            p_fk_main_key1,
            nvl(fk_main_key, p_fk_main_key2) fk_main_key
        from "KTO_Kreditkarte" kred
         join t_arbeitstage arb on kred.fk_buchungstag = arb.pk_arbeitstage
         where arb.monat = p_monat and arb.jahr = p_jahr and tag = p_tag;
        commit;
        
    end p_add_konto_relation;

  procedure p_upd_fk_main_key as
  begin
    update "KTO_Kreditkarte" set fk_main_key = KTO_KONTO_SEQ.nextval where fk_main_key is null;
    commit;
  end p_upd_fk_main_key;
  
  procedure p_add_konto_auszug(p_fk_konto_auszug number, p_saldo_vortrag number, p_old_saldo_vortrag number) as
  
  begin
   insert into t_rel_konto_auszug_gir
    (
     fk_konto_auszug,
     fk_girokonto
    )
    select
     p_fk_konto_auszug,
     fk_konto_buch2
    from t_rel_kont_buch_kont_buch
    where fk_konto_buch1 = p_saldo_vortrag
    and fk_konto_buch2 <> p_old_saldo_vortrag;
    commit;
 
  end p_add_konto_auszug;
    
END PKG_IMP_KRED;

/
--------------------------------------------------------
--  DDL for Package Body PKG_IMP_PAYPAL
--------------------------------------------------------

  CREATE OR REPLACE PACKAGE BODY "COMPANY"."PKG_IMP_PAYPAL" AS

    procedure p_add_arbeitstag as
     /*Arbeitstage zuordnen, wenn das bis dahin noch nicht passiert ist*/
    begin
        merge into "KTO_Paypal" t1
        using (
                    select 
                        pk_arbeitstage, 
                        id                
                    from (select * from "KTO_Paypal" where "Datum" is not null and fk_arbeitstag is null) bel,
                      t_arbeitstage arb
                    where  
                    to_date(substr(bel."Datum",1,10), 'DD/MM/YYYY')=   arb.datum 
                    --bel.fk_buchungstag is null
             ) t2 on (t1.id = t2.id)
            when matched then
            update set t1.fk_arbeitstag= t2.pk_arbeitstage;
            commit;
    end  p_add_arbeitstag;

END PKG_IMP_PAYPAL;

/
--------------------------------------------------------
--  DDL for Package Body PKG_IMP_TEL
--------------------------------------------------------

  CREATE OR REPLACE PACKAGE BODY "COMPANY"."PKG_IMP_TEL" AS
  procedure p_imp_tel_rech as
  
  begin
   insert into imp_tel_mobilcom_rech
        (
        ZAEHLER,
        RECHNUNGSNUMMER,
        RECHNUNGSDATUM,
        ABRECHNUNGSMONAT,
        KUNDENNUMMER,
        RUFNUMMER,
        SIMNUMMER,
        BENUTZER,
        KOSTENSTELLE,
        ZUSATZINFO,
        KATEGORIE,
        DATUMVON,
        DATUMBIS,
        MWSTSATZ,
        NETTO_BETRAG
        
        
        
        
        )
        select ZAEHLER,
        RECHNUNGSNUMMER,
        RECHNUNGSDATUM,
        ABRECHNUNGSMONAT,
        KUNDENNUMMER,
        RUFNUMMER,
        SIMNUMMER,
        BENUTZER,
        KOSTENSTELLE,
        ZUSATZINFO,
        KATEGORIE,
        DATUMVON,
        DATUMBIS,
        MWSTSATZ,
        BETRAG
        from imp_tel_mobilcom_rech_det
        where detail in (
        'Nettosumme')
        ;
    commit;
  
  
  end p_imp_tel_rech;
  
  procedure p_upd_tel_rech_brutto_betrag as
  
  begin
  
  for i in (select betrag, rechnungsnummer from imp_tel_mobilcom_rech_det
        where detail in (
        'Nettosumme')) loop
        
        update imp_tel_mobilcom_rech set brutto_betrag = i.betrag where rechnungsnummer = i.rechnungsnummer;
        commit;

  end  loop;
  
  end p_upd_tel_rech_brutto_betrag;

END PKG_IMP_TEL;

/
--------------------------------------------------------
--  DDL for Package Body PKG_LEX
--------------------------------------------------------

  CREATE OR REPLACE PACKAGE BODY "COMPANY"."PKG_LEX" AS

 procedure p_upd_storno as
 
 begin
     update t_lex set storno = 1 where pk_lex in (
    select lex.pk_lex
    from (select * from  t_lex where storno is null) lex
     join ( select *
             from t_lex
             where instr(buchungstext, '<Storno>')>0
             ) lex2 on 
              lex2.BELEGDATUM = lex.BELEGDATUM and
    
    nvl( lex2.BUCHUNGSPERIODE,0)= nvl( lex.BUCHUNGSPERIODe,0)  and
    nvl(  lex2.BELEGNUMMERNKREIs,0)= nvl( lex.BELEGNUMMERNKREis,0)   and
     lex2.BELEGNUMMEr =  lex.BELEGNUMMEr and
    -- lex_imp.BUCHUNGSTEXt=  lex.BUCHUNGSTEXT and
      lex2.BUCHUNGSBETRAG=  - lex.BUCHUNGSBETRag and
     lex2.SOLLKONTO=  lex.sollkonto and
     lex2.HABENKONTO=  lex.habenkonto and
     lex2.STEUERSCHLÜSSEL =  lex.STEUERSCHLÜSSel  and
     nvl(lex2.KOSTENSTELLE,0)=  nvl(lex.KOSTENSTELLE,0)  AND
    nvl( lex2.KOSTENTRÄGer,0) = nvl( lex.KOSTENTRÄGER ,0) and
     lex2.BUCHUNGSBETRAG_EURO = - lex.BUCHUNGSBETRAG_EUro and
     lex2.WÄHRUNG =  lex.WÄHRUNG
     )
    
    ;
    commit;
    
    merge into t_lex t1
 using (
with lex as (

select *
from t_lex 
where ok = 0 and storno =0
and ( habenkonto in (1700,1710) or sollkonto  in (1700,1710) )
),
kto as (
select *
from v_konten_zus

)
select belegdatum, belegnummer, buchungsbetrag, max(kto.fk_main_key) fk_main_key, "Buchungstag", ok
from lex
 join kto on lex.buchungsbetrag = abs(kto."Betrag") 
and lex.belegdatum = kto."Buchungstag"
and instr(kto.Buchungstext, lex.Buchungstext)>0
group by belegdatum, belegnummer, buchungsbetrag,"Buchungstag", ok
) t2 on (t1.belegnummer = t2.belegnummer)
when matched then 
update set t1.fk_main_key = t2.fk_main_key;
commit;
    
    merge into t_lex t1
 using (
with lex as (

select *
from t_lex 
where ok = 0 and storno =0
and instr(buchungstext , '1.50% AUSLANDSEINSATZENTGELT') >0
),
kto as (
select *
from v_konten_zus
where instr(Buchungstext , '1.50% AUSLANDSEINSATZENTGELT')> 0
)
select belegdatum, belegnummer, buchungsbetrag, max(kto.fk_main_key) fk_main_key, "Buchungstag", ok
from lex
 join kto on lex.buchungsbetrag = abs(kto."Betrag") 
and lex.belegdatum = kto."Buchungstag"
group by belegdatum, belegnummer, buchungsbetrag,"Buchungstag", ok
) t2 on (t1.belegnummer = t2.belegnummer)
when matched then 
update set t1.fk_main_key = t2.fk_main_key;
commit;
 
 end p_upd_storno;
 
 procedure p_add_kontrolle_konto as
 
 begin
  insert into t_kontrolle (jahr, konto)
select 2017, sollkonto
from t_lex
group by sollkonto;
commit;
end p_add_kontrolle_konto ;

merge into t_lex t1 
using (
select fk_buchung_steuer, fk_main_key
from "KTO_Kreditkarte"
where fk_buchung_steuer is not null
) t2 on (t1.belegnummer = t2.fk_buchung_steuer)
when matched then
update set t1.fk_main_key = t2.fk_main_key;
commit;
with lex as (

select *
from t_lex 
where ok = 1 and storno =0
and instr(buchungstext , '1.50% AUSLANDSEINSATZENTGELT') >0
),
kto as (
select *
from v_konten_zus
where instr(Buchungstext , '1.50% AUSLANDSEINSATZENTGELT')> 0
)
select belegdatum, belegnummer, buchungsbetrag, kto.fk_main_key  fk_main_key, "Buchungstag", ok
from lex
 join kto on lex.buchungsbetrag = abs(kto."Betrag") 
and lex.belegdatum = kto."Buchungstag";

merge into t_lex t1
 using (
with lex as (

select *
from t_lex 
where ok = 0 and storno =0
and ( habenkonto in (1700,1710) or sollkonto  in (1700,1710) )
),
kto as (
select *
from v_konten_zus

)
select belegdatum, belegnummer, buchungsbetrag, max(kto.fk_main_key) fk_main_key, "Buchungstag", ok
from (select * from lex where fk_main_key is null) lex
 join kto on lex.buchungsbetrag = abs(kto."Betrag") 
and lex.belegdatum = kto."Buchungstag"
and instr(kto.Buchungstext, lex.Buchungstext)>0
group by belegdatum, belegnummer, buchungsbetrag,"Buchungstag", ok
) t2 on (t1.belegnummer = t2.belegnummer )
when matched then 
update set t1.fk_main_key = t2.fk_main_key;
commit;

merge into t_lex t1
 using (
with lex as (

select *
from t_lex 
where ok = 0 and storno =0
and ( habenkonto in (1600) or sollkonto  in (1600))
),
kto as (
select *
from v_imp_bel_zus

)
select belegdatum, belegnummer, buchungsbetrag, max(kto.fk_imp_ba_bel) fk_imp_ba_bel, datum, ok
--, sollkonto, habenkonto
from (
            select * 
            from lex 
            where fk_imp_ba_bel 
            is null
            ) lex
 join kto on lex.buchungsbetrag = abs(kto.Betrag) 
and lex.belegdatum = kto.datum
and instr(kto.bezeichnung, lex.Buchungstext)>0
group by belegdatum, belegnummer, buchungsbetrag,datum, ok
--,habenkonto, sollkonto
) t2 on (t1.belegnummer = t2.belegnummer )
when matched then 
update set t1.fk_imp_ba_bel = t2.fk_imp_ba_bel;
commit;

END PKG_LEX;

/
--------------------------------------------------------
--  DDL for Package Body PKG_RECHNUNG
--------------------------------------------------------

  CREATE OR REPLACE PACKAGE BODY "COMPANY"."PKG_RECHNUNG" AS

    
    PROCEDURE   p_create_eingangsrechnung(p_fk_verwendungszweck number) as 
    
        v_pk_re number;
    
    begin
    
    for i in (select * from t_beleg where fk_vorsteuerrelevant = 1 and fk_verwendungszweck = p_fk_verwendungszweck) loop
    
             /*ID heraussuchen*/
             select seq_rechnung.nextval
             into v_pk_re
             from t_rechnung;
            
             /*neue Eingangsrechnung erstellen aus vorsteuerrelevanten Belegen*/
             
             /*1. neue Beziehung Rechnung - Beleg anlegen*/ 
              merge into t_rel_rechnung_beleg t1
              using (
                            select 
                            nvl(tre.pk_rechnung, v_pk_re) fk_rechnung,
                            tre.rechnungsnummer, 
                            tbe.beleg as rechnung,
                            tbe.datum rechnungsdatum,
                            tbe.pk_beleg fk_beleg,
                            tbe.fk_projekt,
                            'ER-' || 'AA' || '-' || to_char(tbe.datum, 'MM') || '-' || to_char(tbe.datum,'YYYY') renr,
                            tbe.betrag_netto,
                            tbe.mwst,
                            tbe.betrag_brutto,
                            tbe.fk_steuersatz
                            from t_beleg tbe
                              left join t_rel_rechnung_beleg trrebe on tbe.pk_beleg = trrebe.fk_beleg
                              left join t_rechnung tre on tre.pk_rechnung = trrebe.fk_rechnung
                            where pk_beleg = i.pk_beleg 
                ) t2 on (t1.fk_rechnung = t2.fk_rechnung and t1.fk_beleg = t2.fk_beleg )
                when not matched then
                insert 
                       (t1.fk_rechnung, t1.fk_beleg, t1.created_by, t1.created_at,t1.modified_by, t1.modified_at)
                values 
                       (t2.fk_rechnung, t2.fk_beleg, user, sysdate, user, sysdate);
                commit;
            
            /*2. Rechnung hinzufügen*/
            merge into t_rechnung t1
             using (
                        select 
                        tre.pk_rechnung,
                        tre.rechnungsnummer, 
                        v_pk_re as fk_re,
                        tbe.beleg as rechnung,
                        tbe.datum rechnungsdatum,
                        tbe.fk_projekt,
                        'ER-' || 'AA' || '-' || to_char(tbe.datum, 'MM') || '-' || to_char(tbe.datum,'YYYY') renr,
                        tbe.betrag_netto,
                        tbe.mwst,
                        tbe.betrag_brutto,
                        tbe.fk_steuersatz
                        from t_beleg tbe
                          left join t_rel_rechnung_beleg trrebe on tbe.pk_beleg = trrebe.fk_beleg
                          left join t_rechnung tre on tre.pk_rechnung = trrebe.fk_rechnung
                        where  pk_beleg = i.pk_beleg 
            ) t2 on (t1.pk_rechnung = t2.pk_rechnung and t2.rechnungsnummer is null)
            when  matched then
            update set
            
                      t1.RECHNUNGSNUMMER= t2.renr,
                      t1.RECHNUNG=t2.RECHNUNG,
                      t1.FK_PROJEKT=t2.FK_PROJEKT,
                      t1.RECHNUNGSDATUM= t2.RECHNUNGSDATUM,
                      t1.ZEITRAUM_VON=null,
                      t1.ZEITRAUM_BIS=null,
                      t1.RECHNUNGSBETRAG_NETTO=t2.betrag_netto,
                      t1.FK_STEUERSATZ=t2.fK_steuersatz,
                      t1.MWST=t2.mwst,
                      t1.RECHNUNGSBETRAG_BRUTTO=t2.betrag_brutto,
                      t1.ZAHLUNGSEINGANG=null,
                      t1.GEZAHLT_AM=null,
                      t1.ZAHLUNGSBETRAG=null,
                      t1.FK_RECHNUNGSTYP=2,
                      t1.CREATED_BY=user,
                      t1.CREATED_AT=sysdate,
                      t1.MODIFIED_BY=user,
                      t1.MODIFIED_AT=sysdate
                    
            
            ;
            commit;
    
    
    
    end loop;
    
   end;

END PKG_RECHNUNG;

/
--------------------------------------------------------
--  DDL for Package Body PKG_SERVICES
--------------------------------------------------------

  CREATE OR REPLACE PACKAGE BODY "COMPANY"."PKG_SERVICES" AS

 procedure p_rep_trigger(p_table varchar2, p_seq varchar2, p_pk varchar2 ) as
 
 begin
   execute immediate  '
    create or replace TRIGGER ' || p_table || '_TRIG
    BEFORE INSERT ON "' || p_table || '" 
    FOR EACH ROW 
    BEGIN
      <<COLUMN_SEQUENCES>>
      BEGIN
        IF INSERTING AND :NEW.' || p_pk || ' IS NULL THEN
          SELECT "' || p_seq || '".NEXTVAL INTO :NEW.' || p_pk || ' FROM SYS.DUAL;
        END IF;
      END COLUMN_SEQUENCES;
    END;';
 end p_rep_trigger;
 
 procedure p_set_seq (p_seq varchar2, p_seq_nr number) as
 
 begin
  execute immediate  'drop sequence "COMPANY"."' || p_seq || '"' ;
  execute immediate  'CREATE SEQUENCE  "COMPANY"."' || p_seq ||'"  MINVALUE 100 MAXVALUE 999999999999999999999999999 INCREMENT BY 1 START WITH ' || p_seq_nr || ' CACHE 20 NOORDER  NOCYCLE ';
 
 end;
 
 procedure p_add_arbeitstage as
 
 begin
 
    insert into t_arbeitstage (datum)
    
    with all_obj as (select * from all_objects where rownum <= 366),
    jr as (select 2016 jahr from dual),
    zeitsk as (select to_date('01.01' || jr.jahr, 'DD.MM.YYYY') +rownum -1 dat
    from all_obj, jr)
    select zt.dat
    from zeitsk zt
     left join t_arbeitstage arb on zt.dat = arb.datum
    where arb.datum is null;
    commit;
    
    update t_arbeitstage set jahr =   substr(datum,7,4) ,monat =substr(datum,4,2) , tag =      substr(datum,1,2) where jahr is null and datum is not null;
    commit;
 end p_add_arbeitstage;
 
 procedure p_copy_data_diff_tables as
 
 begin
    execute immediate  'with tab1 as (select :P_TAB tab1 from dual), 
    cols as (select listagg(column_name, '','') within group (order by column_name) cols from user_tab_cols, tab1 where table_name = tab1.tab1)
    select ''insert into '' || tab1 || ''('' || cols || '')'' || ''select '' || cols || '' from '' || tab1 || '' where id = '' || :P_WERT || '';'' from tab1, cols
    ';
 end;

END PKG_SERVICES;

/
--------------------------------------------------------
--  DDL for Package Body SAMPLE_DATA_PKG
--------------------------------------------------------

  CREATE OR REPLACE PACKAGE BODY "COMPANY"."SAMPLE_DATA_PKG" as
function varchar2_to_blob(p_varchar2_tab in dbms_sql.varchar2_table)
    return blob
is
  l_blob blob;
  l_raw  raw(500);
  l_size number;
begin
  dbms_lob.createtemporary(l_blob, true, dbms_lob.session);
  for i in 1 .. p_varchar2_tab.count loop
    l_size := length(p_varchar2_tab(i)) / 2;
    dbms_lob.writeappend(l_blob, l_size, hextoraw(p_varchar2_tab(i)));
  end loop;
  return l_blob;
exception
  when others then
    dbms_lob.close(l_blob);
end varchar2_to_blob;  
procedure delete_data is
begin
  delete demo_product_info where product_id <= 10;
  delete demo_customers where customer_id <= 10;
  delete demo_states;
  delete demo_constraint_lookup where constraint_name in ('DEMO_CUST_CREDIT_LIMIT_MAX','DEMO_CUSTOMERS_UK','DEMO_PRODUCT_INFO_UK','DEMO_ORDER_ITEMS_UK');
end delete_data;
procedure insert_data is
  i           dbms_sql.varchar2_table;
  j           dbms_sql.varchar2_table default wwv_flow_api.empty_varchar2_table;
  l_blob      blob;
begin
  -- Table: DEMO_PRODUCT_INFO - Product 1
  i := j;
  i(1)  := 'FFD8FFE000104A46494600010100000100010000FFDB00840009060610100F120D12140F130F1210171510141410100F1410101410151614101414171B261E1719231912121F2F2023282C2C2C2C151F31353C2A35262B2C2901090A0A0D0A0D190C0E1A';
  i(2)  := '291E1C1829352929292934292C29292934302C3435292929292C3229292C2E30292C2A2929292929292A34342929292A362934293229FFC00011080068006803012200021101031101FFC4001B0000020301010100000000000000000000000502030401';
  i(3)  := '0706FFC400381000020102030406060A0300000000000000010203110412210531415161718191B1D113162252A1C10632627292A2B2E1F0F1144253FFC40014010100000000000000000000000000000000FFC400141101000000000000000000000000';
  i(4)  := '00000000FFDA000C03010002110311003F00F71000000038DD80CD8DDA54E8FD7767C12D5BEC17FAD14F8467F0425C52752ACE6EEEF2D38E9C2DD962FA7B39DAFBBAD80D7D6487B92EF45B4B6FD27BD4A3D6AFE026A5826DB5C8B6585CBBD3F15F003E96';
  i(5)  := '9D55259934D3E28909F62D55193A775AACCB5E4D2D3BFE0380000000000000000306D1C7BA6D452576AF77C3B05D3AB29272936F46D747616ED377AAD72497CFE6432E8D74018B0352DEC9B65BB4304A8B8BB9BE35565CCDA4B9B028A2E4E4D6693CBBD7';
  i(6)  := 'A3CA9DD70935AF6335CEAA8ACCC850C5427B9AEADCFAEDBCCB8F9DD018A9576EBA9BD13BAB2E09AD3E23AA1899C773D393D50A30D45B9C5F292F11C4D00D30D5B3C54B7735C9A2D316CD96928F4DFBFF00A368000000000009314AF526FED782488C5D8E';
  i(7)  := 'D4FAD2FBCFC59D4C0C98DC5C29ABCB7BDD15AB9752153C0E2312D395E953E09DD59756F6FA47F0A714DB495DEF7C7BC9E6E2025AFF0047249274E6EEB726EDF14729CEB474AD09597FB2D7BEDBC76AA0019B096D24ACD741A991549277B24FA34BF5F326';
  i(8)  := 'C0BF02ED3EB88C05D4349C7AFC50C4000000000004553EB4BEF3FD4C89D9BF6A4BED3FD4CED80132C488E43B18D80924EFC2D6D02DA9240076C409391C881645D9A7C9AF1198AA5B86917749F34074000008CE564DBDC95DF612336D0A96A72E9D3BC04C';
  i(9)  := '9712CBD8AA555477FF003F972553556E7A77BB0175395D26F7D89A2BB924C0929ABDB4BF207239955EFC4E30244A2884592B81218619DE11EAF016A66FC14BD8EA6FC6FF003034000000BF6C26E31D6DED6EB2D74180AB6CD4D631E86FBFFA0174AF75C5';
  i(10) := '5F57A69F02CBF1E9F995FA65C5A5DA5753190D1668DDB56575CC0D8892650EB1CFF200D2A471B323C747364E3FB5CB3D381A1324999957458AA202D36ECE96925D37EF5FB0BB31B366CBDA6B9AF07FB80C40000059B536142BC94DB926959DB5BAE1D0B8';
  i(11) := '80018BD49C33DF9DF6C57C8ED3FA13858C9497A44D3BA7996FEE000362D814FDEABF89791C7F47E973A9F897900010F56695F366AB7FBCBC89FABD4FDEABF8A3E47000EFABF0F7EA77C7C816C08FBF53F2F9000125B157FD2A7E5F22DC2ECEC92CD9E4F4';
  i(12) := 'DCD25E00006D00003FFFD9';
  l_blob := varchar2_to_blob(i);   
  INSERT INTO demo_product_info (product_id, product_name, product_description, category,product_avail, list_price, product_image, mimetype, filename, image_last_update, tags)
      VALUES(1, 'Business Shirt', 'Wrinkle-free cotton business shirt', 'Mens', 'Y', 50, l_blob,'image/jpeg','shirt.jpg',systimestamp,'Top seller');
  -- Table: DEMO_PRODUCT_INFO - Product 2
  i := j;
  i(1)  := 'FFD8FFE000104A46494600010100000100010000FFDB004300090607080706090807080A0A090B0D160F0D0C0C0D1B14151016201D2222201D1F1F2428342C242631271F1F2D3D2D3135373A3A3A232B3F443F384334393A37FFDB0043010A0A0A0D0C0D';
  i(2)  := '1A0F0F1A37251F253737373737373737373737373737373737373737373737373737373737373737373737373737373737373737373737373737FFC00011080068006803012200021101031101FFC4001C00010100020301010000000000000000000007';
  i(3)  := '01050406080203FFC4003D1000010303000507080807000000000000010002030405110607122141132231516171A123328191B1B2C1D11415174273A2C2E1083552626392F0FFC400160101010100000000000000000000000000000102FFC400161101';
  i(4)  := '010100000000000000000000000000000131FFDA000C03010002110311003F00B822220CAC2220D36995DA6B168B5CEE94DC919A969DD2462504B4BB8038238A81FDABE9954641B9450FE15247F1055135FF00719A9F4628A82225ACADAA025238B58368';
  i(5)  := '0FF6D9F528640730B2403EF7387664FCD54AED726B0F4B651CFD20ABC7F8E28DBEC62F96699E9387B2575EAE2F0241CD339009E9C1031B968E2635B308F1B8B3687FDE80BF6899B54F82778760F7E4223D4764B9C379B4D2DC69811154461E03BA47583D';
  i(6)  := 'C7217394E75275D24D63ADA17BB69B4B51B51E4EF0D78CE3D60FAD519468E288880888832B088832B0888239FC424DB42CB4CDE91CAC9E2C1F351DA3CF9685E31839C761562D7DC61D5D65706E5DC94C0F7658A3F2F92AB8DFD01C0B4FB5547323396C2F';
  i(7)  := 'FBCD3B2572E2DCF76EDC4839EA2B894FE71683CD3BD72C1C222A1A8E90FD3EF118E83144EF5177CD57148F519138D65E26079A2389847692E3F055C5161C5111144444044441958444126D7B47E52C737E3B3DC2A3978E646D9319C387B55B35EACCDBAC';
  i(8)  := 'F2637B6A9EDCF7B3F6516BC0CD13B72ACD628DD9D82B9A3A16AE85FE4D87B96CDDB813D43A0A0ADEA24E692F3BBA278C7E52AA6A5DA88C1B65DDE38D4B3DC55151A87144440444419584441958444130D7A39FF565A1A3CC354F27BC3377C546AB5BB701';
  i(9)  := '6F5E7D8AD3AF28F6ACD6C7EEE6D59DD9FEC2A31543C91559BAD4D01CD3E388385B57CC1A59B5E6BDBD5C56A2DC41E51B9FBCB6407290341192C38282CFA85FE4F750785537DC0AA2A57A8527EADBBB0F0A867BBFB2AA28D1C511101111011110111104E3';
  i(10) := '5DF1ED582DF2648D9ACC77E58EF928A551E663AD5AB5E240D1FB70E3F4E1EE3944EA5D81E8552EB596EA771A7AA9D993C94CC616F0E7079CFE55B2A576D31E47A5A46F053472865ABB1E90CF1F4518A79DDDA36DCD3E0E27D0BE58ED97646F0E6EF088B0';
  i(11) := '6A19F982F6D3B9DCAC2EC7616BBE4AAEA23A89AA2DD23B8D2ED1C4B461E476B1E07EB2ADCA35044E28808888088880888826FAF16E6C16E775568F71CA1F5AE3E66CEF20E30AE5AF1648746289EC692195AD2E3D5CC763C5445A4020CCE193D00AA9544D';
  i(12) := '5058C4FA15A5B34806DD631D4C3233B21B1923C5FE0A774F87C63686F6F4772B16A29CDAAD19BCC61C365D5EE6EEE039360524A8A47DBEE1514736E929DEE89DDED38F820EE1A9D70834F2368CE65A595BEC77E957D5E78D5538FDA1DBC0DFCD941EEE4D';
  i(13) := 'CBD0EA1044E288A222202222022220D6692D961D21B1D55AAA5EE8E3A86805ED0096E0820EFED0BA041A94B609335177AD7B3FA636319E3BD110774D12D11B5E89524F4F6A13113C9CA4AF9A4DA738E303A87829A6976ADB48AB748AB6BA823A49A0A99D';
  i(14) := 'F2B713ECB9A09CE08701E194441D87579AB67D86E02F177A80FAE667918A17E591ED3483B471CE3BFB876AA422202222022220FFD9';
  l_blob := varchar2_to_blob(i);
  INSERT INTO demo_product_info (product_id, product_name, product_description, category,product_avail, list_price, product_image, mimetype, filename, image_last_update, tags)
      VALUES(2, 'Trousers', 'Black trousers suitable for every business man', 'Mens', 'Y', 80, l_blob,'image/jpeg','pants.jpg',systimestamp,'Top seller');
  -- Table: DEMO_PRODUCT_INFO - Product 3
  i := j;
  i(1)  := 'FFD8FFE000104A46494600010100000100010000FFDB00840009060614120D1513131413131216141319111815111015121917131016191C151714181B281E23192F1F18141F302025332C2E2C2C151E3135312A35262B2D2B01090A0A0505050D05050D';
  i(2)  := '291812182929292929292929292929292929292929292929292929292929292929292929292929292929292929292929292929292929FFC00011080068006803012200021101031101FFC4001C0001000203010101000000000000000000000708030406';
  i(3)  := '050201FFC400351000010401010505060505010000000000010002031104210506071261223151819113144171A1C123324392B142647293A233FFC40014010100000000000000000000000000000000FFC4001411010000000000000000000000000000';
  i(4)  := '0000FFDA000C03010002110311003F009C511101111011110112D1011110111101111011110111783BF596E8B6564BD8E2C7888F2B81A20920687C7541A5BC9C4AC4C371612E9651A164601A3E0E71340F4D4F4514EF8F1632725CCF60E7E2B1A6F96391';
  i(5)  := 'DCCEB03F3BC575D171D24C4AD3BB76A83AB3BFF9FC95EF330EFD7DAB89A23AEB6BDFDC8E2BC98D23D99B24D910BAB90E8F9186CDEAE365BD2FE4A3FBD3C96A4F26B682D26EFEF9E266FF00E1287380B2C702C900F1E576A4751617B6AA7ECCCF7C523648';
  i(6)  := 'DC58F69B6B9A688215A6D959264C68A4356F8E371AEEB730135EA8369111011110111101729C5198376264DE96D601D4BA660A5D5A8DB8E79FCBB3E28EF592606BC446C77D2DCCFA2083DC7BD602F5FBA97BA8121ADED1AD06A059F335E6B137BD0666CD';
  i(7)  := 'A57A2C6C1657E35A49F8681656328A0CC0D05677727239F64E23BBEF1E2FF98C0FB2AB934BDB68E97EA558AE10ED0126C689A3BE27491BBE7CE5E2BA53DA83B4444404444044440506F1CB69876D08E30EE61143AB41069D23C937D794314E45560DFBC8';
  i(8)  := 'F69B5B2DE5BFAF2015A68C7726BFB50696CBC6BC0CD97E03DD1BD2DF90E35E8C5E3C2755D5ECF84B777326420812E763B584F71F6513DC6BE56E5CB3020C910EF3D7EC17D386ABE623A1F9EBE817EFB3B283676B6CCE4871721BF9656CCC759FD482675E';
  i(9)  := '9E1C8F8BEAA46E06EDD7372DF8C4FE1CAC2F68B341F1D6A0756DDFF88F05C7E4623A4D881C0170C6CCED559A66542059F06F3C4DF37AD8E1965166D9C53757272FEF639B5F541659111011110111100AABFBE7D9DAB983FB99FEB2B8FDD5A05136D5E104';
  i(10) := 'F93B4B22674B1450C92B9CDA0E7C946BFA680BF341CE6F8B9B1EEE6CA89BA07B1F2B878B8B4127D6477AA8EED485C5E8C43362E1B5C5CCC7C46004D5DB9CE166B4BA635472F7A0FA8C9D7E67ECB235DAAD780F67CCFF000164E641DBEE8D3F62ED66135F';
  i(11) := '818EF1F1D6395EEFE43479AF1772EC6D3C4D35F79C7AFF007B175BC0DC664B939714AD6BE37E3B439AE16D2D12EB63CD762383D1C5B460C9C690B6264CC7BE292DD41A6FF0DFDFDE068EF54123A22202222022220222208B7899C2D9B3324E563BDAE716';
  i(12) := '35AF8DE794F60502C777791AF9EAA28DA9B859F09224C49FE6D8CC8DFDD1D856A51055B878759DEE2FCA38F20635CD1CA58E1316906E411D73728ECEBD6FB812B1ECEDC7CE9B56624E47898CB1BEAFA0AD42208B3847C3DCAC2C8972324363E78BD9B181';
  i(13) := 'E1CFD5ED7173B97B23F2D55FC7E0A534440444404444044440444404444044440444404444044441FFD9';
  l_blob := varchar2_to_blob(i);
  INSERT INTO demo_product_info (product_id, product_name, product_description, category,product_avail, list_price, product_image, mimetype, filename, image_last_update, tags)
      VALUES(3, 'Jacket', 'Fully lined jacket which is both professional and extremely comfortable to wear', 'Mens', 'Y', 150, l_blob,'image/jpeg','jacket.jpg',systimestamp,null);
  -- Table: DEMO_PRODUCT_INFO - Product 4
  i := j;
  i(1)  := 'FFD8FFE000104A46494600010100000100010000FFDB0084000906061010101512131215141316151214171614181A1417171719161815181C1A121720261F172525191713212F202428292C2D2C171E3135302A3529372C2901090A0A0E0C0E190F0F1A';
  i(2)  := '2C241E222D2A2D2F2C3535352C352E2D2F2934292929352B2A2B3535352A2C29292C2A342D2C29342C2D2C2C2C2C292C2C342C2C352CFFC00011080068006803012200021101031101FFC4001C0001000203000300000000000000000000000607030405';
  i(3)  := '010208FFC4003710000103020304060806030000000000000100021103041221310741517105061361A1C122233242728191B11492A2A3B2D1526282FFC4001A010100020301000000000000000000000000030602040501FFC400271100020202020003';
  i(4)  := '090000000000000000000102030411051221314113224251618191E1F0FFDA000C03010002110311003F00BC5111004444011141FAC1B55B6B5B936EDA6EAA5BED39AE01A1D3184647111067E8BCDE892BAA76BD416C9C22AEAA6D928013F877FE613E22';
  i(5)  := '254CBA03AC142F688AD45D2D3A83939A6261CDDC5134CCEDC6B6A5B9C7474D1117A40111100444401111005C3E9DEB8DA599C351E4BE27031A5EE83A4C64D983A90BB657CFDD2DD2A6ADCD4AC7DAA952A3A383412D689F85AD1F258C9E8DEC1C659136A4';
  i(6)  := 'FC1124EB46D66E1CC70A34FB1A64118DDE95523491193350273EE2A056142BBDA5CF034903780738E3BF7AE81AA5D2665A72EF1CD65B7799D00CA26758EE50B932D3461D54BF70E50E44F70D4ACDD03D64BCB0AC1C3D597000080585B3935EDEEDC7519F';
  i(7)  := '195BF6B4435F53862007289F3F058AF28626E1DE41FAEE45226BA88DB1D48B2BA2F6B54B26DCD1753397A74FD630EE397B4DCFE2E6A776B74CAAC6D4638398E01CD70D082A84B6A62A31BC3D1EF22449F35676CDAEBD53E8C9863839B3B83B51F513FF00';
  i(8)  := '4B38CF6F4CE0721C742A83B6BFC133444529C108888022220305FDD0A549F50890C63DF1C7082EF25F33BEB132749CE3C4F8AFA33ACD6B56AD9D7A5440351F49EC6C9812E1875E44AA3BA5FA917F6F4DCE7DB54710DD698ED47EDCC6BC372C2475F8D946';
  i(9)  := '3DB6F4CF4A00B9808C21AE683DFDFE2BDC320653C6777D1712C6EF0B58D20E33220FBB2E20E474D4A945D570D69F467700B5DAD168AAC528ED1A93C0CCC67A2C8FA1886872D0C792F177488C21870983A18CF285B02BBC522E3ED0827CD784DB39D60C75';
  i(10) := '3AC448C265E3B88D72E4E2A7BB3CBD06EC86990EA6F197169698F979AAE9B56E2E6E0368D17D47B2A104526927B39D491ECE8333C558DD5DEA5DF50BBA35C06D3A6D3EB18F7CB9C1C0830D6820113C46614B18BDA672B3AFAFD8CE0DADFC8B291114E53C';
  i(11) := '222200888802222028DDA7D916F4D623A3E95178F94B3EED586A36699E454C76B960C9B6AF3E98754A51C5A407EBDC5BFACA81DDDC3832018DC56BD9E65BF8B96F1D337A98070F2FE97B5564D3A83FD4FF006B0503EC99990392DCA6062238823C14475B';
  i(12) := 'D0E9EC72CCFE32F2A6EECEDC7CDF2E3FC55B4141F6516EC6DBD53EF9AB0EE4D680DFBB94E56DC7C8A3E7BDE44C2222C8D208888022220088BC140553B55E95C7774E8839526623F13E0F835ADFCCA1784B839DBA16CF58EEFB6BCB8A9C6AD48F85AE2C1F';
  i(13) := 'A405AF484D277082B5E4FC4B9E157D298C7E86D3D863271D32E208EF596C6F7161275DEB568BE1E1A4983946FDDC744AB43B27EB91321466FEFD49FECE2F705C56A07DF870E627C89FA2B182A8FABF5B0DD51AA379603C89C3F6255B816C56F68AAF2F57';
  i(14) := '4BFB2F897E8222290E38444401111005E095E57822501F383BD22493AB9C4FCCCAF5AD5096963781FB2B96E7661D1EF74863E9F731E437E4D7481C864B09D93F479D7B523876900F380A1E8CB24394A5475A65436D544B49DD9C9D4F32BB97943188CB16';
  i(15) := 'A2558CCD96F470F71F1FE38CC7DA7C56C376756000182A40F67D63FD1E466578EB6C9A3CC511F069FF007DCAEFA1AA10583396BDBFC82BA82E359F53ACE910452920C82F739F9F18263C17682CE11EA72391CC8654A2E09AD0444521CC08888022220088';
  i(16) := '8802222008888022220088880222203FFFD9';
  l_blob := varchar2_to_blob(i);      
  INSERT INTO demo_product_info (product_id, product_name, product_description, category,product_avail, list_price, product_image, mimetype, filename, image_last_update, tags)
      VALUES(4, 'Blouse', 'Silk blouse ideal for all business women', 'Womens', 'Y', 60, l_blob,'image/jpeg','blouse.jpg',systimestamp,null);
  -- Table: DEMO_PRODUCT_INFO - Product 5
  i := j;
  i(1)  := 'FFD8FFE000104A46494600010100000100010000FFDB004300090607080706090807080A0A090B0D160F0D0C0C0D1B14151016201D2222201D1F1F2428342C242631271F1F2D3D2D3135373A3A3A232B3F443F384334393A37FFDB0043010A0A0A0D0C0D';
  i(2)  := '1A0F0F1A37251F253737373737373737373737373737373737373737373737373737373737373737373737373737373737373737373737373737FFC00011080068006803012200021101031101FFC4001C00000104030100000000000000000000000002';
  i(3)  := '03070801040506FFC4003C100001030203020A0803090000000000000100020304110506210731121314617182A1B1C1C222324151728191D2335292424554738394A2B2D1FFC40014010100000000000000000000000000000000FFC400141101000000';
  i(4)  := '00000000000000000000000000FFDA000C03010002110311003F009C508420179BC633B60D83626FC3EBE49992B1AD7173622E68B8B8DDAF62F48ABBED0AB5D579BB1491AE04366318E8600DF04131479FB2C49FBD58CF8E37B7BDAB6E3CDD9724F571BA';
  i(5)  := '0EB4ED1DEAB63A57FB7BD20CEFE7FAA0B3273565E1BF1CC3BFB967FD4D3F38E5B60BBB1CA03F0CC0F72AD3CA1C3DFF00558E3DF6B0EF4162E6DA1656886B8AB5FF00CB89EEEE6A5E0F9EB03C67128B0FA09667CD28716F0A12D1A024EA7982AE8C91C5BA';
  i(6)  := '903E6BB993AB8D0E67C2EA4BF82D654B0388FCA4F04F61282CAA10840210840210840DD44AD8209267FAB1B4B8F40175576BA674F5124CF37748E2F71E726E558CCE953C932A62B28363C99ED1D2E1C11DEAB74C7D22835DE9052DC9B28125BEE40D12BD';
  i(7)  := '8B0832D3AAD984906ED363EC3CEB5427E2DE82D2E0F58310C268AB01BF1F0324FAB415B8BC9ECB6AF9564AA104DDD097C27AAE36EC217AC40210840210841E3B6AF51C464E9D80DB8E963676F0BCAA0294EAA69DB55470306A082FF89505FF00A5A47994';
  i(8)  := '2B26F40D9DE9B725949720C0DCB077AC8DC90E3AA0504F446C994E30A09BB62753C66055D4C4EB1557087439A3C5A548CA21D86D4DABB14A527D7863900F8491E60A5E40210840210841126DB6A2F5B86D37E485EF3D62079545321520ED86A38DCD463B';
  i(9)  := 'FE153C6DEF779947B2A045D61601438A049364D9372B2F49BA07014E34EA99BA5B5C8241D8ED518338C71DF49E9E48FB03BCAA7855B367F55C97386132DEC0D43584F33BD1F32B2680421080421082BDED2AA394670C4DD7D1B2060EAB40F05E4252BB59';
  i(10) := 'AAA795660C4A606E1F552B874708AE1C9B90360A1C74491BD04E8812E29008BACBB7240DE81C26C02530A6DC74012A3D107470D9CD3564150D363148D907C883E0AD5B1C1EC6BDA6E1C2E3A154C8BD603DEAD0E57A8E5796F0BA8BDCC949113D3C11741D';
  i(11) := '44210804D554A20A696676E8D85E7E42E9D5C7CDF3F27CAD8B4B7B114920079CB48F1415B2A1C6491CF76F71B95AB22DE923209D345AAE8CD906B5B5582344F18CAC7166DA20D770D124356C188958E28A060EAEE64B60D53BC494A1111B9011FAC158CD';
  i(12) := '9854728C91869BDCC6D7C67AAF70EEB2AEEC88837B153BEC6DE5D949EC274655C807410D3E283DDA1084024C91B2563992B1AF63858B5C2E0FC90841C2C4325E5DC42E67C2A06B8FED420C47FC6CB8D36CB32E48EBB456463DCD9EE3B41421032ED9365E';
  i(13) := '3BA7C407F559F6A6CEC8F02FE3310FD71FD8842049D90E097D2BF10FAC7F6A50D91E0237D66207AF1FD8842075BB27CBA37CB5EEE999BE0D5B94FB33CAF08F4E8E698FBE4A87F8108420E952E4BCB74AE0E8B06A4E10D417B387FED75DD631B1B0323686';
  i(14) := 'B4681AD16010840A421083FFD9';
  l_blob := varchar2_to_blob(i);   
  INSERT INTO demo_product_info (product_id, product_name, product_description, category,product_avail, list_price, product_image, mimetype, filename, image_last_update, tags)
      VALUES(5, 'Skirt', 'Wrinkle free skirt', 'Womens', 'Y', 80,l_blob,'image/jpeg','skirt.jpg',systimestamp,null);
  -- Table: DEMO_PRODUCT_INFO - Product 6
  i := j;
  i(1)  := 'FFD8FFE000104A46494600010100000100010000FFDB0084000906061410101214121216151516141614181713141A1816141C141815151516151B1C1C26212320231F1E131F2F2C2F27292C2C2F161F3135303635282D2C2A01090A0A0505050D05050D';
  i(2)  := '291812182929292929292929292929292929292929292929292929292929292929292929292929292929292929292929292929292929FFC00011080068006803012200021101031101FFC4001C0001000202030100000000000000000000000607050801';
  i(3)  := '030402FFC4003D10000103020207040607090100000000000100020304110521060712314151712261819113233242A1B1145262C1D2E1F0243344547282B2C2D143FFC40014010100000000000000000000000000000000FFC400141101000000000000';
  i(4)  := '00000000000000000000FFDA000C03010002110311003F00BC51110111101111011110111101111011110140F583A78EA3F57016FA40369C5C2E1BC436DCF8F9298E295ED82192476E6349EBC8789B0F15AF98BE206A2491CF372F2E24F3BE6505ABA05A';
  i(5)  := 'CA662168A4D964F6BD87B3201BF66FB9C3336CF2CC1DF69C02B50A96B1D04B76B8B5CC75C106C4169B823C6C56C46ADF4FDB88C5B32102A236F6DA32DB1BBD2307CC7027910826C8888088880888808888088882BFD6D62A590C7103ED12F7746E4D1E64';
  i(6)  := '9FED54CBA5ED2B335BAEF5EDEE89B6F372AB2475B3418CC5E2ED0773C8F51F97C9756178D4B49511CD0BCB5EC21C08F88238822E08E457BE46FA46969F0EE3C160DF11B9B8B20DAED04D358F14A612B2CD7B6CD963BE71BBF09DE0FDE0A922D4AD0ED289';
  i(7)  := '70DA96CF11B8DCF65FB32378B4FCC1E0405B47A3F8F455B4F1CF0BB698F1C77B48F69AE1C083914192444404444044440444410ED6268D7D2610F68ED301BF7B7F254562942F89C438640FEAEB691CCB8B1556E99E0F1898B0D838E6D07DE0791E07AE5D';
  i(8)  := '37A0A4A69B657B288B26F686FC89E20F023F5CD7AF1EC00B412D19663A11BC77151FC2EB0C3280ECC6E2398E36F9F820CA55612633CC70206F521D5D69BBF0AA8B3EE69E42048DFABC048D1CC7C465CADDEEA5CAD7BB1D623967B9C147714A32D26F641B';
  i(9)  := '554954D958D7B1C1CD700E6B9A6E1C08B820AEE5436A9358BF4478A4A97FA97BBD5B9C7289C7813F549F239EEBABE1A5072888808888088880AB8D679D99E99DD07992D3F3563AADF5B86C694FDAFF0076A0C1CBA28F9E9E69E21B45993E203F78DB5DC5';
  i(10) := '9F6DB911CF31C55618BE12369AF6EEC9C08DC415B1FA0B1FECA4F391C7C834281EB2F43442E74D10F5523892D0328DE45DC07D97E67B883CC208668A5689186171CDA2EDBF2E5E17F885D7A47426DB43DDDFD387928E42F7472ED372734DC594D61C4595';
  i(11) := '515F739B9381E1CC1EA82BD94E7FAC95C1AA8D6B36CCA3AB7804766295C72EE63CFC8F0DDD2B0D20C3FD11ECFB27E1DC5606F641BA60AE56B7686EB9AAA89A23947D2221900F367B4726BB9771BABB343B4F69F138F6A2DA63AF62C900072B5F64836210';
  i(12) := '4951110111101569AE007F67205C037F27372BEEE0ACB5F2F8C11622FD73411DD01976A8C1D923B6EB6D0B5F71B8EECFE0B2D8D6182A6092277BED201FAA77B5C3A1B1F05ED01728356B48680C1507686C9CC11C9CD243879DFC9634BDF1BB6E3716B871';
  i(13) := '1C7B8F30AE1D6A68697174EC1D9766E23DC70CB68F7385BC41E6AAA9E89C066DBF7B730507C9C484E3B6D0D76E3B2323D415D35182C4FCC12C3F6736F913971E2B0F575258E22C4750BE63C71C3864833B4B81C6CB5C17FF0051ECF90FFAA59875596869';
  i(14) := '63B64B7D92DCB67A5940E2D261EF34AC8D2E95C4398EA105E1A3BAC4C832A8777A41C7AA9D53D4B6468731C1C0EE2372D68A7D2F86D62F1E2A41A3FAC2FA3BEF14991DED26ED77820BF1160F4634AE2AF66D466CE1ED32F9B7BC73088338888808888387';
  i(15) := '36EB0788683514F732534773C58360F9B6C88823188EA4A924BFA392688F2DA6C8DF27B49F8A8F566A1A41FBAAA89DDD2425BF16B8FC9110626A35215A3DDA67F491C3FC98BC6ED4A56FF2D1F84CCFC972883ACEA3EACFF0C3C2767E25CB3515567FF168';
  i(16) := 'EB3B7EE251104FF56BAB0930C99D2C92373616FA3639CE19DB371361E43C511107FFD9';
  l_blob := varchar2_to_blob(i);    
  INSERT INTO demo_product_info (product_id, product_name, product_description, category,product_avail, list_price, product_image, mimetype, filename, image_last_update, tags)
      VALUES(6, 'Ladies Shoes', 'Low heel and cushioned interior for comfort and style in simple yet elegant shoes', 'Womens', 'Y', 120, l_blob,'image/jpeg','heels.jpg',systimestamp,null);
  -- Table: DEMO_PRODUCT_INFO - Product 7
  i := j;
  i(1)  := 'FFD8FFE000104A46494600010100000100010000FFDB004300090607080706090807080A0A090B0D160F0D0C0C0D1B14151016201D2222201D1F1F2428342C242631271F1F2D3D2D3135373A3A3A232B3F443F384334393A37FFDB0043010A0A0A0D0C0D';
  i(2)  := '1A0F0F1A37251F253737373737373737373737373737373737373737373737373737373737373737373737373737373737373737373737373737FFC00011080068006803012200021101031101FFC4001C00010002030101010000000000000000000005';
  i(3)  := '07040608020301FFC400381000010303020404050204060300000000010203040005110621123141510713617114224281913252152362A12453637282D1A2B1F0FFC4001501010100000000000000000000000000000001FFC400141101000000000000';
  i(4)  := '00000000000000000000FFDA000C03010002110311003F00BC694A502A3EF979816280B9B749096194EC33B951EC91CC9F4159921E6E3B0E3CF2C21B6D254B52B92401924D7366B5D452F545E152DDE311C12988C7F968276DBF72B627D76E82836CD43E';
  i(5)  := '30CF7D6A6EC515B8AD720EBE02DC3EB8FD23FF002AD51EF10F55B8E719BDC849CE7094A123F01352965F0C6E72A22A7DF64B3658294F1295277584F729C809FF009107D2A22F0CE8C8414CDB9DBC5CDD1B79C5C6E3B5EE3282A3F81EF41296AF15F53C25';
  i(6)  := 'A7E2643139B1CD2FB4013FF2460FE73568E8EF11ED3A95C44573306E0AE4C3AAC870FF0042BAFB1C1F4AE715A92164A028273B027247DF033F8AF685F25209041C820E08A0EBFA5555A07C5186AB6B70F54CA2D4969410996B4929713D0AC8E479824EC7';
  i(7)  := '19CE4D5A2C3ED48650F47710EB4B1C485A1414950EE08E741F4A52940A52940A52941A9F8A52171F43DC036A292F16D824765B894ABFB13505E186908ED369BFCF682DF7093112A1B348E5C7EE7A1E83DEA7BC52643FA12EA8512308429247421C491FDC';
  i(8)  := '57AD03A921DF74D32EB45B6DE88D25A92C0DBCB2918C81FB48191F8E60D055DE31EA67AE77D72CEC2CA6040504AD20ECE3D8C927FDB9007AE4F6AD023449535DF2A1C77A439FB196D4B57E003562F87F62B56B2D557E9376794EF95294FA2303C21D4AD4';
  i(9)  := '77279E0600C0EE3DAAEC83062DBE3A63C18CCC7653FA5B6501091F6141CCADE84D54F27891609D8FEA4041FC2883587334CDFADC92B99669ECA0735AA3AB847DC0C5756E053141C8C405455BA9C6C7814074CEE3FF005531A335A5D348CC4AA2AD4F4052';
  i(10) := 'B2F425ABE457729FDAAF51F7CD6F5E369B6AAEB6D851E2B0998E381729E6D094AD4951C2524F5E4A3BF2DBBD6ADAE7C3D9FA55DF3D2AF8BB6AD5C289094E0A09E4163A1EC46C7D0ED41D0563BB44BE5AA3DCADEE7991DF4712491823A1047420E411DC56';
  i(11) := '7D541E05CF71A7A7DA1649696D894D8FDA73C0AFCFC9F8AB7E814A52814A528237525B05E6C53ADDC5C26432A42547E957D27F38AE6885367D8AE725A0A7A2C81C6C3C1270A4F45248E447A1EC08E86BAA6B41F113C3C6751955CADA50C5D529C2B8B644';
  i(12) := '8039057657657D8F42029AD33709BA5EFF001AF36FFF0012D20F0BCDA0E0B8D1C71248E9D083DC0AE97B55CA25DADECCE80F25D8EF24292A1EBD08E87B8E95CBF3A14BB5CD7624D65C8F259570AD0AD8A4F3E9E841C8EF5F045DA75B9F0F4194F4774F35';
  i(13) := 'B2B2851F729C6683ACEA27545FE1E9BB3BD719CA1C28D9B6F382E2CF248FFBE8013D2B9FE1789FAB22A0245D14E8FF0059A42CFE48CFF7AC0D45AAE6EA87D976F8E38EF929E16DB688420773C38E67A9F4141F37E64CD51AB6338F28A9E992D0949DC6EA';
  i(14) := '524647618C63B003B57466ADBB592DD6A7DABF38DA997DB524C6FD4B781E894F3FBF21DC5739C290CC490DCA88D3A87DB3C4DBA5F21493DC70E2BD4B96F3E56E38AF995BA959DD5EE4EE7EF41657821143970BC5C30A094A1B6194A8E4A504A95BFAEC33';
  i(15) := '56ED695E13D8E459B4D71CC6CB4FCC73CE2DA861484E004823BEC4E3A66B75A05294A05294A05294A0ABBC66D28A99153A82DE83E7C64F0CB4A47EB687257BA77FB1F4AA8176DF8948217C0A1CF6C8AEAF5A429252A00823041EB5CEBA8D36987A9E6C1B';
  i(16) := '3B9C7110E14B791F2A55F52127A849D81F4237C6486A122D3263E0E50B4138E249D87BE6BE8DDA25A802128238B03857C5939C606399CED5B260293C2B190AE7BF3A92D1326DF68D4911DBCA95F02824B2E1C70B2E7D2A5FA0DFD8E0F21B4548DAFC22BE';
  i(17) := '3A10674B851527984953AA1F6C01FDEB7ED33E1D59AC6EA24B8173A5A082975F038507BA503607D4E4FAD6E092140149C83C88AFDAA85294A05294A05294A052958777B946B45B24DC26AF823C76CAD6473C0E83B93C80EE68350F153569B0DAC5BE03BC';
  i(18) := '3739A9212A49DD86F929CF7E89F5DFA550120FC9C29CA427F4E3E9C72A97BFDDE4DF2ED2AE737679F56423390DA07E940F403F2727AD43A905C74253939EDBD153167B8194DF03DF2BA9C8CE3F57B7AD4AFF000D7E4595FBA17984456E488BE5F998754B';
  i(19) := '201C84E318DF3B9E84F4AB4346787F0A1E915C1BB470A933807241070A688DD0127A14E739EE4F4AADF51D8DDD37777624A5A1C570F1B6E8C0E341C80A23A72208F7C6D8A827344F882AD36D356BBD87245BF931211BA981FB4A7994F6C72DC0C8C01724';
  i(20) := '394C4E8AD4A88EA1E61D485B6E20E4281EA2B951FB8625F98CA12AC0FA86C7D48AB07C2DD692ED2C26D52E3AE4C4528B8D96C7F319493F3AB840DD3939C6C79E33CAAA2F0A57869C43CDA5C69695A160292A49C8503C883DABDD0294A50294A502A9AF1A';
  i(21) := '7537C44C6F4F4458F2A390F4C20F35F3423EC3E63EA53DAACAD657E469BD3D2AE4A485B88012CB67EB715B247B6773E80D7324B79F9121D7E438A71F75656EAD5CD4A27249FB9A0FC52F35677849A3152A5A2F7716BF90C2B8994ABEB70723EC9E7FEEC7';
  i(22) := 'ED35AD787BA45FD4B754970291099214F383B761EA7FFB95744C58CCC48EDC78CDA5B69B484A109E400A0FAD69DADB4041D52EA257C4390E5A5210A75090B0B48E40A491B8CEC41FCED8DC6941CC8CE96B833A997654B28952DB7BCBF2D2ACA5C2372A51';
  i(23) := '1FA5183939DFA73ABBB49586169990F452C244996028C8E227CCC0DD033C80DC81FF0059397FC21367BDCCBD436CBBF19C3F14D0402A0075475CF529EBEE003273586AED6ECC77C0E24F1B1211BF02BE950EFBD061292BB0B8A71B495DAD64A96DA464C6';
  i(24) := '2772A48EA8EA47D3CC6D90269B5A5C4256DA8290A00A54939041EA2A2ED53E44982D7F106C4696DA0194927E549190483D8F0939E83D6B2AD51DA8D0D2861050D152968472090A513803A0DF974E541994A52814A52830EED6C877782E42B8309798739A';
  i(25) := '4F4239107A11DEAABBD784D304F6CDAA434F445AF07CF570ADA1F61850FC1F4A5282CDD3D658B61B5B5061A70840CA958C15ABA935274A50294A507E1008C1E551E2118921C7A338A432EE4B8D04F10E2FDC07427AF43CF9E495283CB514497788B3E547';
  i(26) := '18C85270B788E455D703B1DC9E7B7393A52814A5283FFFD9';
  l_blob := varchar2_to_blob(i);
  INSERT INTO demo_product_info (product_id, product_name, product_description, category,product_avail, list_price, product_image, mimetype, filename, image_last_update, tags)
      VALUES(7, 'Belt', 'Leather belt', 'Accessories', 'Y', 30, l_blob,'image/jpeg','belt.jpg',systimestamp,null);
  -- Table: DEMO_PRODUCT_INFO - Product 8
  i := j;
  i(1)  := 'FFD8FFE000104A46494600010100000100010000FFDB0084000906061412111514131415131316151B151716171814181512181A1815141B1C1E161A1C261E1819241914161F2F20232A292C2C2F171E3135302A35262B2C2901090A0A0E0C0E170F0F17';
  i(2)  := '2C1C1C1C2C2C342C292929292929292C2C2C2C2C2C2C29292929292929292C2C292C292929292C292C29292C2C292929292C35292C29FFC00011080068006803012200021101031101FFC4001C0000010501010100000000000000000000000304060708';
  i(3)  := '050201FFC40046100001030203040507060B09000000000001000203041105214106071231135161718122425291A1B1D114233293A2C11517435462637292B2D3F0162453647382A3C2D2FFC400160101010100000000000000000000000000000102FF';
  i(4)  := 'C400191101010100030000000000000000000000000111213141FFDA000C03010002110311003F00BC5789A60C6971E4D049EE02E57B4C31E9B8296777A30C8EF531C7EE4113A2DF561B21B748F60D1CE8DDC27C5B7B78D97521DE661AEE55910FDA25BF';
  i(5)  := 'C402CD94381C5281F49B90BD8DFDE14830BC368A21F3D46EAA1E936A658C91DAD02C7C08545F876F70FF00CF69BEB59F15F59B7340795653FD633E2A9E6E278735A4438231C7AE698BADE243DDEE509C7A0964771474915330694C5FEDE279B9F00A2B4D';
  i(6)  := '9DB2A2FCEA0FAC6FC528CDABA33CAAA0FAD8FE2B28C523864E9DCD3D52464FC57D329D2584FF00B2C7F855C46B11B454D7B7CA20BFFAB1FF00E97C7ED2D28C8D4C008D3A58EFEABACC786C14EF67CF4B58E7E8DA786011839FE51F25CE9E68F14DDDB2A6';
  i(7)  := '491C58E9238BCDE91C1EF03B4B4347A87AD06963B7F41D23221531BA491E23635A788B9CE3C20642DCCA902CC7B25B32D8710A325E5EFF009543C8587D369E67DCB4E05142108440B89B6D2F0E1D567FCB4BED8DC3EF5DB518DE6CFC184D59FD491FBC43';
  i(8)  := '7EF419DE9CBA2601C1F481B125A01B5AFAE5CC7AD23F87C8C88B5B4BA5057F14638B87C9BF55FD7D592468AAF879B1A7BC2AA5A3DA72340BD9DA4CCD80CF4CF2F6250BDA73E065FB8251D4CC78B88D808D2D9140D7FB400F300FB7DE1291E3510F31BEA1';
  i(9)  := '97B126E8870348863CC751CFDB9242091872E8197EBCFE283A916D3B75B04A3B69A2E77CD730D3869CE08DC3BDD7F7A467E0360210DF177C532096ECF4FD257D1DB3FEF515CD9E39383B50068B450599F09DB110D4529783D0C52B5C7845DFE4E595F99C';
  i(10) := 'FDAB4950D63658D9230DD8F687B4D88BB5C0381B1CC64543C2E8421102AC77CFB4AE6D2CB4CD85EE6BBA3E965360C602EE36B46772E3D19F515672A3F7D78D033BA9D84969E8BA5F45AF6F191E6E4EB39BCCF9DCB552AC560D8C3B88736DEE0256E2E99B';
  i(11) := '64B725EC3C95A0F2C4794DD74EA4AC789581EBB1F726AC9085F248C104806E02A3AD455CC735A350125554FAB466B90C8C8B1053B6E22F1CD40E63AA3A85E2595A73D5349B102ED2C5367D41B141D8D89A26546274B0CAD0F8DF210E69E4E1C2E247B15E';
  i(12) := '3B19B42E8AA64A09448F6B669194F396D9B270B448E61232E30093965D8059533BA8F2B19A3EC738FAA294AB77656432E335ADCCC74D248F06DE7CE218F2CF9010483BC958B39D6A75CAC64210B4C059837BE0B719AB00901DD1B8804D8FCCC5CC6BC8AD';
  i(13) := '3EB386FAA90B7187B88CA48A3703D766F07BD85042298129CC51A4A38C8E495634AD2968E1CF34EE3918D06FCB84F8260E04F5F82F0EA736E45076592C190245D7A73A1B5B22B8DF213E89F7AF0EA6B6847AD4C0F6AA9A3232365C7A88ED9258C2742937';
  i(14) := 'B0EAA8956E5A3BE334FDD29FF8645696E71DD2CB8A5569356900F586F1B87B250AA2DDD55982AA59B97434953203D44445ADFB4E03C55EDBA2D9F7D261913246F048F2E95E0F305C6C2FDBC0D6ACA266842100A0DBD5D82FC214E1F101F2986E63FD634E';
  i(15) := '6E8C9EDB022FA8ED2A7284198309ABA2638475B47302D3C2F7C7348D7B48C8DE176BD6010AD7C3374F85D444D9617CCF8DE2ED736677B88C88E441CC275BCEDDEB6B2333C2D1F2A60BD87E5DA3CD3D6F03E89F0E445A07BA9DAE34B58DA671F99A8706D8';
  i(16) := 'F9921C9AE034B9B34F78EA544DDFB8EA13C9F523BA469F7B0A4BF11547FE3557EF45FCB5642134571F88CA4D2A2AC773A1FE5A6357B8B1F92AD947648C6BC7D92D56AA14148546E2EAC5F867A77F789597FB2E5CAAADCD622DE51C527EC4ADFF00BF0AD0';
  i(17) := '8B9BB43B4115153BE799D663472F39EED1AD1AB89FEACAE8CEB0EC45532B22A49A3313AA0B5A47131C7A1E36979F21C6C2CC3CFD12B4DB459561BB085F5D53362738F2892C8FA9B95886F635966DF52E72B41281084280421080545EF6B64CD25632B211';
  i(18) := 'C31CAF0E36E51CC0F178715B887687762BD133C5F098EA617C32B7898F162351A820E841CC1409E038BB6AA9E399BC9ED048F45DC9C3C1D71E0BA0AB1C322A8C124735E1D3D03DD7E91A2E62D2EE68FA26D607CD361620E4AC7A2AE64CC6C91B9AF6385C';
  i(19) := '39A6E0FF005D4817422EA05B73BD982883A386D5153CB85A7C88CFE9B86BFA233EE4123DA9DADA7C3E132CEFB68D60CDF21EA6B75EFE435547B66ACDA5AE0338A9A33736B98E9D87D8F95D6CBAFB00C9CE0FBBCC43199FE535CF7C309F39C2CF7379F0C5';
  i(20) := '11FA2DED396B672BBF00D9F868E16C34EC0C8DBEB71D5CE773738F59452D846151D342C8626F0C71B785A35EF27524DC93D653C42110210840210840210841F085C49F63E024BA2E9299EECCBA9DEE8B88F5960F21C7B4B4A10819D5EC13651C32D65748';
  i(21) := 'D3CDA660D69EF0C636E97C1B602869487454ECE31C9EEBBDC3B8B89E1F0B2108242842100842100842107FFFD9';
  l_blob := varchar2_to_blob(i);
  INSERT INTO demo_product_info (product_id, product_name, product_description, category,product_avail, list_price, product_image, mimetype, filename, image_last_update, tags)
      VALUES(8, 'Bag', 'Unisex bag suitable for carrying laptops with room for many additional items', 'Accessories', 'Y', 125, l_blob,'image/jpeg','bag.jpg',systimestamp,null);
  -- Table: DEMO_PRODUCT_INFO - Product 9
  i := j;
  i(1)  := 'FFD8FFE000104A46494600010100000100010000FFDB004300090607080706090807080A0A090B0D160F0D0C0C0D1B14151016201D2222201D1F1F2428342C242631271F1F2D3D2D3135373A3A3A232B3F443F384334393A37FFDB0043010A0A0A0D0C0D';
  i(2)  := '1A0F0F1A37251F253737373737373737373737373737373737373737373737373737373737373737373737373737373737373737373737373737FFC00011080068006803012200021101031101FFC4001C00010001050101000000000000000000000007';
  i(3)  := '02030406080501FFC4003A100001030203060305050803000000000001000203041105213106071251617141819113142223A1324252B1C115173343445372D16284C2FFC40017010101010100000000000000000000000000010203FFC4001911010101';
  i(4)  := '01010100000000000000000000000102112212FFDA000C03010002110311003F009C5111011110111101111011110111101111079BB458C418060B5589D502E8E065C301B17B89B35A3A9240F3518D0EF271B967E29AA30E6B0E7EC8D23C37B077B4BF9D';
  i(5)  := 'BCBC16C5BE2783B38223A125DDCE83E8E77A28222A82D3C2F272D1CB1B9AE796F1F3DF4E82C33783452B47ED3A596972CE68499E2F568E21E6D03AADA30FC4E871288CB875653D5463574128781E85734D2E2660B7CE196963A7EAB22BB6864AC6362643';
  i(6)  := '097DACEA99226BA4B726B88B8EFAF2B6AB18DEEDE58DEF1893B2A64C6F797826175BEEB1B67ACE13F364A70D2D676248E2F2CBADF259DB1FB6987ED3B1D1C3F2AAD8389D0937BB6F939A7C469D42E7A7161177BDED63756B4DAFE7AAB13C3253BA39DD7F';
  i(7)  := '8802D68362D3E163A83D47D17671759A28D7775BC838DCEEA0C71D4904E1A3D948D2E6179D08707139F5BE7C82925A43802D2083A1083EA222022220222208E77D4C95F825198AF66CC4BADDB2FCCA82DF62E37162A7ADEBE314F4347052D652BE5A7973';
  i(8)  := '7C91E6E8B501D6E5716F0CC8B7230C5751C53B9D35048D9E1E6DC883C88D41EEA8F3006AAD8EE0D150F8DCC3620854B49BE6A0CA63F319E8AF0F660BE49AEEE21C0C00663A0EA561870009571B3BF87D9C4DBC8EE795875406D33DCD2F692DBEA49E2254';
  i(9)  := 'B7BA4DAEA99661826253C669D9186D2991C039A464182C05DB6D01CC5AD722D68CE96131C5C25DC4E39B9C42A656BA2904911731C0E446483A9D1441B13BCA9E00CA2C7499A219367FBEDEFCD4AF455B4D5D009A92664B19F169FCF920C844440444411D';
  i(10) := '6F66036A2A830BDCC0D7B0C8CD4136F848391BF2B8391D74511D4E1519799699E6391BABA2BB4B7BB7223E8174ECF0C55113A19E364B13C59CC7B4383875056A18C6EEB0BAD71928647D1C96B0681C71FA1CC79103A20829FEF31464D7402A606EB34560';
  i(11) := 'F60E67416EE00EAADC942D9A175450C8268DBF6AC2CE67F93750A6EC3B76F08A231E21516A86DC472528B11992092467DBC39AD136A761ABB01A9155070C763F2EAA16FCA7DFEEBDB9F0DF9660F271CC047D636B1D4ABF010C370003E36F155D5811CAF6';
  i(12) := 'D543EED35F8AD7BB08BE563CBC2F98EB7C95B65B40420F4A19B9155C8CF697239AC069234579B339A73CD052E0E8DF9123B2D8300DA29B0991AF8EA248EDF81C73F25E23A40F377B2EADBA4846B1DC77412F615BD3A41C2DC49B76FE368B1F4D3F25BE60';
  i(13) := 'F8C61F8D52FBCE19551D4457B1E139B4F223C0AE5D9AAE2D1B134755B66EBB1F6611B490B789DECAAC18A4634EB95DA6DCC11F53D50742A2B54D5115553C5514EF12432B03D8F1A39A45C1F44417511101512C51CD1BA3958D7C6F04398E170E1C8855A2';
  i(14) := '08DB6AF768DA90E9B057340B977BACCEC81E6C77879FA81928B716D96ACC2A42DADA49A94DF22F670B4F670F84F95D74DAF8E6B5ED2D70041D41D0A0E56F71A96FF0E5047FCAC7EB974F05F1D057DFF976BEB73FA02BA46AF64F00AB25D36134BC475732';
  i(15) := '3E027CDB65E7CBBBCD9A93FA3959D1B5327EAE515CF0E8AB2D673E368EAF3FE9597C329FB75110EC5C7FF2BA1BF767B317CE9AA0FF00DA7FFB5759BB7D936104E15C647F72A2575FC8BACA8E6E7C3133396779FF0018C347AB8FE8B67D95D8FC6F1B95A7';
  i(16) := '0DA092280E4EAA9EED601E3F111F176683D974061FB338161AE0EA1C1E86078D1ECA76F17ADAEBD641838161C308C1E8B0E12BA514B0B22123858BAC2D7B22CE444111101111011110111101111011110111101111011110111101111011110111101111';
  i(17) := '07FFD9';
  l_blob := varchar2_to_blob(i);  
  INSERT INTO demo_product_info (product_id, product_name, product_description, category,product_avail, list_price, product_image, mimetype, filename, image_last_update, tags)
      VALUES(9, 'Mens Shoes', 'Leather upper and lower lace up shoes', 'Mens', 'Y', 110, l_blob,'image/jpeg','shoes.jpg',systimestamp,null);
  -- Table: DEMO_PRODUCT_INFO - Product 10
  i := j;
  i(1)  := 'FFD8FFE000104A46494600010100000100010000FFDB008400090606100D111214110F101410111510120D0E180E101B101012161C15201412171E1C1F322A23252F1A1E152B3B202F33292E2E38211E31373C2E41262B2C2901090A0A0E0C0D1A0E0F1A';
  i(2)  := '29211F242E31293534352D352C2F2C2D342A2D2C29352D2E2C302C3435352F2C2D2C352C293534342C2C2E2A2C29292C2F2C342C2C2CFFC00011080068006803012200021101031101FFC4001B0001000203010100000000000000000000000607040508';
  i(3)  := '0302FFC4003C1000020102020606070509010000000000000102031104210506071251911322233161A141717281C1D1F0324252B2E1152433437392B1C2F114FFC4001A010100020301000000000000000000000000020301040506FFC4002911010002';
  i(4)  := '010203060700000000000000000001020304111221320531336181911334415171B1F0FFDA000C03010002110311003F00BC4000000000000000000000000000000000004635CF5DBF65285B0B52BCA6A527184E0B762B2BBBE6F3F424C8AE136F78497D';
  i(5)  := 'BC3568B5DF153A6E4BC1EF6E9B1DA953CE83B77A9A6F8DA54ECBCCADF1B80A75976908CBC5AEB2F5359AE7C0AAD7989D9D6D3E8EB97145FEAB5307B5BD1B55673AB0F6A8C9AE70B9B8C26BB68EADF631B42FC255141F2958E64D35808E16A4541CB7651D';
  i(6)  := 'E49BCD3BB4D5F9195A071B273DD94AF1B773E238E76DC8D1E2B5F839C4FBBAAE9D45249C5A69A4E2D34D34FB9A3E88BECDAA5F47D25F8655E36E0BA49B4B9344A0B22778DDCCC94E0BCD7ED3B000328000000000000209B505D5A0EFF8F2F7D2BBF87BCA';
  i(7)  := 'DE7F5F5F5F3B2B6A5FC3A197DE9F5BFB32E76E45677F2B1AD97BDE8FB3BC184635BD75A93F0A8BCE3F330F404BB55EA667EB8ACA8BF1AABCA9D8D668495AAC7DE663A519E5AAF58745ECAE5FB8FAAAD5F3DD7F126242B64F2BE0A5E15AA71FC34C9A9753';
  i(8)  := 'A61C7D5F8F7FCC80024D600000000000041F6A4BB2A19FDF92DDE39473E57E6562D967ED4EDD051CBF98F3F77773B157CDFEBE7F23572F53D2767781EA8E6B8BEA52F6E7F951A4D1157B58E68DDEB8BECE97B72FF069745DAF2BC77A495A0B849E4999AF';
  i(9)  := '4A9CBF35EDFA744EC7E57C1D5FEBC9F3A7449D95EEC572C1D64DB6E35DABF1EA53F916117D3A5CAD5F3CF69F300049AC000000000000846D6256C351E1D37FA4F32AD9CBF4E6CB935F3576AE90C3C6345C7A4A73E91464ECA6B7649C53F43CFD453B8FC0';
  i(10) := 'D5C34DC2B539539ACDC649ABAE2BD0D78ABA3572C4EFBBD0F66DEBF0B877E68D6B7E70A7EDCBF2FF00C35BA0E2B7F3BFA5ACFEBD04C70DA955F4D49D2A152942749749DA39A8CA2F753578C5B59F81E6F641A670D3BFFE58D48AFB4E9E2293CBD52717C9';
  i(11) := '12AC4CD1567BD69AAE7E4B2B62B513A1898E79568BE715F14CB1CAE3643A2B138578B8D7C3D5A4A5D04A1BF0B272ED54B778E5BB7F596396D3A5CDD64C4E7B4C7F720004DAA000000000000187A4F4450C5C372BD28D487A1359C5F18BEF4FC558CC0198';
  i(12) := '9989DE116D5AD44868DC4D4AB4AACA54EA53DC8D2947AD0774EFBCBBFBB85C9480622223B92BE4B649E2B4EF258006500000000000000000000000000000000000007FFFD9';
  l_blob := varchar2_to_blob(i);   
  INSERT INTO demo_product_info (product_id, product_name, product_description, category,product_avail, list_price, product_image, mimetype, filename, image_last_update, tags)
      VALUES(10, 'Wallet', 'Travel wallet suitable for men and women. Several compartments for credit cards, passports and cash', 'Accessories', 'Y', 50, l_blob,'image/jpeg','wallet.jpg',systimestamp,null);
  -- Table: DEMO_CUSTOMERS
  INSERT INTO demo_customers (customer_id, cust_first_name, cust_last_name, cust_street_address1, cust_street_address2, cust_city, cust_state, cust_postal_code, cust_email, phone_number1, phone_number2, url, credit_limit, tags)
   VALUES(1, 'John', 'Dulles', '45020 Aviation Drive', null, 'Sterling', 'VA', '20166', 'john.dulles@email.com', '703-555-2143', '703-555-8967', 'http://www.johndulles.com', 1000, null);
  INSERT INTO demo_customers (customer_id, cust_first_name, cust_last_name, cust_street_address1, cust_street_address2, cust_city, cust_state, cust_postal_code, cust_email, phone_number1, phone_number2, url, credit_limit, tags)
    VALUES(2, 'William', 'Hartsfield', '6000 North Terminal Parkway', null, 'Atlanta', 'GA', '30320', null, '404-555-3285', null, null, 1000, 'Repeat customer');
  INSERT INTO demo_customers (customer_id, cust_first_name, cust_last_name, cust_street_address1, cust_street_address2, cust_city, cust_state, cust_postal_code, cust_email, phone_number1, phone_number2, url, credit_limit, tags)
    VALUES(3, 'Edward', 'Logan', '1 Harborside Drive', null, 'East Boston', 'MA', '02128', null, '617-555-3295', null, null, 1000, 'Repeat customer');
  INSERT INTO demo_customers (customer_id, cust_first_name, cust_last_name, cust_street_address1, cust_street_address2, cust_city, cust_state, cust_postal_code, cust_email, phone_number1, phone_number2, url, credit_limit, tags)
    VALUES(4, 'Frank', 'OHare', '10000 West OHare', null, 'Chicago', 'IL', '60666', null, '773-555-7693', null, null, 1000, null);
  INSERT INTO demo_customers (customer_id, cust_first_name, cust_last_name, cust_street_address1, cust_street_address2, cust_city, cust_state, cust_postal_code, cust_email, phone_number1, phone_number2, url, credit_limit, tags)
    VALUES(5, 'Fiorello', 'LaGuardia', 'Hangar Center', 'Third Floor', 'Flushing', 'NY', '11371', null, '212-555-3923', null, null, 1000, null);
  INSERT INTO demo_customers (customer_id, cust_first_name, cust_last_name, cust_street_address1, cust_street_address2, cust_city, cust_state, cust_postal_code, cust_email, phone_number1, phone_number2, url, credit_limit, tags)
    VALUES(6, 'Albert', 'Lambert', '10701 Lambert International Blvd.', null, 'St. Louis', 'MO', '63145', null, '314-555-4022', null, null, 1000, null);
  INSERT INTO demo_customers (customer_id, cust_first_name, cust_last_name, cust_street_address1, cust_street_address2, cust_city, cust_state, cust_postal_code, cust_email, phone_number1, phone_number2, url, credit_limit, tags)
    VALUES(7, 'Eugene', 'Bradley', 'Schoephoester Road', null, 'Windsor Locks', 'CT', '06096', null, '860-555-1835', null, null, 1000, 'Repeat customer');
  -- Table: DEMO_ORDERS
  INSERT INTO demo_orders (order_id, customer_id, order_total, order_timestamp, user_name, tags) VALUES(1, 7,0, systimestamp-65,'DEMO', null);
  INSERT INTO demo_orders (order_id, customer_id, order_total, order_timestamp, user_name, tags) VALUES(2, 1,0, systimestamp-51,'DEMO', 'Large Order');
  INSERT INTO demo_orders (order_id, customer_id, order_total, order_timestamp, user_name, tags) VALUES(3, 2,0, systimestamp-40,'DEMO', null);
  INSERT INTO demo_orders (order_id, customer_id, order_total, order_timestamp, user_name, tags) VALUES(4, 5,0, systimestamp-38,'DEMO', null);
  INSERT INTO demo_orders (order_id, customer_id, order_total, order_timestamp, user_name, tags) VALUES(5, 6,0, systimestamp-28,'DEMO', null);
  INSERT INTO demo_orders (order_id, customer_id, order_total, order_timestamp, user_name, tags) VALUES(6, 3,0, systimestamp-23,'DEMO', null);
  INSERT INTO demo_orders (order_id, customer_id, order_total, order_timestamp, user_name, tags) VALUES(7, 3,0, systimestamp-18,'DEMO', null);
  INSERT INTO demo_orders (order_id, customer_id, order_total, order_timestamp, user_name, tags) VALUES(8, 4,0, systimestamp-10,'DEMO', null);
  INSERT INTO demo_orders (order_id, customer_id, order_total, order_timestamp, user_name, tags) VALUES(9, 2,0, systimestamp-4,'DEMO', null);
  INSERT INTO demo_orders (order_id, customer_id, order_total, order_timestamp, user_name, tags) VALUES(10, 7,0, systimestamp-1,'DEMO', null);
  -- Table: DEMO_ORDER_ITEMS
  INSERT INTO demo_order_items (order_item_id, order_id, product_id, unit_price, quantity) VALUES(null, 1, 1, null, 10);
  INSERT INTO demo_order_items (order_item_id, order_id, product_id, unit_price, quantity) VALUES(null, 1, 2, null, 8);
  INSERT INTO demo_order_items (order_item_id, order_id, product_id, unit_price, quantity) VALUES(null, 1, 3, null, 5);
  INSERT INTO demo_order_items (order_item_id, order_id, product_id, unit_price, quantity) VALUES(null, 2, 1, null, 3);
  INSERT INTO demo_order_items (order_item_id, order_id, product_id, unit_price, quantity) VALUES(null, 2, 2, null, 3);
  INSERT INTO demo_order_items (order_item_id, order_id, product_id, unit_price, quantity) VALUES(null, 2, 3, null, 3);
  INSERT INTO demo_order_items (order_item_id, order_id, product_id, unit_price, quantity) VALUES(null, 2, 4, null, 3);
  INSERT INTO demo_order_items (order_item_id, order_id, product_id, unit_price, quantity) VALUES(null, 2, 5, null, 3);
  INSERT INTO demo_order_items (order_item_id, order_id, product_id, unit_price, quantity) VALUES(null, 2, 6, null, 2);
  INSERT INTO demo_order_items (order_item_id, order_id, product_id, unit_price, quantity) VALUES(null, 2, 7, null, 2);
  INSERT INTO demo_order_items (order_item_id, order_id, product_id, unit_price, quantity) VALUES(null, 2, 8, null, 4);
  INSERT INTO demo_order_items (order_item_id, order_id, product_id, unit_price, quantity) VALUES(null, 2, 9, null, 2);
  INSERT INTO demo_order_items (order_item_id, order_id, product_id, unit_price, quantity) VALUES(null, 2, 10, null, 2);
  INSERT INTO demo_order_items (order_item_id, order_id, product_id, unit_price, quantity) VALUES(null, 3, 4, null, 4);
  INSERT INTO demo_order_items (order_item_id, order_id, product_id, unit_price, quantity) VALUES(null, 3, 5, null, 4);
  INSERT INTO demo_order_items (order_item_id, order_id, product_id, unit_price, quantity) VALUES(null, 3, 6, null, 4);
  INSERT INTO demo_order_items (order_item_id, order_id, product_id, unit_price, quantity) VALUES(null, 3, 8, null, 4);
  INSERT INTO demo_order_items (order_item_id, order_id, product_id, unit_price, quantity) VALUES(null, 3, 10, null, 2);
  INSERT INTO demo_order_items (order_item_id, order_id, product_id, unit_price, quantity) VALUES(null, 4, 6, null, 2);
  INSERT INTO demo_order_items (order_item_id, order_id, product_id, unit_price, quantity) VALUES(null, 4, 7, null, 6);
  INSERT INTO demo_order_items (order_item_id, order_id, product_id, unit_price, quantity) VALUES(null, 4, 8, null, 2);
  INSERT INTO demo_order_items (order_item_id, order_id, product_id, unit_price, quantity) VALUES(null, 4, 9, null, 2);
  INSERT INTO demo_order_items (order_item_id, order_id, product_id, unit_price, quantity) VALUES(null, 4, 10, null, 4);
  INSERT INTO demo_order_items (order_item_id, order_id, product_id, unit_price, quantity) VALUES(null, 5, 1, null, 3);
  INSERT INTO demo_order_items (order_item_id, order_id, product_id, unit_price, quantity) VALUES(null, 5, 2, null, 2);
  INSERT INTO demo_order_items (order_item_id, order_id, product_id, unit_price, quantity) VALUES(null, 5, 3, null, 2);
  INSERT INTO demo_order_items (order_item_id, order_id, product_id, unit_price, quantity) VALUES(null, 5, 4, null, 3);
  INSERT INTO demo_order_items (order_item_id, order_id, product_id, unit_price, quantity) VALUES(null, 5, 5, null, 2);
  INSERT INTO demo_order_items (order_item_id, order_id, product_id, unit_price, quantity) VALUES(null, 6, 3, null, 3);
  INSERT INTO demo_order_items (order_item_id, order_id, product_id, unit_price, quantity) VALUES(null, 6, 6, null, 3);
  INSERT INTO demo_order_items (order_item_id, order_id, product_id, unit_price, quantity) VALUES(null, 6, 8, null, 3);
  INSERT INTO demo_order_items (order_item_id, order_id, product_id, unit_price, quantity) VALUES(null, 6, 9, null, 3);
  INSERT INTO demo_order_items (order_item_id, order_id, product_id, unit_price, quantity) VALUES(null, 7, 1, null, 2);
  INSERT INTO demo_order_items (order_item_id, order_id, product_id, unit_price, quantity) VALUES(null, 7, 2, null, 2);
  INSERT INTO demo_order_items (order_item_id, order_id, product_id, unit_price, quantity) VALUES(null, 7, 4, null, 2);
  INSERT INTO demo_order_items (order_item_id, order_id, product_id, unit_price, quantity) VALUES(null, 7, 5, null, 2);
  INSERT INTO demo_order_items (order_item_id, order_id, product_id, unit_price, quantity) VALUES(null, 7, 7, null, 3);
  INSERT INTO demo_order_items (order_item_id, order_id, product_id, unit_price, quantity) VALUES(null, 7, 8, null, 1);
  INSERT INTO demo_order_items (order_item_id, order_id, product_id, unit_price, quantity) VALUES(null, 7, 10, null, 3);
  INSERT INTO demo_order_items (order_item_id, order_id, product_id, unit_price, quantity) VALUES(null, 8, 2, null, 2);
  INSERT INTO demo_order_items (order_item_id, order_id, product_id, unit_price, quantity) VALUES(null, 8, 3, null, 3);
  INSERT INTO demo_order_items (order_item_id, order_id, product_id, unit_price, quantity) VALUES(null, 8, 6, null, 1);
  INSERT INTO demo_order_items (order_item_id, order_id, product_id, unit_price, quantity) VALUES(null, 8, 9, null, 3);
  INSERT INTO demo_order_items (order_item_id, order_id, product_id, unit_price, quantity) VALUES(null, 9, 4, null, 4);
  INSERT INTO demo_order_items (order_item_id, order_id, product_id, unit_price, quantity) VALUES(null, 9, 5, null, 3);
  INSERT INTO demo_order_items (order_item_id, order_id, product_id, unit_price, quantity) VALUES(null, 9, 8, null, 2);
  INSERT INTO demo_order_items (order_item_id, order_id, product_id, unit_price, quantity) VALUES(null, 10, 1, null, 5);
  INSERT INTO demo_order_items (order_item_id, order_id, product_id, unit_price, quantity) VALUES(null, 10, 2, null, 4);
  INSERT INTO demo_order_items (order_item_id, order_id, product_id, unit_price, quantity) VALUES(null, 10, 3, null, 2);
  -- Table: DEMO_STATES
  INSERT INTO demo_states (st, state_name) VALUES ('AK','ALASKA');
  INSERT INTO demo_states (st, state_name) VALUES ('AL','ALABAMA');
  INSERT INTO demo_states (st, state_name) VALUES ('AR','ARKANSAS');
  INSERT INTO demo_states (st, state_name) VALUES ('AZ','ARIZONA');
  INSERT INTO demo_states (st, state_name) VALUES ('CA','CALIFORNIA');
  INSERT INTO demo_states (st, state_name) VALUES ('CO','COLORADO');
  INSERT INTO demo_states (st, state_name) VALUES ('CT','CONNECTICUT');
  INSERT INTO demo_states (st, state_name) VALUES ('DC','DISTRICT OF COLUMBIA');
  INSERT INTO demo_states (st, state_name) VALUES ('DE','DELAWARE');
  INSERT INTO demo_states (st, state_name) VALUES ('FL','FLORIDA');
  INSERT INTO demo_states (st, state_name) VALUES ('GA','GEORGIA');
  INSERT INTO demo_states (st, state_name) VALUES ('HI','HAWAII');
  INSERT INTO demo_states (st, state_name) VALUES ('IA','IOWA');
  INSERT INTO demo_states (st, state_name) VALUES ('ID','IDAHO');
  INSERT INTO demo_states (st, state_name) VALUES ('IL','ILLINOIS');
  INSERT INTO demo_states (st, state_name) VALUES ('IN','INDIANA');
  INSERT INTO demo_states (st, state_name) VALUES ('KS','KANSAS');
  INSERT INTO demo_states (st, state_name) VALUES ('KY','KENTUCKY');
  INSERT INTO demo_states (st, state_name) VALUES ('LA','LOUISIANA');
  INSERT INTO demo_states (st, state_name) VALUES ('MA','MASSACHUSETTS');
  INSERT INTO demo_states (st, state_name) VALUES ('MD','MARYLAND');
  INSERT INTO demo_states (st, state_name) VALUES ('ME','MAINE');
  INSERT INTO demo_states (st, state_name) VALUES ('MI','MICHIGAN');
  INSERT INTO demo_states (st, state_name) VALUES ('MN','MINNESOTA');
  INSERT INTO demo_states (st, state_name) VALUES ('MO','MISSOURI');
  INSERT INTO demo_states (st, state_name) VALUES ('MS','MISSISSIPPI');
  INSERT INTO demo_states (st, state_name) VALUES ('MT','MONTANA');
  INSERT INTO demo_states (st, state_name) VALUES ('NC','NORTH CAROLINA');
  INSERT INTO demo_states (st, state_name) VALUES ('ND','NORTH DAKOTA');
  INSERT INTO demo_states (st, state_name) VALUES ('NE','NEBRASKA');
  INSERT INTO demo_states (st, state_name) VALUES ('NH','NEW HAMPSHIRE');
  INSERT INTO demo_states (st, state_name) VALUES ('NJ','NEW JERSEY');
  INSERT INTO demo_states (st, state_name) VALUES ('NM','NEW MEXICO');
  INSERT INTO demo_states (st, state_name) VALUES ('NV','NEVADA');
  INSERT INTO demo_states (st, state_name) VALUES ('NY','NEW YORK');
  INSERT INTO demo_states (st, state_name) VALUES ('OH','OHIO');
  INSERT INTO demo_states (st, state_name) VALUES ('OK','OKLAHOMA');
  INSERT INTO demo_states (st, state_name) VALUES ('OR','OREGON');
  INSERT INTO demo_states (st, state_name) VALUES ('PA','PENNSYLVANIA');
  INSERT INTO demo_states (st, state_name) VALUES ('RI','RHODE ISLAND');
  INSERT INTO demo_states (st, state_name) VALUES ('SC','SOUTH CAROLINA');
  INSERT INTO demo_states (st, state_name) VALUES ('SD','SOUTH DAKOTA');
  INSERT INTO demo_states (st, state_name) VALUES ('TN','TENNESSEE');
  INSERT INTO demo_states (st, state_name) VALUES ('TX','TEXAS');
  INSERT INTO demo_states (st, state_name) VALUES ('UT','UTAH');
  INSERT INTO demo_states (st, state_name) VALUES ('VA','VIRGINIA');
  INSERT INTO demo_states (st, state_name) VALUES ('VT','VERMONT');
  INSERT INTO demo_states (st, state_name) VALUES ('WA','WASHINGTON');
  INSERT INTO demo_states (st, state_name) VALUES ('WI','WISCONSIN');
  INSERT INTO demo_states (st, state_name) VALUES ('WV','WEST VIRGINIA');
  INSERT INTO demo_states (st, state_name) VALUES ('WY','WYOMING');
  -- Table: DEMO_CONSTRAINT_LOOKUP
  INSERT INTO demo_constraint_lookup (constraint_name, message) VALUES ('DEMO_CUST_CREDIT_LIMIT_MAX','Credit Limit must not exceed $5,000.');
  INSERT INTO demo_constraint_lookup (constraint_name, message) VALUES ('DEMO_CUSTOMERS_UK','Customer Name must be unique.');
  INSERT INTO demo_constraint_lookup (constraint_name, message) VALUES ('DEMO_PRODUCT_INFO_UK','Product Name must be unique.');
  INSERT INTO demo_constraint_lookup (constraint_name, message) VALUES ('DEMO_ORDER_ITEMS_UK','Product can only be entered once for each order.');
end insert_data;
end sample_data_pkg;

/
--------------------------------------------------------
--  DDL for Package Body SAMPLE_PKG
--------------------------------------------------------

  CREATE OR REPLACE PACKAGE BODY "COMPANY"."SAMPLE_PKG" as
    --
    -- Error Handling function
    --
    function demo_error_handling (
        p_error in apex_error.t_error )
        return apex_error.t_error_result
    is
        l_result          apex_error.t_error_result;
        l_reference_id    number;
        l_constraint_name varchar2(255);
    begin
        l_result := apex_error.init_error_result (
                        p_error => p_error );
        -- If it's an internal error raised by APEX, like an invalid statement or
        -- code which can't be executed, the error text might contain security sensitive
        -- information. To avoid this security problem we can rewrite the error to
        -- a generic error message and log the original error message for further
        -- investigation by the help desk.
        if p_error.is_internal_error then
            -- mask all errors that are not common runtime errors (Access Denied
            -- errors raised by application / page authorization and all errors
            -- regarding session and session state)
            if not p_error.is_common_runtime_error then
                -- log error for example with an autonomous transaction and return
                -- l_reference_id as reference#
                -- l_reference_id := log_error (
                --                       p_error => p_error );
                --
    
                -- Change the message to the generic error message which doesn't expose
                -- any sensitive information.
                l_result.message         := 'An unexpected internal application error has occurred. '||
                                            'Please get in contact with your system administrator and provide '||
                                            'reference# '||to_char(l_reference_id, '999G999G999G990')||
                                            ' for further investigation.';
                l_result.additional_info := null;
            end if;
        else
            -- Always show the error as inline error
            -- Note: If you have created manual tabular forms (using the package
            --       apex_item/htmldb_item in the SQL statement) you should still
            --       use "On error page" on that pages to avoid loosing entered data
            l_result.display_location := case
                                           when l_result.display_location = apex_error.c_on_error_page then apex_error.c_inline_in_notification
                                           else l_result.display_location
                                         end;
    
            -- If it's a constraint violation like
            --
            --   -) ORA-00001: unique constraint violated
            --   -) ORA-02091: transaction rolled back (-> can hide a deferred constraint)
            --   -) ORA-02290: check constraint violated
            --   -) ORA-02291: integrity constraint violated - parent key not found
            --   -) ORA-02292: integrity constraint violated - child record found
            --
            -- we try to get a friendly error message from our constraint lookup configuration.
            -- If we don't find the constraint in our lookup table we fallback to
            -- the original ORA error message.
            if p_error.ora_sqlcode in (-1, -2091, -2290, -2291, -2292) then
                l_constraint_name := apex_error.extract_constraint_name (
                                         p_error => p_error );
                begin
                    select message
                      into l_result.message
                      from demo_constraint_lookup
                     where constraint_name = l_constraint_name;
                exception when no_data_found then null; -- not every constraint has to be in our lookup table
                end;
            end if;
            -- If an ORA error has been raised, for example a raise_application_error(-20xxx, '...')
                -- in a table trigger or in a PL/SQL package called by a process and we
            -- haven't found the error in our lookup table, then we just want to see
            -- the actual error text and not the full error stack with all the ORA error numbers.
            if p_error.ora_sqlcode is not null and l_result.message = p_error.message then
                l_result.message := apex_error.get_first_ora_error_text (
                                        p_error => p_error );
            end if;
            -- If no associated page item/tabular form column has been set, we can use
            -- apex_error.auto_set_associated_item to automatically guess the affected
            -- error field by examine the ORA error for constraint names or column names.
            if l_result.page_item_name is null and l_result.column_alias is null then
                apex_error.auto_set_associated_item (
                    p_error        => p_error,
                    p_error_result => l_result );
            end if;
        end if;
        return l_result;
    end demo_error_handling;
        
    
    ---
    --- Tag Cleaner function
    ---
    function demo_tags_cleaner (
        p_tags  in varchar2,
        p_case  in varchar2 default 'U' ) return varchar2
    is
        type tags is table of varchar2(255) index by varchar2(255);
        l_tags_a        tags;
        l_tag           varchar2(255);
        l_tags          apex_application_global.vc_arr2;
        l_tags_string   varchar2(32767);
        i               integer;
    begin
        l_tags := apex_util.string_to_table(p_tags,',');
        for i in 1..l_tags.count loop
            --remove all whitespace, including tabs, spaces, line feeds and carraige returns with a single space
            l_tag := substr(trim(regexp_replace(l_tags(i),'[[:space:]]{1,}',' ')),1,255);
  
            if l_tag is not null and l_tag != ' ' then
                if p_case = 'U' then
                    l_tag := upper(l_tag);
                elsif p_case = 'L' then
                    l_tag := lower(l_tag);
                end if;
                --add it to the associative array, if it is a duplicate, it will just be replaced
                l_tags_a(l_tag) := l_tag;
            end if;
        end loop;
        l_tag := null;
        l_tag := l_tags_a.first;
        while l_tag is not null loop
            l_tags_string := l_tags_string||l_tag;
            if l_tag != l_tags_a.last then
                l_tags_string := l_tags_string||', ';
            end if;
            l_tag := l_tags_a.next(l_tag);
        end loop;
        return substr(l_tags_string,1,4000);
    end demo_tags_cleaner;
    ---
    --- Tag Synchronisation Procedure
    ---
    procedure demo_tag_sync (
        p_new_tags          in varchar2,
        p_old_tags          in varchar2,
        p_content_type      in varchar2,
        p_content_id        in number )
    as
        type tags is table of varchar2(255) index by varchar2(255);
        l_new_tags_a    tags;
        l_old_tags_a    tags;
        l_new_tags      apex_application_global.vc_arr2;
        l_old_tags      apex_application_global.vc_arr2;
        l_merge_tags    apex_application_global.vc_arr2;
        l_dummy_tag     varchar2(255);
        i               integer;
    begin
        l_old_tags := apex_util.string_to_table(p_old_tags,', ');
        l_new_tags := apex_util.string_to_table(p_new_tags,', ');
        if l_old_tags.count > 0 then --do inserts and deletes
            --build the associative arrays
            for i in 1..l_old_tags.count loop
                l_old_tags_a(l_old_tags(i)) := l_old_tags(i);
            end loop;
            for i in 1..l_new_tags.count loop
                l_new_tags_a(l_new_tags(i)) := l_new_tags(i);
            end loop;
            --do the inserts
            for i in 1..l_new_tags.count loop
                begin
                    l_dummy_tag := l_old_tags_a(l_new_tags(i));
                exception when no_data_found then
                    insert into demo_tags (tag, content_id, content_type )
                        values (l_new_tags(i), p_content_id, p_content_type );
                    l_merge_tags(l_merge_tags.count + 1) := l_new_tags(i);
                end;
            end loop;
            --do the deletes
            for i in 1..l_old_tags.count loop
                begin
                    l_dummy_tag := l_new_tags_a(l_old_tags(i));
                exception when no_data_found then
                    delete from demo_tags where content_id = p_content_id and tag = l_old_tags(i);
                    l_merge_tags(l_merge_tags.count + 1) := l_old_tags(i);
                end;
            end loop;
        else --just do inserts
            for i in 1..l_new_tags.count loop
                insert into demo_tags (tag, content_id, content_type )
                    values (l_new_tags(i), p_content_id, p_content_type );
                l_merge_tags(l_merge_tags.count + 1) := l_new_tags(i);
            end loop;
        end if;
        for i in 1..l_merge_tags.count loop
            merge into demo_tags_type_sum s
            using (select count(*) tag_count
                     from demo_tags
                    where tag = l_merge_tags(i) and content_type = p_content_type ) t
               on (s.tag = l_merge_tags(i) and s.content_type = p_content_type )
             when not matched then insert (tag, content_type, tag_count)
                                   values (l_merge_tags(i), p_content_type, t.tag_count)
             when matched then update set s.tag_count = t.tag_count;
            merge into demo_tags_sum s
            using (select sum(tag_count) tag_count
                     from demo_tags_type_sum
                    where tag = l_merge_tags(i) ) t
               on (s.tag = l_merge_tags(i) )
             when not matched then insert (tag, tag_count)
                                   values (l_merge_tags(i), t.tag_count)
             when matched then update set s.tag_count = t.tag_count;
        end loop;
    end demo_tag_sync;
end sample_pkg;

/
--------------------------------------------------------
--  Constraints for Table T_REL_KONTENPLAN_KTO_KTO_KAT
--------------------------------------------------------

  ALTER TABLE "COMPANY"."T_REL_KONTENPLAN_KTO_KTO_KAT" ADD CONSTRAINT "T_REL_KONTENPLAN_KTO_KTO_K_PK" PRIMARY KEY ("PK_REL_KONTENPLAN_KTO_KTO_KAT")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USER01"  ENABLE;
  ALTER TABLE "COMPANY"."T_REL_KONTENPLAN_KTO_KTO_KAT" MODIFY ("PK_REL_KONTENPLAN_KTO_KTO_KAT" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table T_STROMABLESUNG
--------------------------------------------------------

  ALTER TABLE "COMPANY"."T_STROMABLESUNG" ADD CONSTRAINT "T_STROMABLESUNG_PK" PRIMARY KEY ("PK_STROMABLESUNG")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USER01"  ENABLE;
  ALTER TABLE "COMPANY"."T_STROMABLESUNG" MODIFY ("PK_STROMABLESUNG" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table T_FRMDW_UMTK
--------------------------------------------------------

  ALTER TABLE "COMPANY"."T_FRMDW_UMTK" ADD CONSTRAINT "PK_T_FRMDW_UMTK" PRIMARY KEY ("PK_T_FRMDW_UMTK")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE;
  ALTER TABLE "COMPANY"."T_FRMDW_UMTK" MODIFY ("PK_T_FRMDW_UMTK" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table T_LOCATION_TYPE
--------------------------------------------------------

  ALTER TABLE "COMPANY"."T_LOCATION_TYPE" MODIFY ("PK_LOCATION_TYPE" NOT NULL ENABLE);
  ALTER TABLE "COMPANY"."T_LOCATION_TYPE" ADD CONSTRAINT "PK_T_LOCATION_TYPE" PRIMARY KEY ("PK_LOCATION_TYPE")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE;
--------------------------------------------------------
--  Constraints for Table T_HERSTELLER
--------------------------------------------------------

  ALTER TABLE "COMPANY"."T_HERSTELLER" MODIFY ("PK_HERSTELLER" NOT NULL ENABLE);
  ALTER TABLE "COMPANY"."T_HERSTELLER" ADD CONSTRAINT "T_HERSTELLER_PK" PRIMARY KEY ("PK_HERSTELLER")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE;
--------------------------------------------------------
--  Constraints for Table T_QUELLE
--------------------------------------------------------

  ALTER TABLE "COMPANY"."T_QUELLE" MODIFY ("PK_QUELLE" NOT NULL ENABLE);
  ALTER TABLE "COMPANY"."T_QUELLE" ADD CONSTRAINT "T_QUELLE_PK" PRIMARY KEY ("PK_QUELLE")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE;
--------------------------------------------------------
--  Constraints for Table IMP_BA_SOFTWARE
--------------------------------------------------------

  ALTER TABLE "COMPANY"."IMP_BA_SOFTWARE" ADD CONSTRAINT "IMP_BA_SOFTWARE_PK" PRIMARY KEY ("PK_IMP_BA_SOFTWARE")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USER01"  ENABLE;
  ALTER TABLE "COMPANY"."IMP_BA_SOFTWARE" MODIFY ("PK_IMP_BA_SOFTWARE" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table T_PACKUNGSTYP
--------------------------------------------------------

  ALTER TABLE "COMPANY"."T_PACKUNGSTYP" MODIFY ("PK_PACKKUNGSTYP" NOT NULL ENABLE);
  ALTER TABLE "COMPANY"."T_PACKUNGSTYP" ADD CONSTRAINT "PK_T_PACKUNGSTYP" PRIMARY KEY ("PK_PACKKUNGSTYP")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE;
--------------------------------------------------------
--  Constraints for Table T_QUELLENTYP
--------------------------------------------------------

  ALTER TABLE "COMPANY"."T_QUELLENTYP" MODIFY ("PK_QUELLENTYP" NOT NULL ENABLE);
  ALTER TABLE "COMPANY"."T_QUELLENTYP" ADD CONSTRAINT "PK_T_QUELLENTYP" PRIMARY KEY ("PK_QUELLENTYP")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE;
--------------------------------------------------------
--  Constraints for Table IMP_BA_TELEFONKARTEN
--------------------------------------------------------

  ALTER TABLE "COMPANY"."IMP_BA_TELEFONKARTEN" ADD CONSTRAINT "IMP_BA_TELEFONKARTEN_PK" PRIMARY KEY ("PK_IMP_BA_TELEFONKARTEN")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USER01"  ENABLE;
  ALTER TABLE "COMPANY"."IMP_BA_TELEFONKARTEN" MODIFY ("PK_IMP_BA_TELEFONKARTEN" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table PP_Vorgang
--------------------------------------------------------

  ALTER TABLE "COMPANY"."PP_Vorgang" ADD CONSTRAINT "PP_Vorgang_PK" PRIMARY KEY ("ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USER01"  ENABLE;
  ALTER TABLE "COMPANY"."PP_Vorgang" MODIFY ("ID" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table IMP_BA_KRANKENKASSE
--------------------------------------------------------

  ALTER TABLE "COMPANY"."IMP_BA_KRANKENKASSE" ADD CONSTRAINT "IMP_BA_KRANKENKASSE_PK" PRIMARY KEY ("PK_IMP_BA_KRANKENKASSE")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USER01"  ENABLE;
  ALTER TABLE "COMPANY"."IMP_BA_KRANKENKASSE" MODIFY ("PK_IMP_BA_KRANKENKASSE" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table DEMO_PRODUCT_INFO
--------------------------------------------------------

  ALTER TABLE "COMPANY"."DEMO_PRODUCT_INFO" ADD CONSTRAINT "DEMO_PRODUCT_INFO_UK" UNIQUE ("PRODUCT_NAME")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USER01"  ENABLE;
  ALTER TABLE "COMPANY"."DEMO_PRODUCT_INFO" ADD CONSTRAINT "DEMO_PRODUCT_INFO_PK" PRIMARY KEY ("PRODUCT_ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USER01"  ENABLE;
  ALTER TABLE "COMPANY"."DEMO_PRODUCT_INFO" MODIFY ("PRODUCT_ID" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table IMP_BA_BEL_BUCH
--------------------------------------------------------

  ALTER TABLE "COMPANY"."IMP_BA_BEL_BUCH" ADD CONSTRAINT "IMP_BA_BEL_BUCH_PK" PRIMARY KEY ("IMP_BA_BEL_BUCH")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USER01"  ENABLE;
  ALTER TABLE "COMPANY"."IMP_BA_BEL_BUCH" MODIFY ("IMP_BA_BEL_BUCH" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table T_ABSCHLUSSTYP
--------------------------------------------------------

  ALTER TABLE "COMPANY"."T_ABSCHLUSSTYP" MODIFY ("PK_ABSCHLUSSTYP" NOT NULL ENABLE);
  ALTER TABLE "COMPANY"."T_ABSCHLUSSTYP" ADD CONSTRAINT "PK_ABSCHLUSSTYP" PRIMARY KEY ("PK_ABSCHLUSSTYP")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE;
--------------------------------------------------------
--  Constraints for Table T_KONTENPLAN_KONTEN
--------------------------------------------------------

  ALTER TABLE "COMPANY"."T_KONTENPLAN_KONTEN" ADD CONSTRAINT "T_KONTENPLAN_KONTEN_PK" PRIMARY KEY ("PK_KONTENPLAN_KONTEN")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USER01"  ENABLE;
  ALTER TABLE "COMPANY"."T_KONTENPLAN_KONTEN" MODIFY ("PK_KONTENPLAN_KONTEN" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table T_REL_KONT_BUCH_LEX_BUCH
--------------------------------------------------------

  ALTER TABLE "COMPANY"."T_REL_KONT_BUCH_LEX_BUCH" ADD CONSTRAINT "T_REL_KONT_BUCH_LEX_BUCH_PK" PRIMARY KEY ("PK_REL_KONT_BUCH_LEX_BUCH")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USER01"  ENABLE;
  ALTER TABLE "COMPANY"."T_REL_KONT_BUCH_LEX_BUCH" MODIFY ("PK_REL_KONT_BUCH_LEX_BUCH" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table T_STEUER_VORANMLDG
--------------------------------------------------------

  ALTER TABLE "COMPANY"."T_STEUER_VORANMLDG" ADD CONSTRAINT "T_STEUER_VORANMLDG_PK" PRIMARY KEY ("PK_STEUER_VORANMLDG")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USER01"  ENABLE;
  ALTER TABLE "COMPANY"."T_STEUER_VORANMLDG" MODIFY ("PK_STEUER_VORANMLDG" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table T_ARTIKELTYP
--------------------------------------------------------

  ALTER TABLE "COMPANY"."T_ARTIKELTYP" MODIFY ("PK_ARTIKELTYP" NOT NULL ENABLE);
  ALTER TABLE "COMPANY"."T_ARTIKELTYP" ADD CONSTRAINT "PK_T_ARTIKELTYP" PRIMARY KEY ("PK_ARTIKELTYP")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE;
--------------------------------------------------------
--  Constraints for Table T_REL_RECHNUNG_STUNDENZETTEL
--------------------------------------------------------

  ALTER TABLE "COMPANY"."T_REL_RECHNUNG_STUNDENZETTEL" MODIFY ("PK_REL_RE_STDZ" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table T_EINSENDEAUFGABE
--------------------------------------------------------

  ALTER TABLE "COMPANY"."T_EINSENDEAUFGABE" MODIFY ("PK_EINSENDEAUFGABE" NOT NULL ENABLE);
  ALTER TABLE "COMPANY"."T_EINSENDEAUFGABE" ADD CONSTRAINT "PK_T_EINSENDEAUFGABE" PRIMARY KEY ("PK_EINSENDEAUFGABE")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE;
--------------------------------------------------------
--  Constraints for Table T_PROJEKT_ART
--------------------------------------------------------

  ALTER TABLE "COMPANY"."T_PROJEKT_ART" ADD CONSTRAINT "PK_T_PROJEKT_ART" PRIMARY KEY ("PK_PROJEKT_ART")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USER01"  ENABLE;
  ALTER TABLE "COMPANY"."T_PROJEKT_ART" MODIFY ("PK_PROJEKT_ART" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table T_REL_BARGELD_BELEG
--------------------------------------------------------

  ALTER TABLE "COMPANY"."T_REL_BARGELD_BELEG" ADD CONSTRAINT "T_REL_BARGELD_BELEG_PK" PRIMARY KEY ("PK_REL_BARGELD")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USER01"  ENABLE;
  ALTER TABLE "COMPANY"."T_REL_BARGELD_BELEG" MODIFY ("PK_REL_BARGELD" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table T_REL_INVENTAR_BARZAHL
--------------------------------------------------------

  ALTER TABLE "COMPANY"."T_REL_INVENTAR_BARZAHL" MODIFY ("PK_REL_INV_BARZAHL" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table IMP_BA_HOTELRECHNUNGEN
--------------------------------------------------------

  ALTER TABLE "COMPANY"."IMP_BA_HOTELRECHNUNGEN" ADD CONSTRAINT "IMP_BA_HOTELRECHNUNGEN_PK" PRIMARY KEY ("PK_IMP_BA_HOTELRECHNUNGEN")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USER01"  ENABLE;
  ALTER TABLE "COMPANY"."IMP_BA_HOTELRECHNUNGEN" MODIFY ("PK_IMP_BA_HOTELRECHNUNGEN" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table INP_BELEGE_POS_ALL
--------------------------------------------------------

  ALTER TABLE "COMPANY"."INP_BELEGE_POS_ALL" ADD CONSTRAINT "INP_BELEGE_POS_ALL_PK" PRIMARY KEY ("PK_INP_BELEGE_POS_ALL")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USER01"  ENABLE;
  ALTER TABLE "COMPANY"."INP_BELEGE_POS_ALL" MODIFY ("PK_INP_BELEGE_POS_ALL" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table T_REL_RECHNUNG_BELEG
--------------------------------------------------------

  ALTER TABLE "COMPANY"."T_REL_RECHNUNG_BELEG" MODIFY ("PK_REL_RE_BEL" NOT NULL ENABLE);
  ALTER TABLE "COMPANY"."T_REL_RECHNUNG_BELEG" ADD CONSTRAINT "PK_T_REL_RECHNUNG_BELEG" PRIMARY KEY ("PK_REL_RE_BEL")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE;
--------------------------------------------------------
--  Constraints for Table T_REL_KONT_BUCH_IMP_BEL
--------------------------------------------------------

  ALTER TABLE "COMPANY"."T_REL_KONT_BUCH_IMP_BEL" ADD CONSTRAINT "T_REL_KONT_BUCH_IMP_BEL_PK" PRIMARY KEY ("PK_REL_KONT_BUCH_IMP_BEL")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USER01"  ENABLE;
  ALTER TABLE "COMPANY"."T_REL_KONT_BUCH_IMP_BEL" MODIFY ("PK_REL_KONT_BUCH_IMP_BEL" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table T_REL_GESCHAEFTSP_KONT
--------------------------------------------------------

  ALTER TABLE "COMPANY"."T_REL_GESCHAEFTSP_KONT" MODIFY ("PK_REL_GP_KONT" NOT NULL ENABLE);
  ALTER TABLE "COMPANY"."T_REL_GESCHAEFTSP_KONT" ADD CONSTRAINT "PK_T_REL_GESCHAEFTSP_KONT" PRIMARY KEY ("PK_REL_GP_KONT") DISABLE;
--------------------------------------------------------
--  Constraints for Table T_ORT
--------------------------------------------------------

  ALTER TABLE "COMPANY"."T_ORT" MODIFY ("PK_ORT" NOT NULL ENABLE);
  ALTER TABLE "COMPANY"."T_ORT" ADD CONSTRAINT "T_ORT_PK" PRIMARY KEY ("PK_ORT")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE;
--------------------------------------------------------
--  Constraints for Table T_INVENTARE
--------------------------------------------------------

  ALTER TABLE "COMPANY"."T_INVENTARE" MODIFY ("PK_INVENTAR" NOT NULL ENABLE);
  ALTER TABLE "COMPANY"."T_INVENTARE" ADD CONSTRAINT "PK_T_INVENTARE" PRIMARY KEY ("PK_INVENTAR")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE;
--------------------------------------------------------
--  Constraints for Table CONTR_KATEGORIE_ZAHLUNG
--------------------------------------------------------

  ALTER TABLE "COMPANY"."CONTR_KATEGORIE_ZAHLUNG" ADD CONSTRAINT "CONTR_KATEGORIE_ZAHLUNG_PK" PRIMARY KEY ("PK_CONTR_KATEGORIE_ZAHLUNG")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USER01"  ENABLE;
  ALTER TABLE "COMPANY"."CONTR_KATEGORIE_ZAHLUNG" MODIFY ("PK_CONTR_KATEGORIE_ZAHLUNG" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table T_REL_STUNDENZETTEL_BELEG
--------------------------------------------------------

  ALTER TABLE "COMPANY"."T_REL_STUNDENZETTEL_BELEG" MODIFY ("PK_REL_STDZ_BEL" NOT NULL ENABLE);
  ALTER TABLE "COMPANY"."T_REL_STUNDENZETTEL_BELEG" ADD CONSTRAINT "PK_T_REL_STUNDENZETTEL_BELEG" PRIMARY KEY ("PK_REL_STDZ_BEL")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE;
--------------------------------------------------------
--  Constraints for Table T_VERBRAUCHSMAT_TYP
--------------------------------------------------------

  ALTER TABLE "COMPANY"."T_VERBRAUCHSMAT_TYP" MODIFY ("PK_VERBRAUCHSMAT_TYP" NOT NULL ENABLE);
  ALTER TABLE "COMPANY"."T_VERBRAUCHSMAT_TYP" ADD CONSTRAINT "T_VERBRAUCHSMAT_TYP_PK" PRIMARY KEY ("PK_VERBRAUCHSMAT_TYP")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE;
--------------------------------------------------------
--  Constraints for Table T_REL_PRODUKT_ARTIKEL
--------------------------------------------------------

  ALTER TABLE "COMPANY"."T_REL_PRODUKT_ARTIKEL" MODIFY ("PK_REL_PROD_ART" NOT NULL ENABLE);
  ALTER TABLE "COMPANY"."T_REL_PRODUKT_ARTIKEL" ADD CONSTRAINT "PK_T_REL_PRODUKT_ARTIKEL" PRIMARY KEY ("PK_REL_PROD_ART")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE;
--------------------------------------------------------
--  Constraints for Table T_VERWENDUNGSZWECK
--------------------------------------------------------

  ALTER TABLE "COMPANY"."T_VERWENDUNGSZWECK" MODIFY ("PK_VERWENDUNGSZWECK" NOT NULL ENABLE);
  ALTER TABLE "COMPANY"."T_VERWENDUNGSZWECK" ADD CONSTRAINT "PK_T_VERWENDUNGSZWECK" PRIMARY KEY ("PK_VERWENDUNGSZWECK")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE;
--------------------------------------------------------
--  Constraints for Table IMP_BA_AUTOERSATZTEILE
--------------------------------------------------------

  ALTER TABLE "COMPANY"."IMP_BA_AUTOERSATZTEILE" ADD CONSTRAINT "IMP_BA_AUTOERSATZTEILE_PK" PRIMARY KEY ("PK_IMP_BA_AUTOERSATZTEILE")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USER01"  ENABLE;
  ALTER TABLE "COMPANY"."IMP_BA_AUTOERSATZTEILE" MODIFY ("PK_IMP_BA_AUTOERSATZTEILE" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table T_REL_RECHNUNG_ZAHLUNG
--------------------------------------------------------

  ALTER TABLE "COMPANY"."T_REL_RECHNUNG_ZAHLUNG" ADD CONSTRAINT "T_REL_RECHNUNG_ZAHLUNG_PK" PRIMARY KEY ("PK_REL_RE_ZAHL")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USER01"  ENABLE;
  ALTER TABLE "COMPANY"."T_REL_RECHNUNG_ZAHLUNG" MODIFY ("PK_REL_RE_ZAHL" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table IMP_BA_PARKTICKETS
--------------------------------------------------------

  ALTER TABLE "COMPANY"."IMP_BA_PARKTICKETS" ADD CONSTRAINT "IMP_BA_PARKTICKETS_PK" PRIMARY KEY ("PK_IMP_BA_PARKTICKETS")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USER01"  ENABLE;
  ALTER TABLE "COMPANY"."IMP_BA_PARKTICKETS" MODIFY ("PK_IMP_BA_PARKTICKETS" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table T_REL_INVENTAR_ARTIKEL
--------------------------------------------------------

  ALTER TABLE "COMPANY"."T_REL_INVENTAR_ARTIKEL" MODIFY ("PK_REL_INV_ART" NOT NULL ENABLE);
  ALTER TABLE "COMPANY"."T_REL_INVENTAR_ARTIKEL" ADD CONSTRAINT "PK_T_REL_INVENTAR_ARTIKEL" PRIMARY KEY ("PK_REL_INV_ART")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE;
--------------------------------------------------------
--  Constraints for Table T_STEUERNUMMER
--------------------------------------------------------

  ALTER TABLE "COMPANY"."T_STEUERNUMMER" ADD CONSTRAINT "T_STEUERNUMMER_PK" PRIMARY KEY ("PK_STEUERNUMMER")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USER01"  ENABLE;
  ALTER TABLE "COMPANY"."T_STEUERNUMMER" MODIFY ("PK_STEUERNUMMER" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table T_INVENTARTYP
--------------------------------------------------------

  ALTER TABLE "COMPANY"."T_INVENTARTYP" MODIFY ("PK_INVENTARTYP" NOT NULL ENABLE);
  ALTER TABLE "COMPANY"."T_INVENTARTYP" ADD CONSTRAINT "T_INVENTARTYP_PK" PRIMARY KEY ("PK_INVENTARTYP")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE;
--------------------------------------------------------
--  Constraints for Table T_BUENDELUNG
--------------------------------------------------------

  ALTER TABLE "COMPANY"."T_BUENDELUNG" MODIFY ("PK_BUENDELUNG" NOT NULL ENABLE);
  ALTER TABLE "COMPANY"."T_BUENDELUNG" ADD CONSTRAINT "T_BÜNDELUNG_PK" PRIMARY KEY ("PK_BUENDELUNG")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE;
--------------------------------------------------------
--  Constraints for Table DEMO_ORDER_ITEMS
--------------------------------------------------------

  ALTER TABLE "COMPANY"."DEMO_ORDER_ITEMS" ADD CONSTRAINT "DEMO_ORDER_ITEMS_UK" UNIQUE ("ORDER_ID", "PRODUCT_ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USER01"  ENABLE;
  ALTER TABLE "COMPANY"."DEMO_ORDER_ITEMS" ADD CONSTRAINT "DEMO_ORDER_ITEMS_PK" PRIMARY KEY ("ORDER_ITEM_ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USER01"  ENABLE;
  ALTER TABLE "COMPANY"."DEMO_ORDER_ITEMS" MODIFY ("QUANTITY" NOT NULL ENABLE);
  ALTER TABLE "COMPANY"."DEMO_ORDER_ITEMS" MODIFY ("UNIT_PRICE" NOT NULL ENABLE);
  ALTER TABLE "COMPANY"."DEMO_ORDER_ITEMS" MODIFY ("PRODUCT_ID" NOT NULL ENABLE);
  ALTER TABLE "COMPANY"."DEMO_ORDER_ITEMS" MODIFY ("ORDER_ID" NOT NULL ENABLE);
  ALTER TABLE "COMPANY"."DEMO_ORDER_ITEMS" MODIFY ("ORDER_ITEM_ID" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table T_LEHRGANG
--------------------------------------------------------

  ALTER TABLE "COMPANY"."T_LEHRGANG" MODIFY ("PK_LEHRGANG" NOT NULL ENABLE);
  ALTER TABLE "COMPANY"."T_LEHRGANG" ADD CONSTRAINT "PK_T_LEHRGANG" PRIMARY KEY ("PK_LEHRGANG")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE;
--------------------------------------------------------
--  Constraints for Table IMP_BA_TEXTILREINIGUNG
--------------------------------------------------------

  ALTER TABLE "COMPANY"."IMP_BA_TEXTILREINIGUNG" ADD CONSTRAINT "IMP_BA_TEXTILREINIGUNG_PK" PRIMARY KEY ("PK_IMP_BA_TEXTILREINIGUNG")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USER01"  ENABLE;
  ALTER TABLE "COMPANY"."IMP_BA_TEXTILREINIGUNG" MODIFY ("PK_IMP_BA_TEXTILREINIGUNG" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table T_BILD_BA
--------------------------------------------------------

  ALTER TABLE "COMPANY"."T_BILD_BA" ADD CONSTRAINT "T_BILD_BA_PK" PRIMARY KEY ("PK")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USER01"  ENABLE;
  ALTER TABLE "COMPANY"."T_BILD_BA" MODIFY ("PK" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table IMP_BA_KFZ_VERSICHERUNGEN
--------------------------------------------------------

  ALTER TABLE "COMPANY"."IMP_BA_KFZ_VERSICHERUNGEN" ADD CONSTRAINT "IMP_BA_KFZ_VERSICHERUNGEN_PK" PRIMARY KEY ("PK_IMP_BA_KFZ_VERSICHERUNGEN")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USER01"  ENABLE;
  ALTER TABLE "COMPANY"."IMP_BA_KFZ_VERSICHERUNGEN" MODIFY ("PK_IMP_BA_KFZ_VERSICHERUNGEN" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table T_REL_STEUER_LOHN_ZAHL
--------------------------------------------------------

  ALTER TABLE "COMPANY"."T_REL_STEUER_LOHN_ZAHL" ADD CONSTRAINT "T_REL_STEUER_LOHN_ZAHL_PK" PRIMARY KEY ("PK_REL_STEUER_LOHN_ZAHL")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USER01"  ENABLE;
  ALTER TABLE "COMPANY"."T_REL_STEUER_LOHN_ZAHL" MODIFY ("PK_REL_STEUER_LOHN_ZAHL" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table IMP_TEL_MOBILCOM_RECH_OV
--------------------------------------------------------

  ALTER TABLE "COMPANY"."IMP_TEL_MOBILCOM_RECH_OV" ADD CONSTRAINT "A3_Zus_Gruppierung_Ein_PK" PRIMARY KEY ("PK_IMP_TEL_MOBILCOM_RECH_OV")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USER01"  ENABLE;
  ALTER TABLE "COMPANY"."IMP_TEL_MOBILCOM_RECH_OV" MODIFY ("PK_IMP_TEL_MOBILCOM_RECH_OV" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table IMP_TEL_MOBILCOM_RECH
--------------------------------------------------------

  ALTER TABLE "COMPANY"."IMP_TEL_MOBILCOM_RECH" ADD CONSTRAINT "IMP_TEL_MOBILCOM_RECH_PK" PRIMARY KEY ("PK_IMP_TEL_MOBILCOM_RECH")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USER01"  ENABLE;
  ALTER TABLE "COMPANY"."IMP_TEL_MOBILCOM_RECH" MODIFY ("PK_IMP_TEL_MOBILCOM_RECH" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table T_FRAGE
--------------------------------------------------------

  ALTER TABLE "COMPANY"."T_FRAGE" ADD CONSTRAINT "T_FRAGE_PK" PRIMARY KEY ("PK_FRAGE")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USER01"  ENABLE;
  ALTER TABLE "COMPANY"."T_FRAGE" MODIFY ("PK_FRAGE" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table T_REL_BELEG_LOCATION
--------------------------------------------------------

  ALTER TABLE "COMPANY"."T_REL_BELEG_LOCATION" MODIFY ("PK_REL_BEL_LOC" NOT NULL ENABLE);
  ALTER TABLE "COMPANY"."T_REL_BELEG_LOCATION" ADD CONSTRAINT "PK_T_REL_BELEG_LOCATION" PRIMARY KEY ("PK_REL_BEL_LOC")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE;
--------------------------------------------------------
--  Constraints for Table DEMO_TAGS_TYPE_SUM
--------------------------------------------------------

  ALTER TABLE "COMPANY"."DEMO_TAGS_TYPE_SUM" ADD CONSTRAINT "DEMO_TAGS_TYPE_SUM_PK" PRIMARY KEY ("TAG", "CONTENT_TYPE")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USER01"  ENABLE;
--------------------------------------------------------
--  Constraints for Table T_REL_INVENTAR_INVENTARTYP
--------------------------------------------------------

  ALTER TABLE "COMPANY"."T_REL_INVENTAR_INVENTARTYP" MODIFY ("PK_REL_INV_INVT" NOT NULL ENABLE);
  ALTER TABLE "COMPANY"."T_REL_INVENTAR_INVENTARTYP" ADD CONSTRAINT "PK_T_REL_INVENTAR_INVENTARTYP" PRIMARY KEY ("PK_REL_INV_INVT")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE;
--------------------------------------------------------
--  Constraints for Table T_ABL_ORDNER
--------------------------------------------------------

  ALTER TABLE "COMPANY"."T_ABL_ORDNER" ADD CONSTRAINT "T_ABL_ORDNER_PK" PRIMARY KEY ("PK_ABL_ORDNER")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USER01"  ENABLE;
  ALTER TABLE "COMPANY"."T_ABL_ORDNER" MODIFY ("PK_ABL_ORDNER" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table T_BUCH
--------------------------------------------------------

  ALTER TABLE "COMPANY"."T_BUCH" MODIFY ("BK_BUCH" NOT NULL ENABLE);
  ALTER TABLE "COMPANY"."T_BUCH" ADD CONSTRAINT "PK_T_BUCH" PRIMARY KEY ("BK_BUCH")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE;
--------------------------------------------------------
--  Constraints for Table T_REL_BEL_KONT_ADR
--------------------------------------------------------

  ALTER TABLE "COMPANY"."T_REL_BEL_KONT_ADR" MODIFY ("PK_REL_BEL_KONT_ADR" NOT NULL ENABLE);
  ALTER TABLE "COMPANY"."T_REL_BEL_KONT_ADR" ADD CONSTRAINT "PK_T_REL_BEL_KONT_ADR" PRIMARY KEY ("PK_REL_BEL_KONT_ADR")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE;
--------------------------------------------------------
--  Constraints for Table T_OFFENE_EINGANGSRECHNUNGEN
--------------------------------------------------------

  ALTER TABLE "COMPANY"."T_OFFENE_EINGANGSRECHNUNGEN" ADD CONSTRAINT "T_OFFENE_EINGANGSRECHNUNGE_PK" PRIMARY KEY ("PK_OFFENE_RECHNUNGEN")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USER01"  ENABLE;
  ALTER TABLE "COMPANY"."T_OFFENE_EINGANGSRECHNUNGEN" MODIFY ("PK_OFFENE_RECHNUNGEN" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table T_RECHNUNG
--------------------------------------------------------

  ALTER TABLE "COMPANY"."T_RECHNUNG" MODIFY ("PK_RECHNUNG" NOT NULL ENABLE);
  ALTER TABLE "COMPANY"."T_RECHNUNG" ADD CONSTRAINT "PK_T_RECHNUNG" PRIMARY KEY ("PK_RECHNUNG")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE;
--------------------------------------------------------
--  Constraints for Table T_REL_ARTIKELTYP_ARTIKELTYP
--------------------------------------------------------

  ALTER TABLE "COMPANY"."T_REL_ARTIKELTYP_ARTIKELTYP" ADD CONSTRAINT "T_REL_ARTIKELTYP_ARTIKELTY_PK" PRIMARY KEY ("PK_REL_ARTT_ARTT")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USER01"  ENABLE;
  ALTER TABLE "COMPANY"."T_REL_ARTIKELTYP_ARTIKELTYP" MODIFY ("PK_REL_ARTT_ARTT" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table T_REL_LOCATION_ADRESSE
--------------------------------------------------------

  ALTER TABLE "COMPANY"."T_REL_LOCATION_ADRESSE" MODIFY ("PK_REL_LOC_ADR" NOT NULL ENABLE);
  ALTER TABLE "COMPANY"."T_REL_LOCATION_ADRESSE" ADD CONSTRAINT "PK_T_REL_LOCATION_ADRESSE" PRIMARY KEY ("PK_REL_LOC_ADR")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE;
--------------------------------------------------------
--  Constraints for Table T_RECHNUNGSTYP
--------------------------------------------------------

  ALTER TABLE "COMPANY"."T_RECHNUNGSTYP" MODIFY ("PK_RECHNUNGSTYP" NOT NULL ENABLE);
  ALTER TABLE "COMPANY"."T_RECHNUNGSTYP" MODIFY ("RECHNUNGSTYP" NOT NULL ENABLE);
  ALTER TABLE "COMPANY"."T_RECHNUNGSTYP" ADD CONSTRAINT "T_RECHNUNGSTYP_PK" PRIMARY KEY ("PK_RECHNUNGSTYP")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE;
--------------------------------------------------------
--  Constraints for Table T_LEX
--------------------------------------------------------

  ALTER TABLE "COMPANY"."T_LEX" ADD CONSTRAINT "T_LEX_PK" PRIMARY KEY ("PK_LEX")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USER01"  ENABLE;
  ALTER TABLE "COMPANY"."T_LEX" MODIFY ("PK_LEX" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table T_INV_COMP
--------------------------------------------------------

  ALTER TABLE "COMPANY"."T_INV_COMP" MODIFY ("PK_INV_COMP" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table T_STEUER_KRANKENKASSE
--------------------------------------------------------

  ALTER TABLE "COMPANY"."T_STEUER_KRANKENKASSE" ADD CONSTRAINT "T_STEUER_KRANKENKASSE_PK" PRIMARY KEY ("PK_STEUER_KRANKENKASSE")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USER01"  ENABLE;
  ALTER TABLE "COMPANY"."T_STEUER_KRANKENKASSE" MODIFY ("PK_STEUER_KRANKENKASSE" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table T_REL_RECHNG_STUNDEN
--------------------------------------------------------

  ALTER TABLE "COMPANY"."T_REL_RECHNG_STUNDEN" MODIFY ("PK_REL_RE_ST" NOT NULL ENABLE);
  ALTER TABLE "COMPANY"."T_REL_RECHNG_STUNDEN" ADD CONSTRAINT "PK_T_REL_RECHNG_STUNDEN" PRIMARY KEY ("PK_REL_RE_ST")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE;
--------------------------------------------------------
--  Constraints for Table T_ARTIKELBESTANDTEILTYP
--------------------------------------------------------

  ALTER TABLE "COMPANY"."T_ARTIKELBESTANDTEILTYP" MODIFY ("PK_ARTIKELBESTTYP" NOT NULL ENABLE);
  ALTER TABLE "COMPANY"."T_ARTIKELBESTANDTEILTYP" ADD CONSTRAINT "PK_T_ARTIKELBESTANDTEILTYP" PRIMARY KEY ("PK_ARTIKELBESTTYP")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE;
--------------------------------------------------------
--  Constraints for Table T_BEITRAG
--------------------------------------------------------

  ALTER TABLE "COMPANY"."T_BEITRAG" ADD CONSTRAINT "T_BEITRAG_PK" PRIMARY KEY ("PK_BEITRAG")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USER01"  ENABLE;
  ALTER TABLE "COMPANY"."T_BEITRAG" MODIFY ("PK_BEITRAG" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table T_KONTO_BUCH
--------------------------------------------------------

  ALTER TABLE "COMPANY"."T_KONTO_BUCH" ADD CONSTRAINT "T_KONTOAUSZUG_BUCH_PK" PRIMARY KEY ("PK_KONTO_BUCH")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USER01"  ENABLE;
  ALTER TABLE "COMPANY"."T_KONTO_BUCH" MODIFY ("PK_KONTO_BUCH" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table T_REL_KONTAKT_KONTAKTTYP
--------------------------------------------------------

  ALTER TABLE "COMPANY"."T_REL_KONTAKT_KONTAKTTYP" MODIFY ("PK_REL_KON_KONT" NOT NULL ENABLE);
  ALTER TABLE "COMPANY"."T_REL_KONTAKT_KONTAKTTYP" ADD CONSTRAINT "PK_T_REL_KONTAKT_KONTAKTTYP" PRIMARY KEY ("PK_REL_KON_KONT")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE;
--------------------------------------------------------
--  Constraints for Table KTO_Paypal
--------------------------------------------------------

  ALTER TABLE "COMPANY"."KTO_Paypal" ADD CONSTRAINT "KTO_Paypal_PK" PRIMARY KEY ("ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USER01"  ENABLE;
  ALTER TABLE "COMPANY"."KTO_Paypal" MODIFY ("ID" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table T_REL_BEL_KONT_BUCH
--------------------------------------------------------

  ALTER TABLE "COMPANY"."T_REL_BEL_KONT_BUCH" MODIFY ("PK_REL_BEL_KONT_BUCH" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table T_REL_BELEG_INVENTAR
--------------------------------------------------------

  ALTER TABLE "COMPANY"."T_REL_BELEG_INVENTAR" MODIFY ("PK_REL_BEL_INV" NOT NULL ENABLE);
  ALTER TABLE "COMPANY"."T_REL_BELEG_INVENTAR" ADD CONSTRAINT "PK_T_REL_BELEG_INVENTAR" PRIMARY KEY ("PK_REL_BEL_INV")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE;
--------------------------------------------------------
--  Constraints for Table T_BANK
--------------------------------------------------------

  ALTER TABLE "COMPANY"."T_BANK" MODIFY ("PK_BANK" NOT NULL ENABLE);
  ALTER TABLE "COMPANY"."T_BANK" ADD CONSTRAINT "PK_T_BANK" PRIMARY KEY ("PK_BANK")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE;
--------------------------------------------------------
--  Constraints for Table DEMO_CONSTRAINT_LOOKUP
--------------------------------------------------------

  ALTER TABLE "COMPANY"."DEMO_CONSTRAINT_LOOKUP" ADD PRIMARY KEY ("CONSTRAINT_NAME")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USER01"  ENABLE;
  ALTER TABLE "COMPANY"."DEMO_CONSTRAINT_LOOKUP" MODIFY ("MESSAGE" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table IMP_BA_TANKSTELLE
--------------------------------------------------------

  ALTER TABLE "COMPANY"."IMP_BA_TANKSTELLE" ADD CONSTRAINT "IMP_BA_TANKSTELLE_PK" PRIMARY KEY ("PK_IMP_BA_TANKSTELLE")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USER01"  ENABLE;
  ALTER TABLE "COMPANY"."IMP_BA_TANKSTELLE" MODIFY ("PK_IMP_BA_TANKSTELLE" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table T_STUNDENZETTEL
--------------------------------------------------------

  ALTER TABLE "COMPANY"."T_STUNDENZETTEL" MODIFY ("PK_STUNDENZETTEL" NOT NULL ENABLE);
  ALTER TABLE "COMPANY"."T_STUNDENZETTEL" ADD CONSTRAINT "PK_T_STUNDENZETTEL" PRIMARY KEY ("PK_STUNDENZETTEL")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE;
--------------------------------------------------------
--  Constraints for Table T_PRUEFUNG
--------------------------------------------------------

  ALTER TABLE "COMPANY"."T_PRUEFUNG" MODIFY ("PK_PRUEFUNG" NOT NULL ENABLE);
  ALTER TABLE "COMPANY"."T_PRUEFUNG" ADD CONSTRAINT "T_PRUEFUNG_PK" PRIMARY KEY ("PK_PRUEFUNG")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE;
--------------------------------------------------------
--  Constraints for Table T_UMTAUSCHKURS
--------------------------------------------------------

  ALTER TABLE "COMPANY"."T_UMTAUSCHKURS" ADD CONSTRAINT "PK_T_UMTAUSCHKURS" PRIMARY KEY ("PK_T_UMTAUSCHKURS")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE;
  ALTER TABLE "COMPANY"."T_UMTAUSCHKURS" MODIFY ("PK_T_UMTAUSCHKURS" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table T_BELEGPOSITION
--------------------------------------------------------

  ALTER TABLE "COMPANY"."T_BELEGPOSITION" MODIFY ("PK_BELEGPOSITION" NOT NULL ENABLE);
  ALTER TABLE "COMPANY"."T_BELEGPOSITION" ADD CONSTRAINT "T_BELEGPOSITION_PK" PRIMARY KEY ("PK_BELEGPOSITION")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE;
--------------------------------------------------------
--  Constraints for Table DEMO_TAGS_SUM
--------------------------------------------------------

  ALTER TABLE "COMPANY"."DEMO_TAGS_SUM" ADD CONSTRAINT "DEMO_TAGS_SUM_PK" PRIMARY KEY ("TAG")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USER01"  ENABLE;
--------------------------------------------------------
--  Constraints for Table T_ADRESSE
--------------------------------------------------------

  ALTER TABLE "COMPANY"."T_ADRESSE" MODIFY ("PK_ADRESSE" NOT NULL ENABLE);
  ALTER TABLE "COMPANY"."T_ADRESSE" ADD CONSTRAINT "PK_T_ADRESSE" PRIMARY KEY ("PK_ADRESSE")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE;
--------------------------------------------------------
--  Constraints for Table KTO_Kreditkarte
--------------------------------------------------------

  ALTER TABLE "COMPANY"."KTO_Kreditkarte" ADD CONSTRAINT "KTO_Kreditkarte_PK" PRIMARY KEY ("ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USER01"  ENABLE;
  ALTER TABLE "COMPANY"."KTO_Kreditkarte" MODIFY ("ID" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table T_KONTAKTTYP
--------------------------------------------------------

  ALTER TABLE "COMPANY"."T_KONTAKTTYP" MODIFY ("PK_KONTAKTTYP" NOT NULL ENABLE);
  ALTER TABLE "COMPANY"."T_KONTAKTTYP" ADD CONSTRAINT "T_KONTAKTTYP_PK" PRIMARY KEY ("PK_KONTAKTTYP")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE;
--------------------------------------------------------
--  Constraints for Table DEMO_TAGS
--------------------------------------------------------

  ALTER TABLE "COMPANY"."DEMO_TAGS" ADD PRIMARY KEY ("ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USER01"  ENABLE;
  ALTER TABLE "COMPANY"."DEMO_TAGS" ADD CONSTRAINT "DEMO_TAGS_CK" CHECK (content_type in ('CUSTOMER','ORDER','PRODUCT')) ENABLE;
  ALTER TABLE "COMPANY"."DEMO_TAGS" MODIFY ("TAG" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table T_REL_REZEPT_ARTIKEL
--------------------------------------------------------

  ALTER TABLE "COMPANY"."T_REL_REZEPT_ARTIKEL" MODIFY ("PK_REL_REZ_ART" NOT NULL ENABLE);
  ALTER TABLE "COMPANY"."T_REL_REZEPT_ARTIKEL" ADD CONSTRAINT "PK_T_REL_REZEPT_ARTIKEL" PRIMARY KEY ("PK_REL_REZ_ART")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE;
--------------------------------------------------------
--  Constraints for Table T_ABL_ORDNER_PAGE
--------------------------------------------------------

  ALTER TABLE "COMPANY"."T_ABL_ORDNER_PAGE" ADD CONSTRAINT "T_ABL_ORDNER_PAGE_PK" PRIMARY KEY ("PK_ABL_ORDNER_PAGE")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USER01"  ENABLE;
  ALTER TABLE "COMPANY"."T_ABL_ORDNER_PAGE" MODIFY ("PK_ABL_ORDNER_PAGE" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table T_REL_IMP_BEL_BEL
--------------------------------------------------------

  ALTER TABLE "COMPANY"."T_REL_IMP_BEL_BEL" ADD CONSTRAINT "T_REL_IMP_BEL_BEL_PK" PRIMARY KEY ("PK_REL_IMP_BEL_BEL")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USER01"  ENABLE;
  ALTER TABLE "COMPANY"."T_REL_IMP_BEL_BEL" MODIFY ("PK_REL_IMP_BEL_BEL" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table T_STEUER_LOHNSTEUERKARTE
--------------------------------------------------------

  ALTER TABLE "COMPANY"."T_STEUER_LOHNSTEUERKARTE" ADD CONSTRAINT "T_STEUER_LOHNSTEUERKARTE_PK" PRIMARY KEY ("PK_STEUER_LOHNSTEUERKARTE")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USER01"  ENABLE;
  ALTER TABLE "COMPANY"."T_STEUER_LOHNSTEUERKARTE" MODIFY ("PK_STEUER_LOHNSTEUERKARTE" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table KTO_Tagesgeldkonto
--------------------------------------------------------

  ALTER TABLE "COMPANY"."KTO_Tagesgeldkonto" ADD CONSTRAINT "KTO_Tagesgeldkonto_PK" PRIMARY KEY ("ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USER01"  ENABLE;
  ALTER TABLE "COMPANY"."KTO_Tagesgeldkonto" MODIFY ("ID" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table T_REL_FRAGE_LÖS
--------------------------------------------------------

  ALTER TABLE "COMPANY"."T_REL_FRAGE_LÖS" ADD CONSTRAINT "T_REL_FRAGE_LÖS_PK" PRIMARY KEY ("PK_FRAGE_LÖS")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USER01"  ENABLE;
  ALTER TABLE "COMPANY"."T_REL_FRAGE_LÖS" MODIFY ("PK_FRAGE_LÖS" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table T_REL_STEUER_MONAT_BEL
--------------------------------------------------------

  ALTER TABLE "COMPANY"."T_REL_STEUER_MONAT_BEL" ADD CONSTRAINT "T_REL_STEUER_MONAT_BEL_PK" PRIMARY KEY ("PK_REL_BEL_STEUER_MONAT")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USER01"  ENABLE;
  ALTER TABLE "COMPANY"."T_REL_STEUER_MONAT_BEL" MODIFY ("PK_REL_BEL_STEUER_MONAT" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table T_REL_LAGERORT_ARTIKEL
--------------------------------------------------------

  ALTER TABLE "COMPANY"."T_REL_LAGERORT_ARTIKEL" MODIFY ("PK_REL_LAGO_ART" NOT NULL ENABLE);
  ALTER TABLE "COMPANY"."T_REL_LAGERORT_ARTIKEL" ADD CONSTRAINT "PK_T_REL_LAGERORT_ARTIKEL" PRIMARY KEY ("PK_REL_LAGO_ART")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE;
--------------------------------------------------------
--  Constraints for Table T_STEUER_LOHN
--------------------------------------------------------

  ALTER TABLE "COMPANY"."T_STEUER_LOHN" ADD CONSTRAINT "T_STEUER_LOHN_PK" PRIMARY KEY ("PK_STEUER_LOHN")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USER01"  ENABLE;
  ALTER TABLE "COMPANY"."T_STEUER_LOHN" MODIFY ("PK_STEUER_LOHN" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table T_GESCHAEFTSPARTNERTYP
--------------------------------------------------------

  ALTER TABLE "COMPANY"."T_GESCHAEFTSPARTNERTYP" MODIFY ("PK_GESCHAEFTSPARTNERTYP" NOT NULL ENABLE);
  ALTER TABLE "COMPANY"."T_GESCHAEFTSPARTNERTYP" ADD CONSTRAINT "T_GESCHÄFTSPARTNERTYP_PK" PRIMARY KEY ("PK_GESCHAEFTSPARTNERTYP")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE;
--------------------------------------------------------
--  Constraints for Table T_REL_BELEG_PRODUKT
--------------------------------------------------------

  ALTER TABLE "COMPANY"."T_REL_BELEG_PRODUKT" MODIFY ("PK_REL_BEL_PROD" NOT NULL ENABLE);
  ALTER TABLE "COMPANY"."T_REL_BELEG_PRODUKT" ADD CONSTRAINT "PK_T_REL_BELEG_PRODUKT" PRIMARY KEY ("PK_REL_BEL_PROD")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE;
--------------------------------------------------------
--  Constraints for Table DL_IMP
--------------------------------------------------------

  ALTER TABLE "COMPANY"."DL_IMP" ADD CONSTRAINT "DL_IMP_PK" PRIMARY KEY ("ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USER01"  ENABLE;
--------------------------------------------------------
--  Constraints for Table INP_BELEGE_ALL
--------------------------------------------------------

  ALTER TABLE "COMPANY"."INP_BELEGE_ALL" ADD CONSTRAINT "INP_BELEGE_ALL_PK" PRIMARY KEY ("PK_INP_BELEGE_ALL")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USER01"  ENABLE;
  ALTER TABLE "COMPANY"."INP_BELEGE_ALL" MODIFY ("PK_INP_BELEGE_ALL" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table T_ARTIKELBESTANDTEILE
--------------------------------------------------------

  ALTER TABLE "COMPANY"."T_ARTIKELBESTANDTEILE" MODIFY ("PK_ARTIKELBEST" NOT NULL ENABLE);
  ALTER TABLE "COMPANY"."T_ARTIKELBESTANDTEILE" ADD CONSTRAINT "T_ARTIKELBESTANDTEILE_PK" PRIMARY KEY ("PK_ARTIKELBEST")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE;
--------------------------------------------------------
--  Constraints for Table T_BELEGART
--------------------------------------------------------

  ALTER TABLE "COMPANY"."T_BELEGART" MODIFY ("PK_BELEGART" NOT NULL ENABLE);
  ALTER TABLE "COMPANY"."T_BELEGART" ADD CONSTRAINT "T_BELEGART_PK" PRIMARY KEY ("PK_BELEGART")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE;
--------------------------------------------------------
--  Constraints for Table T_REL_ARTIKEL_ARTIKELTYP
--------------------------------------------------------

  ALTER TABLE "COMPANY"."T_REL_ARTIKEL_ARTIKELTYP" MODIFY ("PK_REL_ART_ARTT" NOT NULL ENABLE);
  ALTER TABLE "COMPANY"."T_REL_ARTIKEL_ARTIKELTYP" ADD CONSTRAINT "PK_T_REL_ARTIKEL_ARTIKELTYP" PRIMARY KEY ("PK_REL_ART_ARTT")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE;
--------------------------------------------------------
--  Constraints for Table T_COMP
--------------------------------------------------------

  ALTER TABLE "COMPANY"."T_COMP" MODIFY ("PK_COMP" NOT NULL ENABLE);
  ALTER TABLE "COMPANY"."T_COMP" ADD CONSTRAINT "T_COMP_PK" PRIMARY KEY ("PK_COMP")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE;
--------------------------------------------------------
--  Constraints for Table T_UMSATZART
--------------------------------------------------------

  ALTER TABLE "COMPANY"."T_UMSATZART" ADD CONSTRAINT "PK_T_UMSATZART" PRIMARY KEY ("PK_UMSATZART")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USER01"  ENABLE;
  ALTER TABLE "COMPANY"."T_UMSATZART" MODIFY ("PK_UMSATZART" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table T_REL_GESCHAEFTSP_KUNR
--------------------------------------------------------

  ALTER TABLE "COMPANY"."T_REL_GESCHAEFTSP_KUNR" MODIFY ("PK_REL_GP_KUNR" NOT NULL ENABLE);
  ALTER TABLE "COMPANY"."T_REL_GESCHAEFTSP_KUNR" ADD CONSTRAINT "PK_T_REL_GESCHAEFTSP_KUNR" PRIMARY KEY ("PK_REL_GP_KUNR")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE;
--------------------------------------------------------
--  Constraints for Table T_KONTO_BUCH_KAT
--------------------------------------------------------

  ALTER TABLE "COMPANY"."T_KONTO_BUCH_KAT" ADD CONSTRAINT "T_KONTO_BUCH_KAT_PK" PRIMARY KEY ("PK_KONTO_BUCH_KAT")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USER01"  ENABLE;
  ALTER TABLE "COMPANY"."T_KONTO_BUCH_KAT" MODIFY ("PK_KONTO_BUCH_KAT" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table T_REL_PROJEKT_LOCATION
--------------------------------------------------------

  ALTER TABLE "COMPANY"."T_REL_PROJEKT_LOCATION" ADD CONSTRAINT "PK_T_REL_PROJ_LOCATION" PRIMARY KEY ("PK_REL_PROJ_LOCATION")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USER01"  ENABLE;
  ALTER TABLE "COMPANY"."T_REL_PROJEKT_LOCATION" MODIFY ("PK_REL_PROJ_LOCATION" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table KTO_Girokonto
--------------------------------------------------------

  ALTER TABLE "COMPANY"."KTO_Girokonto" ADD CONSTRAINT "KTO_Girokonto_PK" PRIMARY KEY ("ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USER01"  ENABLE;
  ALTER TABLE "COMPANY"."KTO_Girokonto" MODIFY ("ID" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table T_REL_PROJEKT_ZAHLUNG
--------------------------------------------------------

  ALTER TABLE "COMPANY"."T_REL_PROJEKT_ZAHLUNG" ADD CONSTRAINT "PK_T_REL_PROJ_ZAHLUNG" PRIMARY KEY ("PK_REL_PROJ_ZAHLUNG")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USER01"  ENABLE;
  ALTER TABLE "COMPANY"."T_REL_PROJEKT_ZAHLUNG" MODIFY ("PK_REL_PROJ_ZAHLUNG" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table T_REL_KONTO_AUSZUG_BILD
--------------------------------------------------------

  ALTER TABLE "COMPANY"."T_REL_KONTO_AUSZUG_BILD" ADD CONSTRAINT "T_REL_KONTO_AUSZUG_BILD_PK" PRIMARY KEY ("PK_KONTO_AUSZUG_BILD")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USER01"  ENABLE;
  ALTER TABLE "COMPANY"."T_REL_KONTO_AUSZUG_BILD" MODIFY ("PK_KONTO_AUSZUG_BILD" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table DEPT
--------------------------------------------------------

  ALTER TABLE "COMPANY"."DEPT" ADD PRIMARY KEY ("DEPTNO")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USER01"  ENABLE;
--------------------------------------------------------
--  Constraints for Table EMP
--------------------------------------------------------

  ALTER TABLE "COMPANY"."EMP" ADD PRIMARY KEY ("EMPNO")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USER01"  ENABLE;
  ALTER TABLE "COMPANY"."EMP" MODIFY ("EMPNO" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table T_TEMP_BELEG
--------------------------------------------------------

  ALTER TABLE "COMPANY"."T_TEMP_BELEG" MODIFY ("PK_BELEG" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table T_ORGANISATIONSEINHEIT
--------------------------------------------------------

  ALTER TABLE "COMPANY"."T_ORGANISATIONSEINHEIT" MODIFY ("PK_ORGANISATIONSEINHEIT" NOT NULL ENABLE);
  ALTER TABLE "COMPANY"."T_ORGANISATIONSEINHEIT" ADD CONSTRAINT "PK_T_ORGANISATIONSEINHEIT" PRIMARY KEY ("PK_ORGANISATIONSEINHEIT")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE;
--------------------------------------------------------
--  Constraints for Table T_KONTAKT
--------------------------------------------------------

  ALTER TABLE "COMPANY"."T_KONTAKT" MODIFY ("PK_KONTAKT" NOT NULL ENABLE);
  ALTER TABLE "COMPANY"."T_KONTAKT" ADD CONSTRAINT "PK_T_KONTAKT" PRIMARY KEY ("PK_KONTAKT")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE;
--------------------------------------------------------
--  Constraints for Table T_REL_STEUER_MONAT_RECH
--------------------------------------------------------

  ALTER TABLE "COMPANY"."T_REL_STEUER_MONAT_RECH" ADD CONSTRAINT "T_REL_STEUER_MONAT_RECH_PK" PRIMARY KEY ("PK_REL_STEUER_MONAT_RECH")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USER01"  ENABLE;
  ALTER TABLE "COMPANY"."T_REL_STEUER_MONAT_RECH" MODIFY ("PK_REL_STEUER_MONAT_RECH" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table T_STEUER_SATZ_LEX
--------------------------------------------------------

  ALTER TABLE "COMPANY"."T_STEUER_SATZ_LEX" ADD CONSTRAINT "T_STEUER_SATZ_LEX_PK" PRIMARY KEY ("PK_STEUER_SATZ_LEX")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USER01"  ENABLE;
  ALTER TABLE "COMPANY"."T_STEUER_SATZ_LEX" MODIFY ("PK_STEUER_SATZ_LEX" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table T_BANKKONTO
--------------------------------------------------------

  ALTER TABLE "COMPANY"."T_BANKKONTO" MODIFY ("PK_BANKKONTO" NOT NULL ENABLE);
  ALTER TABLE "COMPANY"."T_BANKKONTO" ADD CONSTRAINT "PK_T_BANKKONTO" PRIMARY KEY ("PK_BANKKONTO")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE;
--------------------------------------------------------
--  Constraints for Table T_BELEGART_GRP
--------------------------------------------------------

  ALTER TABLE "COMPANY"."T_BELEGART_GRP" ADD CONSTRAINT "PK_T_BELEGART_GRP" PRIMARY KEY ("PK_BELEGART_GRP")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USER01"  ENABLE;
  ALTER TABLE "COMPANY"."T_BELEGART_GRP" MODIFY ("PK_BELEGART_GRP" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table T_BELEG
--------------------------------------------------------

  ALTER TABLE "COMPANY"."T_BELEG" MODIFY ("PK_BELEG" NOT NULL ENABLE);
  ALTER TABLE "COMPANY"."T_BELEG" ADD CONSTRAINT "PK_T_BELEG" PRIMARY KEY ("PK_BELEG")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE;
--------------------------------------------------------
--  Constraints for Table T_ARTIKEL
--------------------------------------------------------

  ALTER TABLE "COMPANY"."T_ARTIKEL" MODIFY ("PK_ARTIKEL" NOT NULL ENABLE);
  ALTER TABLE "COMPANY"."T_ARTIKEL" ADD CONSTRAINT "PK_T_ARTIKEL" PRIMARY KEY ("PK_ARTIKEL")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 167 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE;
--------------------------------------------------------
--  Constraints for Table T_BESTELLUNG
--------------------------------------------------------

  ALTER TABLE "COMPANY"."T_BESTELLUNG" MODIFY ("PK_BESTELLUNG" NOT NULL ENABLE);
  ALTER TABLE "COMPANY"."T_BESTELLUNG" ADD CONSTRAINT "T_BESTELLUNG_PK" PRIMARY KEY ("PK_BESTELLUNG")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE;
--------------------------------------------------------
--  Constraints for Table DEMO_ORDERS
--------------------------------------------------------

  ALTER TABLE "COMPANY"."DEMO_ORDERS" ADD CONSTRAINT "DEMO_ORDER_PK" PRIMARY KEY ("ORDER_ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USER01"  ENABLE;
  ALTER TABLE "COMPANY"."DEMO_ORDERS" ADD CONSTRAINT "DEMO_ORDER_TOTAL_MIN" CHECK (order_total >= 0) ENABLE;
  ALTER TABLE "COMPANY"."DEMO_ORDERS" MODIFY ("CUSTOMER_ID" NOT NULL ENABLE);
  ALTER TABLE "COMPANY"."DEMO_ORDERS" MODIFY ("ORDER_ID" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table T_REL_INVENTAR_ZAHLUNG
--------------------------------------------------------

  ALTER TABLE "COMPANY"."T_REL_INVENTAR_ZAHLUNG" ADD CONSTRAINT "PK_T_REL_INVENTAR_ZAHLUNG" PRIMARY KEY ("PK_REL_INV_ZAHLUNG")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USER01"  ENABLE;
  ALTER TABLE "COMPANY"."T_REL_INVENTAR_ZAHLUNG" MODIFY ("PK_REL_INV_ZAHLUNG" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table T_REL_BELEG_ARTIKEL
--------------------------------------------------------

  ALTER TABLE "COMPANY"."T_REL_BELEG_ARTIKEL" MODIFY ("PK_REL_BEL_ARTIKEL" NOT NULL ENABLE);
  ALTER TABLE "COMPANY"."T_REL_BELEG_ARTIKEL" ADD CONSTRAINT "PK_T_REL_BELEG_ARTIKEL" PRIMARY KEY ("PK_REL_BEL_ARTIKEL")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE;
--------------------------------------------------------
--  Constraints for Table T_LAND
--------------------------------------------------------

  ALTER TABLE "COMPANY"."T_LAND" ADD CONSTRAINT "PK_T_LAND" PRIMARY KEY ("PK_LAND")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE;
  ALTER TABLE "COMPANY"."T_LAND" MODIFY ("PK_LAND" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table T_PRODUKT
--------------------------------------------------------

  ALTER TABLE "COMPANY"."T_PRODUKT" MODIFY ("PK_PRODUKT" NOT NULL ENABLE);
  ALTER TABLE "COMPANY"."T_PRODUKT" ADD CONSTRAINT "PK_T_PRODUKT" PRIMARY KEY ("PK_PRODUKT")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE;
--------------------------------------------------------
--  Constraints for Table T_AUFGABE
--------------------------------------------------------

  ALTER TABLE "COMPANY"."T_AUFGABE" MODIFY ("PK_AUFGABE" NOT NULL ENABLE);
  ALTER TABLE "COMPANY"."T_AUFGABE" ADD CONSTRAINT "T_AUFGABE_PK" PRIMARY KEY ("PK_AUFGABE")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE;
--------------------------------------------------------
--  Constraints for Table T_PROJEKT
--------------------------------------------------------

  ALTER TABLE "COMPANY"."T_PROJEKT" MODIFY ("PK_PROJEKT" NOT NULL ENABLE);
  ALTER TABLE "COMPANY"."T_PROJEKT" ADD CONSTRAINT "PK_T_PROJEKT" PRIMARY KEY ("PK_PROJEKT")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE;
--------------------------------------------------------
--  Constraints for Table T_PLZ_ORT
--------------------------------------------------------

  ALTER TABLE "COMPANY"."T_PLZ_ORT" MODIFY ("PK_PLZ_ORT" NOT NULL ENABLE);
  ALTER TABLE "COMPANY"."T_PLZ_ORT" ADD CONSTRAINT "PK_T_PLZ_ORT" PRIMARY KEY ("PK_PLZ_ORT")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE;
--------------------------------------------------------
--  Constraints for Table T_BARGELD
--------------------------------------------------------

  ALTER TABLE "COMPANY"."T_BARGELD" ADD CONSTRAINT "T_BARGELD_PK" PRIMARY KEY ("PK_BARGELD")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USER01"  ENABLE;
  ALTER TABLE "COMPANY"."T_BARGELD" MODIFY ("PK_BARGELD" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table T_KONTENPLAN_KONTEN_KAT_GRP
--------------------------------------------------------

  ALTER TABLE "COMPANY"."T_KONTENPLAN_KONTEN_KAT_GRP" ADD CONSTRAINT "T_KONTENPLAN_KONTEN_KAT_GR_PK" PRIMARY KEY ("PK_KONTENPLAN_KONTEN_KAT_GRP")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USER01"  ENABLE;
  ALTER TABLE "COMPANY"."T_KONTENPLAN_KONTEN_KAT_GRP" MODIFY ("PK_KONTENPLAN_KONTEN_KAT_GRP" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table T_TERMIN
--------------------------------------------------------

  ALTER TABLE "COMPANY"."T_TERMIN" MODIFY ("PK_TERMIN" NOT NULL ENABLE);
  ALTER TABLE "COMPANY"."T_TERMIN" ADD CONSTRAINT "T_TERMIN_PK" PRIMARY KEY ("PK_TERMIN")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE;
--------------------------------------------------------
--  Constraints for Table T_ARBEITSTAGE
--------------------------------------------------------

  ALTER TABLE "COMPANY"."T_ARBEITSTAGE" MODIFY ("PK_ARBEITSTAGE" NOT NULL ENABLE);
  ALTER TABLE "COMPANY"."T_ARBEITSTAGE" ADD CONSTRAINT "PK_T_ARBEITSTAGE" PRIMARY KEY ("PK_ARBEITSTAGE")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE;
--------------------------------------------------------
--  Constraints for Table T_GESCHAEFTSPARTNER
--------------------------------------------------------

  ALTER TABLE "COMPANY"."T_GESCHAEFTSPARTNER" MODIFY ("PK_GESCHAEFTSPARTNER" NOT NULL ENABLE);
  ALTER TABLE "COMPANY"."T_GESCHAEFTSPARTNER" ADD CONSTRAINT "PK_GESCHÄFTSPARTNER" PRIMARY KEY ("PK_GESCHAEFTSPARTNER")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE;
--------------------------------------------------------
--  Constraints for Table IMP_BA_BUSSGELDER
--------------------------------------------------------

  ALTER TABLE "COMPANY"."IMP_BA_BUSSGELDER" ADD CONSTRAINT "IMP_BA_BUSSGELDER_PK" PRIMARY KEY ("PK_IMP_BA_BUSSGELDER")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USER01"  ENABLE;
  ALTER TABLE "COMPANY"."IMP_BA_BUSSGELDER" MODIFY ("PK_IMP_BA_BUSSGELDER" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table T_MENGENEINHEIT
--------------------------------------------------------

  ALTER TABLE "COMPANY"."T_MENGENEINHEIT" MODIFY ("PK_MENGENEINHEIT" NOT NULL ENABLE);
  ALTER TABLE "COMPANY"."T_MENGENEINHEIT" MODIFY ("MENGENEINHEIT" NOT NULL ENABLE);
  ALTER TABLE "COMPANY"."T_MENGENEINHEIT" ADD CONSTRAINT "T_MENGENEINHEIT_PK" PRIMARY KEY ("PK_MENGENEINHEIT")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE;
--------------------------------------------------------
--  Constraints for Table T_VERBRAUCHSMATERIAL
--------------------------------------------------------

  ALTER TABLE "COMPANY"."T_VERBRAUCHSMATERIAL" MODIFY ("PK_VERBRAUCHSMATERIAL" NOT NULL ENABLE);
  ALTER TABLE "COMPANY"."T_VERBRAUCHSMATERIAL" ADD CONSTRAINT "T_VERBRAUCHSMATERIAL_PK" PRIMARY KEY ("PK_VERBRAUCHSMATERIAL")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE;
--------------------------------------------------------
--  Constraints for Table IMP_BA_CARMIETE
--------------------------------------------------------

  ALTER TABLE "COMPANY"."IMP_BA_CARMIETE" ADD CONSTRAINT "IMP_BA_CARMIETE_PK" PRIMARY KEY ("PK_IMP_BA_CARMIETE")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USER01"  ENABLE;
  ALTER TABLE "COMPANY"."IMP_BA_CARMIETE" MODIFY ("PK_IMP_BA_CARMIETE" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table T_KONTO_AUSZUG
--------------------------------------------------------

  ALTER TABLE "COMPANY"."T_KONTO_AUSZUG" ADD CONSTRAINT "T_KONTO_AUSZUG_PK" PRIMARY KEY ("PK_KONTO_AUSZUG")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USER01"  ENABLE;
  ALTER TABLE "COMPANY"."T_KONTO_AUSZUG" MODIFY ("PK_KONTO_AUSZUG" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table T_STD
--------------------------------------------------------

  ALTER TABLE "COMPANY"."T_STD" MODIFY ("PK_STD" NOT NULL ENABLE);
  ALTER TABLE "COMPANY"."T_STD" ADD CONSTRAINT "T_STD_PK" PRIMARY KEY ("PK_STD")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE;
--------------------------------------------------------
--  Constraints for Table T_STD_GROUP
--------------------------------------------------------

  ALTER TABLE "COMPANY"."T_STD_GROUP" MODIFY ("PK_STD_GROUP" NOT NULL ENABLE);
  ALTER TABLE "COMPANY"."T_STD_GROUP" ADD CONSTRAINT "PK_T_STD_GROUP" PRIMARY KEY ("PK_STD_GROUP")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE;
--------------------------------------------------------
--  Constraints for Table T_LAGERORT
--------------------------------------------------------

  ALTER TABLE "COMPANY"."T_LAGERORT" MODIFY ("PK_LAGERORT" NOT NULL ENABLE);
  ALTER TABLE "COMPANY"."T_LAGERORT" ADD CONSTRAINT "PK_T_LAGERORT" PRIMARY KEY ("PK_LAGERORT")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE;
--------------------------------------------------------
--  Constraints for Table T_REL_INV_VERBRAUCHSMAT
--------------------------------------------------------

  ALTER TABLE "COMPANY"."T_REL_INV_VERBRAUCHSMAT" MODIFY ("PK_REL_INV_VERBRAUCHSMAT" NOT NULL ENABLE);
  ALTER TABLE "COMPANY"."T_REL_INV_VERBRAUCHSMAT" ADD CONSTRAINT "T_REL_INV_VERBRAUCHSMAT_PK" PRIMARY KEY ("PK_REL_INV_VERBRAUCHSMAT")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE;
--------------------------------------------------------
--  Constraints for Table T_BELEGSEL
--------------------------------------------------------

  ALTER TABLE "COMPANY"."T_BELEGSEL" ADD CONSTRAINT "T_BELEGSEL_PK" PRIMARY KEY ("PK_BELEGSEL")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USER01"  ENABLE;
  ALTER TABLE "COMPANY"."T_BELEGSEL" MODIFY ("PK_BELEGSEL" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table T_REL_STEUER_SATZ_GÜLT
--------------------------------------------------------

  ALTER TABLE "COMPANY"."T_REL_STEUER_SATZ_GÜLT" ADD CONSTRAINT "T_REL_STEUER_SATZ_GÜLT_PK" PRIMARY KEY ("PK_REL_STEUER_SATZ_GÜLT")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USER01"  ENABLE;
  ALTER TABLE "COMPANY"."T_REL_STEUER_SATZ_GÜLT" MODIFY ("PK_REL_STEUER_SATZ_GÜLT" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table T_WAEHRUNG
--------------------------------------------------------

  ALTER TABLE "COMPANY"."T_WAEHRUNG" ADD CONSTRAINT "T_WAEHRUNG_PK" PRIMARY KEY ("PK_WAEHRUNG")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USER01"  ENABLE;
  ALTER TABLE "COMPANY"."T_WAEHRUNG" MODIFY ("PK_WAEHRUNG" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table T_REL_BEL_VERBRAUCHSMAT
--------------------------------------------------------

  ALTER TABLE "COMPANY"."T_REL_BEL_VERBRAUCHSMAT" MODIFY ("PK_REL_BEL_VERBRAUCHSMAT" NOT NULL ENABLE);
  ALTER TABLE "COMPANY"."T_REL_BEL_VERBRAUCHSMAT" ADD CONSTRAINT "T_REL_BEL_VERBRAUCHSMAT_PK" PRIMARY KEY ("PK_REL_BEL_VERBRAUCHSMAT")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE;
--------------------------------------------------------
--  Constraints for Table T_LOCATION
--------------------------------------------------------

  ALTER TABLE "COMPANY"."T_LOCATION" MODIFY ("PK_LOCATION" NOT NULL ENABLE);
  ALTER TABLE "COMPANY"."T_LOCATION" ADD CONSTRAINT "PK_T_LOCATION" PRIMARY KEY ("PK_LOCATION")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE;
--------------------------------------------------------
--  Constraints for Table T_REL_BELEGART_GRP
--------------------------------------------------------

  ALTER TABLE "COMPANY"."T_REL_BELEGART_GRP" ADD CONSTRAINT "PK_T_REL_BELEGART_GRP" PRIMARY KEY ("PK_REL_BELEGART_GRP")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USER01"  ENABLE;
  ALTER TABLE "COMPANY"."T_REL_BELEGART_GRP" MODIFY ("PK_REL_BELEGART_GRP" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table IMP_TEL_O2
--------------------------------------------------------

  ALTER TABLE "COMPANY"."IMP_TEL_O2" ADD CONSTRAINT "IMP_TEL_O2_PK" PRIMARY KEY ("PK_IMP_TEL_O2")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USER01"  ENABLE;
  ALTER TABLE "COMPANY"."IMP_TEL_O2" MODIFY ("PK_IMP_TEL_O2" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table T_ARBEITSZEITEN
--------------------------------------------------------

  ALTER TABLE "COMPANY"."T_ARBEITSZEITEN" MODIFY ("PK_ARBEITSZEIT" NOT NULL ENABLE);
  ALTER TABLE "COMPANY"."T_ARBEITSZEITEN" ADD CONSTRAINT "T_ARBEITSZEITEN_PK" PRIMARY KEY ("PK_ARBEITSZEIT")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE;
--------------------------------------------------------
--  Constraints for Table T_FARBE
--------------------------------------------------------

  ALTER TABLE "COMPANY"."T_FARBE" MODIFY ("PK_FARBE" NOT NULL ENABLE);
  ALTER TABLE "COMPANY"."T_FARBE" ADD CONSTRAINT "PK_T_FARBE" PRIMARY KEY ("PK_FARBE")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE;
--------------------------------------------------------
--  Constraints for Table T_KONTROLLE
--------------------------------------------------------

  ALTER TABLE "COMPANY"."T_KONTROLLE" ADD CONSTRAINT "T_KONTROLLE_PK" PRIMARY KEY ("PK_KONTROLLE")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USER01"  ENABLE;
  ALTER TABLE "COMPANY"."T_KONTROLLE" MODIFY ("PK_KONTROLLE" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table T_KONTENPLAN_KONTEN_GRP
--------------------------------------------------------

  ALTER TABLE "COMPANY"."T_KONTENPLAN_KONTEN_GRP" ADD CONSTRAINT "T_KONTENPLAN_KONTEN_GRP_PK" PRIMARY KEY ("PK_KONTENPLAN_KONTEN_GRP")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USER01"  ENABLE;
  ALTER TABLE "COMPANY"."T_KONTENPLAN_KONTEN_GRP" MODIFY ("PK_KONTENPLAN_KONTEN_GRP" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table IMP_BA_ELEKTRONIK
--------------------------------------------------------

  ALTER TABLE "COMPANY"."IMP_BA_ELEKTRONIK" ADD CONSTRAINT "IMP_BA_ELEKTRONIK_PK" PRIMARY KEY ("PK_IMP_BA_ELEKTRONIK")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USER01"  ENABLE;
  ALTER TABLE "COMPANY"."IMP_BA_ELEKTRONIK" MODIFY ("PK_IMP_BA_ELEKTRONIK" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table T_REL_KONTO_AUSZUG_GIR
--------------------------------------------------------

  ALTER TABLE "COMPANY"."T_REL_KONTO_AUSZUG_GIR" ADD CONSTRAINT "T_REL_KONTO_AUSZUG_GIR_PK" PRIMARY KEY ("PK_REL_KONTO_AUSZUG_GIR")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USER01"  ENABLE;
  ALTER TABLE "COMPANY"."T_REL_KONTO_AUSZUG_GIR" MODIFY ("PK_REL_KONTO_AUSZUG_GIR" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table T_STEUER_MONAT
--------------------------------------------------------

  ALTER TABLE "COMPANY"."T_STEUER_MONAT" ADD CONSTRAINT "T_STEUER_MONAT_PK" PRIMARY KEY ("PK_STEUER_MONAT")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USER01"  ENABLE;
  ALTER TABLE "COMPANY"."T_STEUER_MONAT" MODIFY ("PK_STEUER_MONAT" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table T_EINSENDEAUFGABENSTATUS
--------------------------------------------------------

  ALTER TABLE "COMPANY"."T_EINSENDEAUFGABENSTATUS" MODIFY ("PK_EINSENDEAUFG_STAT" NOT NULL ENABLE);
  ALTER TABLE "COMPANY"."T_EINSENDEAUFGABENSTATUS" ADD CONSTRAINT "T_EINSENDEAUFGABENSTATUS_PK" PRIMARY KEY ("PK_EINSENDEAUFG_STAT")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE;
--------------------------------------------------------
--  Constraints for Table T_REL_KONT_BUCH_KONT_BUCH
--------------------------------------------------------

  ALTER TABLE "COMPANY"."T_REL_KONT_BUCH_KONT_BUCH" ADD CONSTRAINT "T_REL_KONT_BUCH_KONT_BUCH_PK" PRIMARY KEY ("PK_REL_KONT_BUCH_KONT_BUCH")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USER01"  ENABLE;
  ALTER TABLE "COMPANY"."T_REL_KONT_BUCH_KONT_BUCH" MODIFY ("PK_REL_KONT_BUCH_KONT_BUCH" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table T_PERSON
--------------------------------------------------------

  ALTER TABLE "COMPANY"."T_PERSON" MODIFY ("PK_PERSON" NOT NULL ENABLE);
  ALTER TABLE "COMPANY"."T_PERSON" ADD CONSTRAINT "T_PERSON_PK" PRIMARY KEY ("PK_PERSON")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE;
--------------------------------------------------------
--  Constraints for Table T_FREMDWAEHRUNG
--------------------------------------------------------

  ALTER TABLE "COMPANY"."T_FREMDWAEHRUNG" ADD CONSTRAINT "PK_T_FREMDWAEHRUNG" PRIMARY KEY ("PK_FREMDWAEHRUNG")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE;
  ALTER TABLE "COMPANY"."T_FREMDWAEHRUNG" MODIFY ("PK_FREMDWAEHRUNG" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table T_REL_KONTAKTPERSON_ADRESSE
--------------------------------------------------------

  ALTER TABLE "COMPANY"."T_REL_KONTAKTPERSON_ADRESSE" MODIFY ("PK_REL_KONTP_ADR" NOT NULL ENABLE);
  ALTER TABLE "COMPANY"."T_REL_KONTAKTPERSON_ADRESSE" ADD CONSTRAINT "PK_T_REL_KONTAKTPERSON_ADRESS" PRIMARY KEY ("PK_REL_KONTP_ADR")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE;
--------------------------------------------------------
--  Constraints for Table T_REL_BELEGPOS_ARTIKEL
--------------------------------------------------------

  ALTER TABLE "COMPANY"."T_REL_BELEGPOS_ARTIKEL" MODIFY ("PK_REL_BELPOS_ARTIKEL" NOT NULL ENABLE);
  ALTER TABLE "COMPANY"."T_REL_BELEGPOS_ARTIKEL" ADD CONSTRAINT "PK_T_REL_BELEGPOS_ARTIKEL" PRIMARY KEY ("PK_REL_BELPOS_ARTIKEL")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE;
--------------------------------------------------------
--  Constraints for Table DEMO_CUSTOMERS
--------------------------------------------------------

  ALTER TABLE "COMPANY"."DEMO_CUSTOMERS" ADD CONSTRAINT "DEMO_CUSTOMERS_UK" UNIQUE ("CUST_FIRST_NAME", "CUST_LAST_NAME")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USER01"  ENABLE;
  ALTER TABLE "COMPANY"."DEMO_CUSTOMERS" ADD CONSTRAINT "DEMO_CUSTOMERS_PK" PRIMARY KEY ("CUSTOMER_ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USER01"  ENABLE;
  ALTER TABLE "COMPANY"."DEMO_CUSTOMERS" ADD CONSTRAINT "DEMO_CUST_CREDIT_LIMIT_MAX" CHECK (credit_limit <= 5000) ENABLE;
  ALTER TABLE "COMPANY"."DEMO_CUSTOMERS" MODIFY ("CUST_LAST_NAME" NOT NULL ENABLE);
  ALTER TABLE "COMPANY"."DEMO_CUSTOMERS" MODIFY ("CUST_FIRST_NAME" NOT NULL ENABLE);
  ALTER TABLE "COMPANY"."DEMO_CUSTOMERS" MODIFY ("CUSTOMER_ID" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table IMP_BA_OEFFENTL_TICKETS
--------------------------------------------------------

  ALTER TABLE "COMPANY"."IMP_BA_OEFFENTL_TICKETS" ADD CONSTRAINT "IMP_BA_OEFFENTL_TICKETS_PK" PRIMARY KEY ("PK_IMP_BA_OEFFENTL_TICKETS")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USER01"  ENABLE;
  ALTER TABLE "COMPANY"."IMP_BA_OEFFENTL_TICKETS" MODIFY ("PK_IMP_BA_OEFFENTL_TICKETS" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table IMP_BA_ALLG_BEL
--------------------------------------------------------

  ALTER TABLE "COMPANY"."IMP_BA_ALLG_BEL" ADD CONSTRAINT "IMP_BA_ALLG_BEL_PK" PRIMARY KEY ("PK_IMP_BA_ALLG_BEL")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USER01"  ENABLE;
  ALTER TABLE "COMPANY"."IMP_BA_ALLG_BEL" MODIFY ("PK_IMP_BA_ALLG_BEL" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table T_STEUERSATZ
--------------------------------------------------------

  ALTER TABLE "COMPANY"."T_STEUERSATZ" MODIFY ("PK_STEUERSATZ" NOT NULL ENABLE);
  ALTER TABLE "COMPANY"."T_STEUERSATZ" ADD CONSTRAINT "T_STEUERSATZ_PK" PRIMARY KEY ("PK_STEUERSATZ")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE;
--------------------------------------------------------
--  Constraints for Table T_REL_PRODUKT_ENTNAHME
--------------------------------------------------------

  ALTER TABLE "COMPANY"."T_REL_PRODUKT_ENTNAHME" MODIFY ("PK_REL_PROD_ENT" NOT NULL ENABLE);
  ALTER TABLE "COMPANY"."T_REL_PRODUKT_ENTNAHME" ADD CONSTRAINT "PK_T_REL_PRODUKT_ENTNAHME" PRIMARY KEY ("PK_REL_PROD_ENT")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE;
--------------------------------------------------------
--  Constraints for Table IMP_BA_GRENZBELEGE
--------------------------------------------------------

  ALTER TABLE "COMPANY"."IMP_BA_GRENZBELEGE" ADD CONSTRAINT "IMP_BA_GRENZBELEGE_PK" PRIMARY KEY ("PK_IMP_BA_GRENZBELEGE")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USER01"  ENABLE;
  ALTER TABLE "COMPANY"."IMP_BA_GRENZBELEGE" MODIFY ("PK_IMP_BA_GRENZBELEGE" NOT NULL ENABLE);
--------------------------------------------------------
--  Ref Constraints for Table DEMO_ORDER_ITEMS
--------------------------------------------------------

  ALTER TABLE "COMPANY"."DEMO_ORDER_ITEMS" ADD CONSTRAINT "DEMO_ORDER_ITEMS_FK" FOREIGN KEY ("ORDER_ID")
	  REFERENCES "COMPANY"."DEMO_ORDERS" ("ORDER_ID") ON DELETE CASCADE ENABLE;
  ALTER TABLE "COMPANY"."DEMO_ORDER_ITEMS" ADD CONSTRAINT "DEMO_ORDER_ITEMS_PRODUCT_ID_FK" FOREIGN KEY ("PRODUCT_ID")
	  REFERENCES "COMPANY"."DEMO_PRODUCT_INFO" ("PRODUCT_ID") ON DELETE CASCADE ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table DEMO_ORDERS
--------------------------------------------------------

  ALTER TABLE "COMPANY"."DEMO_ORDERS" ADD CONSTRAINT "DEMO_ORDERS_CUSTOMER_ID_FK" FOREIGN KEY ("CUSTOMER_ID")
	  REFERENCES "COMPANY"."DEMO_CUSTOMERS" ("CUSTOMER_ID") ON DELETE CASCADE ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table EMP
--------------------------------------------------------

  ALTER TABLE "COMPANY"."EMP" ADD FOREIGN KEY ("MGR")
	  REFERENCES "COMPANY"."EMP" ("EMPNO") ENABLE;
  ALTER TABLE "COMPANY"."EMP" ADD FOREIGN KEY ("DEPTNO")
	  REFERENCES "COMPANY"."DEPT" ("DEPTNO") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table T_ABL_ORDNER_PAGE
--------------------------------------------------------

  ALTER TABLE "COMPANY"."T_ABL_ORDNER_PAGE" ADD CONSTRAINT "T_ABL_ORDNER_PAGE_FK1" FOREIGN KEY ("FK_ABL_ORDNER")
	  REFERENCES "COMPANY"."T_ABL_ORDNER" ("PK_ABL_ORDNER") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table T_ADRESSE
--------------------------------------------------------

  ALTER TABLE "COMPANY"."T_ADRESSE" ADD CONSTRAINT "T_ADRESSE_ORT" FOREIGN KEY ("FK_PLZ_ORT")
	  REFERENCES "COMPANY"."T_PLZ_ORT" ("PK_PLZ_ORT") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table T_ARTIKEL
--------------------------------------------------------

  ALTER TABLE "COMPANY"."T_ARTIKEL" ADD CONSTRAINT "FK_T_ARTIKEL_BD" FOREIGN KEY ("FK_BUENDELUNG")
	  REFERENCES "COMPANY"."T_BUENDELUNG" ("PK_BUENDELUNG") ENABLE;
  ALTER TABLE "COMPANY"."T_ARTIKEL" ADD CONSTRAINT "FK_T_ARTIKEL_PKT" FOREIGN KEY ("FK_PACKUNGSTYP")
	  REFERENCES "COMPANY"."T_PACKUNGSTYP" ("PK_PACKKUNGSTYP") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table T_ARTIKELBESTANDTEILE
--------------------------------------------------------

  ALTER TABLE "COMPANY"."T_ARTIKELBESTANDTEILE" ADD CONSTRAINT "T_ARTIKELBESTANDTEILE_PKT" FOREIGN KEY ("FK_PACKUNGSTYP")
	  REFERENCES "COMPANY"."T_PACKUNGSTYP" ("PK_PACKKUNGSTYP") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table T_ARTIKELBESTANDTEILTYP
--------------------------------------------------------

  ALTER TABLE "COMPANY"."T_ARTIKELBESTANDTEILTYP" ADD CONSTRAINT "FK_T_ARTIKELBESTTYP_ART" FOREIGN KEY ("FK_ARTIKELTYP")
	  REFERENCES "COMPANY"."T_ARTIKELTYP" ("PK_ARTIKELTYP") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table T_ARTIKELTYP
--------------------------------------------------------

  ALTER TABLE "COMPANY"."T_ARTIKELTYP" ADD CONSTRAINT "FK_ARTIKELTYP_HAT" FOREIGN KEY ("FK_HAUPTTYP")
	  REFERENCES "COMPANY"."T_ARTIKELTYP" ("PK_ARTIKELTYP") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table T_BANK
--------------------------------------------------------

  ALTER TABLE "COMPANY"."T_BANK" ADD CONSTRAINT "FK_T_BANK_HPB" FOREIGN KEY ("FK_HAUPTBANK")
	  REFERENCES "COMPANY"."T_BANK" ("PK_BANK") ENABLE;
  ALTER TABLE "COMPANY"."T_BANK" ADD CONSTRAINT "FK_T_BANK_ORT" FOREIGN KEY ("PK_BANK")
	  REFERENCES "COMPANY"."T_ORT" ("PK_ORT") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table T_BANKKONTO
--------------------------------------------------------

  ALTER TABLE "COMPANY"."T_BANKKONTO" ADD CONSTRAINT "FK_T_BANKKONTO_BANK" FOREIGN KEY ("PK_BANKKONTO")
	  REFERENCES "COMPANY"."T_BANK" ("PK_BANK") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table T_BELEGPOSITION
--------------------------------------------------------

  ALTER TABLE "COMPANY"."T_BELEGPOSITION" ADD CONSTRAINT "FK_T_BELEGPOSITION_BEL" FOREIGN KEY ("FK_BELEG")
	  REFERENCES "COMPANY"."T_BELEG" ("PK_BELEG") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table T_EINSENDEAUFGABE
--------------------------------------------------------

  ALTER TABLE "COMPANY"."T_EINSENDEAUFGABE" ADD CONSTRAINT "FK_T_EINSENDEAUFGABE_BU" FOREIGN KEY ("FK_BUCH")
	  REFERENCES "COMPANY"."T_BUCH" ("BK_BUCH") ENABLE;
  ALTER TABLE "COMPANY"."T_EINSENDEAUFGABE" ADD CONSTRAINT "FK_T_EINSENDEAUFGABE_ST" FOREIGN KEY ("FK_STATUS")
	  REFERENCES "COMPANY"."T_EINSENDEAUFGABENSTATUS" ("PK_EINSENDEAUFG_STAT") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table T_FARBE
--------------------------------------------------------

  ALTER TABLE "COMPANY"."T_FARBE" ADD CONSTRAINT "FK_T_FARBE_HF" FOREIGN KEY ("FK_HAUPTFARBE")
	  REFERENCES "COMPANY"."T_FARBE" ("PK_FARBE") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table T_GESCHAEFTSPARTNER
--------------------------------------------------------

  ALTER TABLE "COMPANY"."T_GESCHAEFTSPARTNER" ADD CONSTRAINT "FK_T_GESCHAEFTSPARTNER_GPT" FOREIGN KEY ("FK_GESCHAEFTSPARTNERTYP")
	  REFERENCES "COMPANY"."T_GESCHAEFTSPARTNERTYP" ("PK_GESCHAEFTSPARTNERTYP") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table T_LAGERORT
--------------------------------------------------------

  ALTER TABLE "COMPANY"."T_LAGERORT" ADD CONSTRAINT "FK_T_LAGERORT_LOC" FOREIGN KEY ("FK_LOCATION")
	  REFERENCES "COMPANY"."T_LOCATION" ("PK_LOCATION") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table T_LEHRGANG
--------------------------------------------------------

  ALTER TABLE "COMPANY"."T_LEHRGANG" ADD CONSTRAINT "FK_T_LEHRGANG_GP" FOREIGN KEY ("FK_UNIVERSITÄT")
	  REFERENCES "COMPANY"."T_GESCHAEFTSPARTNER" ("PK_GESCHAEFTSPARTNER") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table T_LOCATION
--------------------------------------------------------

  ALTER TABLE "COMPANY"."T_LOCATION" ADD CONSTRAINT "FK_T_LOCATION_ADDR" FOREIGN KEY ("FK_ADRESSE")
	  REFERENCES "COMPANY"."T_ADRESSE" ("PK_ADRESSE") ENABLE;
  ALTER TABLE "COMPANY"."T_LOCATION" ADD CONSTRAINT "FK_T_LOCATION_LOC_T" FOREIGN KEY ("FK_LOCATION_TYPE")
	  REFERENCES "COMPANY"."T_LOCATION_TYPE" ("PK_LOCATION_TYPE") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table T_ORGANISATIONSEINHEIT
--------------------------------------------------------

  ALTER TABLE "COMPANY"."T_ORGANISATIONSEINHEIT" ADD CONSTRAINT "FK_T_ORGANISATIONSEINHEIT_GP" FOREIGN KEY ("FK_GESCHAEFTSPARTNER")
	  REFERENCES "COMPANY"."T_GESCHAEFTSPARTNER" ("PK_GESCHAEFTSPARTNER") ENABLE;
  ALTER TABLE "COMPANY"."T_ORGANISATIONSEINHEIT" ADD CONSTRAINT "FK_T_ORGANISATIONSEINHEIT_HOU" FOREIGN KEY ("FK_PARENT_ORG_UNIT")
	  REFERENCES "COMPANY"."T_ORGANISATIONSEINHEIT" ("PK_ORGANISATIONSEINHEIT") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table T_PACKUNGSTYP
--------------------------------------------------------

  ALTER TABLE "COMPANY"."T_PACKUNGSTYP" ADD CONSTRAINT "T_PACKUNGSTYP_BD_1" FOREIGN KEY ("FK_BUENDELUNG_1")
	  REFERENCES "COMPANY"."T_BUENDELUNG" ("PK_BUENDELUNG") ENABLE;
  ALTER TABLE "COMPANY"."T_PACKUNGSTYP" ADD CONSTRAINT "T_PACKUNGSTYP_BD_2" FOREIGN KEY ("FK_BUENDELUNG_2")
	  REFERENCES "COMPANY"."T_BUENDELUNG" ("PK_BUENDELUNG") ENABLE;
  ALTER TABLE "COMPANY"."T_PACKUNGSTYP" ADD CONSTRAINT "T_PACKUNGSTYP_BD_3" FOREIGN KEY ("FK_BUENDELUNG_3")
	  REFERENCES "COMPANY"."T_BUENDELUNG" ("PK_BUENDELUNG") ENABLE;
  ALTER TABLE "COMPANY"."T_PACKUNGSTYP" ADD CONSTRAINT "T_PACKUNGSTYP_BD_4" FOREIGN KEY ("FK_BUENDELUNG_4")
	  REFERENCES "COMPANY"."T_BUENDELUNG" ("PK_BUENDELUNG") ENABLE;
  ALTER TABLE "COMPANY"."T_PACKUNGSTYP" ADD CONSTRAINT "T_PACKUNGSTYP_BD_5" FOREIGN KEY ("FK_BUENDELUNG_5")
	  REFERENCES "COMPANY"."T_BUENDELUNG" ("PK_BUENDELUNG") ENABLE;
  ALTER TABLE "COMPANY"."T_PACKUNGSTYP" ADD CONSTRAINT "T_PACKUNGSTYP_FK1" FOREIGN KEY ("FK_HAUPTPACKUNGSTYP")
	  REFERENCES "COMPANY"."T_PACKUNGSTYP" ("PK_PACKKUNGSTYP") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table T_PROJEKT
--------------------------------------------------------

  ALTER TABLE "COMPANY"."T_PROJEKT" ADD CONSTRAINT "FK_T_PROJEKT_AG" FOREIGN KEY ("FK_AUFTRAGGEBER")
	  REFERENCES "COMPANY"."T_GESCHAEFTSPARTNER" ("PK_GESCHAEFTSPARTNER") ENABLE;
  ALTER TABLE "COMPANY"."T_PROJEKT" ADD CONSTRAINT "FK_T_PROJEKT_PP1" FOREIGN KEY ("FK_PROJEKTPARTNER_1")
	  REFERENCES "COMPANY"."T_GESCHAEFTSPARTNER" ("PK_GESCHAEFTSPARTNER") ENABLE;
  ALTER TABLE "COMPANY"."T_PROJEKT" ADD CONSTRAINT "FK_T_PROJEKT_PP2" FOREIGN KEY ("FK_PROJEKTPARTNER_2")
	  REFERENCES "COMPANY"."T_GESCHAEFTSPARTNER" ("PK_GESCHAEFTSPARTNER") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table T_PRUEFUNG
--------------------------------------------------------

  ALTER TABLE "COMPANY"."T_PRUEFUNG" ADD CONSTRAINT "FK_T_PRUEFUNG_ADDR" FOREIGN KEY ("FK_ADRESSE")
	  REFERENCES "COMPANY"."T_ADRESSE" ("PK_ADRESSE") ENABLE;
  ALTER TABLE "COMPANY"."T_PRUEFUNG" ADD CONSTRAINT "FK_T_PRUEFUNG_AT" FOREIGN KEY ("FK_ABSCHLUSSTYP")
	  REFERENCES "COMPANY"."T_ABSCHLUSSTYP" ("PK_ABSCHLUSSTYP") ENABLE;
  ALTER TABLE "COMPANY"."T_PRUEFUNG" ADD CONSTRAINT "FK_T_PRUEFUNG_LEHRG" FOREIGN KEY ("FK_LEHRGANG")
	  REFERENCES "COMPANY"."T_LEHRGANG" ("PK_LEHRGANG") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table T_QUELLE
--------------------------------------------------------

  ALTER TABLE "COMPANY"."T_QUELLE" ADD CONSTRAINT "FK_T_QUELLE_BU" FOREIGN KEY ("FK_BUCH")
	  REFERENCES "COMPANY"."T_BUCH" ("BK_BUCH") ENABLE;
  ALTER TABLE "COMPANY"."T_QUELLE" ADD CONSTRAINT "FK_T_QUELLE_KT" FOREIGN KEY ("PK_QUELLE")
	  REFERENCES "COMPANY"."T_KONTAKT" ("PK_KONTAKT") ENABLE;
  ALTER TABLE "COMPANY"."T_QUELLE" ADD CONSTRAINT "FK_T_QUELLE_QT" FOREIGN KEY ("FK_QUELLENTYP")
	  REFERENCES "COMPANY"."T_QUELLENTYP" ("PK_QUELLENTYP") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table T_RECHNUNG
--------------------------------------------------------

  ALTER TABLE "COMPANY"."T_RECHNUNG" ADD CONSTRAINT "FK_T_RECHNUNG_PROJ" FOREIGN KEY ("FK_PROJEKT")
	  REFERENCES "COMPANY"."T_PROJEKT" ("PK_PROJEKT") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table T_REL_ARTIKEL_ARTIKELTYP
--------------------------------------------------------

  ALTER TABLE "COMPANY"."T_REL_ARTIKEL_ARTIKELTYP" ADD CONSTRAINT "T_REL_ARTT_ART" FOREIGN KEY ("FK_ARTIKEL")
	  REFERENCES "COMPANY"."T_ARTIKEL" ("PK_ARTIKEL") ENABLE;
  ALTER TABLE "COMPANY"."T_REL_ARTIKEL_ARTIKELTYP" ADD CONSTRAINT "T_REL_ARTT_ARTT" FOREIGN KEY ("FK_ARTIKELTYP")
	  REFERENCES "COMPANY"."T_ARTIKELTYP" ("PK_ARTIKELTYP") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table T_REL_ARTIKELTYP_ARTIKELTYP
--------------------------------------------------------

  ALTER TABLE "COMPANY"."T_REL_ARTIKELTYP_ARTIKELTYP" ADD CONSTRAINT "T_REL_ARTIKELTYP_ARTIKELT_FK1" FOREIGN KEY ("FK_ARTIKELTYP_MAIN")
	  REFERENCES "COMPANY"."T_ARTIKELTYP" ("PK_ARTIKELTYP") ENABLE;
  ALTER TABLE "COMPANY"."T_REL_ARTIKELTYP_ARTIKELTYP" ADD CONSTRAINT "T_REL_ARTIKELTYP_ARTIKELT_FK2" FOREIGN KEY ("FK_ARTIKELTYP_SUB")
	  REFERENCES "COMPANY"."T_ARTIKELTYP" ("PK_ARTIKELTYP") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table T_REL_BELEG_ARTIKEL
--------------------------------------------------------

  ALTER TABLE "COMPANY"."T_REL_BELEG_ARTIKEL" ADD CONSTRAINT "FK_T_REL_BELEG_ARTIKEL_BEL" FOREIGN KEY ("FK_BELEG")
	  REFERENCES "COMPANY"."T_BELEG" ("PK_BELEG") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table T_REL_BELEG_INVENTAR
--------------------------------------------------------

  ALTER TABLE "COMPANY"."T_REL_BELEG_INVENTAR" ADD CONSTRAINT "FK_T_REL_BELEG_INVENTAR_BEL" FOREIGN KEY ("FK_BELEG")
	  REFERENCES "COMPANY"."T_BELEG" ("PK_BELEG") ON DELETE CASCADE ENABLE;
  ALTER TABLE "COMPANY"."T_REL_BELEG_INVENTAR" ADD CONSTRAINT "FK_T_REL_BELEG_INVENTAR_INV" FOREIGN KEY ("FK_INVENTAR")
	  REFERENCES "COMPANY"."T_INVENTARE" ("PK_INVENTAR") ON DELETE CASCADE ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table T_REL_BELEG_LOCATION
--------------------------------------------------------

  ALTER TABLE "COMPANY"."T_REL_BELEG_LOCATION" ADD CONSTRAINT "FK_T_REL_BELEG_LOCATION_BEL" FOREIGN KEY ("FK_BELEG")
	  REFERENCES "COMPANY"."T_BELEG" ("PK_BELEG") ENABLE;
  ALTER TABLE "COMPANY"."T_REL_BELEG_LOCATION" ADD CONSTRAINT "FK_T_REL_BELEG_LOCATION_LOC" FOREIGN KEY ("FK_LOCATION")
	  REFERENCES "COMPANY"."T_LOCATION" ("PK_LOCATION") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table T_REL_BELEG_PRODUKT
--------------------------------------------------------

  ALTER TABLE "COMPANY"."T_REL_BELEG_PRODUKT" ADD CONSTRAINT "FK_T_REL_BELEG_PRODUKT_BEL" FOREIGN KEY ("FK_BELEG")
	  REFERENCES "COMPANY"."T_BELEG" ("PK_BELEG") ENABLE;
  ALTER TABLE "COMPANY"."T_REL_BELEG_PRODUKT" ADD CONSTRAINT "FK_T_REL_BELEG_PRODUKT_PRO" FOREIGN KEY ("FK_PRODUKT")
	  REFERENCES "COMPANY"."T_PRODUKT" ("PK_PRODUKT") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table T_REL_BEL_KONT_ADR
--------------------------------------------------------

  ALTER TABLE "COMPANY"."T_REL_BEL_KONT_ADR" ADD CONSTRAINT "FK_T_REL_BEL_KONT_ADR_BEL" FOREIGN KEY ("FK_BELEG")
	  REFERENCES "COMPANY"."T_BELEG" ("PK_BELEG") ENABLE;
  ALTER TABLE "COMPANY"."T_REL_BEL_KONT_ADR" ADD CONSTRAINT "FK_T_REL_BEL_KONT_ADR_KON" FOREIGN KEY ("FK_KONT_ADR")
	  REFERENCES "COMPANY"."T_REL_KONTAKTPERSON_ADRESSE" ("PK_REL_KONTP_ADR") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table T_REL_GESCHAEFTSP_KONT
--------------------------------------------------------

  ALTER TABLE "COMPANY"."T_REL_GESCHAEFTSP_KONT" ADD CONSTRAINT "FK_T_REL_GESCHAEFTSP_KONT_ADR" FOREIGN KEY ("FK_ADRESSE")
	  REFERENCES "COMPANY"."T_ADRESSE" ("PK_ADRESSE") DISABLE;
  ALTER TABLE "COMPANY"."T_REL_GESCHAEFTSP_KONT" ADD CONSTRAINT "FK_T_REL_GESCHAEFTSP_KONT_GP" FOREIGN KEY ("FK_GESCHAEFTSPARTNER")
	  REFERENCES "COMPANY"."T_GESCHAEFTSPARTNER" ("PK_GESCHAEFTSPARTNER") DISABLE;
  ALTER TABLE "COMPANY"."T_REL_GESCHAEFTSP_KONT" ADD CONSTRAINT "FK_T_REL_GESCHAEFTSP_KONT_KT" FOREIGN KEY ("FK_KONTAKT")
	  REFERENCES "COMPANY"."T_KONTAKT" ("PK_KONTAKT") DISABLE;
--------------------------------------------------------
--  Ref Constraints for Table T_REL_GESCHAEFTSP_KUNR
--------------------------------------------------------

  ALTER TABLE "COMPANY"."T_REL_GESCHAEFTSP_KUNR" ADD CONSTRAINT "FK_T_REL_GP_KUNR_GP" FOREIGN KEY ("FK_GESCHÄFTSPARTNER")
	  REFERENCES "COMPANY"."T_GESCHAEFTSPARTNER" ("PK_GESCHAEFTSPARTNER") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table T_REL_INVENTAR_ARTIKEL
--------------------------------------------------------

  ALTER TABLE "COMPANY"."T_REL_INVENTAR_ARTIKEL" ADD CONSTRAINT "FK_T_REL_INVENTAR_ARTIKEL_INV" FOREIGN KEY ("FK_INVENTAR")
	  REFERENCES "COMPANY"."T_INVENTARE" ("PK_INVENTAR") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table T_REL_INVENTAR_INVENTARTYP
--------------------------------------------------------

  ALTER TABLE "COMPANY"."T_REL_INVENTAR_INVENTARTYP" ADD CONSTRAINT "FK_T_REL_INV_INVTYP_INV" FOREIGN KEY ("FK_INVENTAR")
	  REFERENCES "COMPANY"."T_INVENTARE" ("PK_INVENTAR") ENABLE;
  ALTER TABLE "COMPANY"."T_REL_INVENTAR_INVENTARTYP" ADD CONSTRAINT "FK_T_REL_INV_INVTYP_INVT" FOREIGN KEY ("FK_INVENTARTYP")
	  REFERENCES "COMPANY"."T_INVENTARTYP" ("PK_INVENTARTYP") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table T_REL_KONTAKT_KONTAKTTYP
--------------------------------------------------------

  ALTER TABLE "COMPANY"."T_REL_KONTAKT_KONTAKTTYP" ADD CONSTRAINT "FK_T_REL_KON_KONT_KON" FOREIGN KEY ("FK_KONTAKT")
	  REFERENCES "COMPANY"."T_KONTAKT" ("PK_KONTAKT") ENABLE;
  ALTER TABLE "COMPANY"."T_REL_KONTAKT_KONTAKTTYP" ADD CONSTRAINT "FK_T_REL_KON_KONT_KONT" FOREIGN KEY ("FK_KONTAKTTYP")
	  REFERENCES "COMPANY"."T_KONTAKTTYP" ("PK_KONTAKTTYP") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table T_REL_KONTAKTPERSON_ADRESSE
--------------------------------------------------------

  ALTER TABLE "COMPANY"."T_REL_KONTAKTPERSON_ADRESSE" ADD CONSTRAINT "FK_T_REL_KP_ADRES_ADR" FOREIGN KEY ("FK_ADRESSE")
	  REFERENCES "COMPANY"."T_ADRESSE" ("PK_ADRESSE") ENABLE;
  ALTER TABLE "COMPANY"."T_REL_KONTAKTPERSON_ADRESSE" ADD CONSTRAINT "FK_T_REL_KP_ADRES_GP" FOREIGN KEY ("FK_GESCHAEFTSPARTNER")
	  REFERENCES "COMPANY"."T_GESCHAEFTSPARTNER" ("PK_GESCHAEFTSPARTNER") ENABLE;
  ALTER TABLE "COMPANY"."T_REL_KONTAKTPERSON_ADRESSE" ADD CONSTRAINT "FK_T_REL_KP_ADRES_KONT" FOREIGN KEY ("FK_KONTAKT")
	  REFERENCES "COMPANY"."T_KONTAKT" ("PK_KONTAKT") ENABLE;
  ALTER TABLE "COMPANY"."T_REL_KONTAKTPERSON_ADRESSE" ADD CONSTRAINT "FK_T_REL_KP_ADRES_KONTP" FOREIGN KEY ("FK_KONTAKTPERSON")
	  REFERENCES "COMPANY"."T_PERSON" ("PK_PERSON") ENABLE;
  ALTER TABLE "COMPANY"."T_REL_KONTAKTPERSON_ADRESSE" ADD CONSTRAINT "FK_T_REL_KP_ADRES_OU" FOREIGN KEY ("FK_KONTAKTPERSON")
	  REFERENCES "COMPANY"."T_KONTAKT" ("PK_KONTAKT") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table T_REL_LOCATION_ADRESSE
--------------------------------------------------------

  ALTER TABLE "COMPANY"."T_REL_LOCATION_ADRESSE" ADD CONSTRAINT "FK_T_REL_LOCATION_ADRESSE_ADR" FOREIGN KEY ("FK_ADRESSE")
	  REFERENCES "COMPANY"."T_ADRESSE" ("PK_ADRESSE") ENABLE;
  ALTER TABLE "COMPANY"."T_REL_LOCATION_ADRESSE" ADD CONSTRAINT "FK_T_REL_LOCATION_ADRESSE_LOC" FOREIGN KEY ("FK_LOCATION")
	  REFERENCES "COMPANY"."T_LOCATION" ("PK_LOCATION") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table T_REL_PRODUKT_ARTIKEL
--------------------------------------------------------

  ALTER TABLE "COMPANY"."T_REL_PRODUKT_ARTIKEL" ADD CONSTRAINT "FK_T_REL_PRODUKT_ARTIKEL_PROD" FOREIGN KEY ("FK_PRODUKT")
	  REFERENCES "COMPANY"."T_PRODUKT" ("PK_PRODUKT") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table T_REL_PRODUKT_ENTNAHME
--------------------------------------------------------

  ALTER TABLE "COMPANY"."T_REL_PRODUKT_ENTNAHME" ADD CONSTRAINT "FK_T_REL_PRODUKT_ENT_BEL_PROD" FOREIGN KEY ("FK_BELEG_PRODUKT")
	  REFERENCES "COMPANY"."T_REL_BELEG_PRODUKT" ("PK_REL_BEL_PROD") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table T_REL_RECHNUNG_BELEG
--------------------------------------------------------

  ALTER TABLE "COMPANY"."T_REL_RECHNUNG_BELEG" ADD CONSTRAINT "FK_T_REL_RECHNUNG_BELEG_BEL" FOREIGN KEY ("FK_BELEG")
	  REFERENCES "COMPANY"."T_BELEG" ("PK_BELEG") ENABLE;
  ALTER TABLE "COMPANY"."T_REL_RECHNUNG_BELEG" ADD CONSTRAINT "FK_T_REL_RECHNUNG_BELEG_RE" FOREIGN KEY ("FK_RECHNUNG")
	  REFERENCES "COMPANY"."T_RECHNUNG" ("PK_RECHNUNG") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table T_REL_RECHNUNG_STUNDENZETTEL
--------------------------------------------------------

  ALTER TABLE "COMPANY"."T_REL_RECHNUNG_STUNDENZETTEL" ADD CONSTRAINT "FK_T_REL_RECHNUNG_STDZ_RE" FOREIGN KEY ("FK_RECHNUNG")
	  REFERENCES "COMPANY"."T_RECHNUNG" ("PK_RECHNUNG") ENABLE;
  ALTER TABLE "COMPANY"."T_REL_RECHNUNG_STUNDENZETTEL" ADD CONSTRAINT "FK_T_REL_RECHNUNG_STDZ_STDZ" FOREIGN KEY ("FK_STUNDENZETTEL")
	  REFERENCES "COMPANY"."T_STUNDENZETTEL" ("PK_STUNDENZETTEL") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table T_REL_STUNDENZETTEL_BELEG
--------------------------------------------------------

  ALTER TABLE "COMPANY"."T_REL_STUNDENZETTEL_BELEG" ADD CONSTRAINT "FK_T_REL_STDZ_BELEG_BEL" FOREIGN KEY ("FK_BELEG")
	  REFERENCES "COMPANY"."T_BELEG" ("PK_BELEG") ENABLE;
  ALTER TABLE "COMPANY"."T_REL_STUNDENZETTEL_BELEG" ADD CONSTRAINT "FK_T_REL_STDZ_BELEG_STDZ" FOREIGN KEY ("FK_STUNDENZETTEL")
	  REFERENCES "COMPANY"."T_STUNDENZETTEL" ("PK_STUNDENZETTEL") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table T_STUNDENZETTEL
--------------------------------------------------------

  ALTER TABLE "COMPANY"."T_STUNDENZETTEL" ADD CONSTRAINT "FK_T_STUNDENZETTEL_GEZV" FOREIGN KEY ("FK_GEZEICHNET_VON")
	  REFERENCES "COMPANY"."T_PERSON" ("PK_PERSON") ENABLE;
  ALTER TABLE "COMPANY"."T_STUNDENZETTEL" ADD CONSTRAINT "FK_T_STUNDENZETTEL_PROJ" FOREIGN KEY ("FK_PROJEKT")
	  REFERENCES "COMPANY"."T_PROJEKT" ("PK_PROJEKT") ENABLE;
